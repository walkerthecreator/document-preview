(function(dl,ll){typeof exports=="object"&&typeof module<"u"?ll(exports,require("react")):typeof define=="function"&&define.amd?define(["exports","react"],ll):(dl=typeof globalThis<"u"?globalThis:dl||self,ll(dl["document-preview"]={},dl.React))})(this,function(dl,ll){"use strict";var Xh=Object.defineProperty;var hs=dl=>{throw TypeError(dl)};var Yh=(dl,ll,Sl)=>ll in dl?Xh(dl,ll,{enumerable:!0,configurable:!0,writable:!0,value:Sl}):dl[ll]=Sl;var O=(dl,ll,Sl)=>Yh(dl,typeof ll!="symbol"?ll+"":ll,Sl),RR=(dl,ll,Sl)=>ll.has(dl)||hs("Cannot "+Sl);var F=(dl,ll,Sl)=>(RR(dl,ll,"read from private field"),Sl?Sl.call(dl):ll.get(dl)),h=(dl,ll,Sl)=>ll.has(dl)?hs("Cannot add the same private member more than once"):ll instanceof WeakSet?ll.add(dl):ll.set(dl,Sl),b=(dl,ll,Sl,PZ)=>(RR(dl,ll,"write to private field"),PZ?PZ.call(dl,Sl):ll.set(dl,Sl),Sl),m=(dl,ll,Sl)=>(RR(dl,ll,"access private method"),Sl);var SU=(dl,ll,Sl,PZ)=>({set _(bF){b(dl,ll,bF,Sl)},get _(){return F(dl,ll,PZ)}});var _Z,xc,NR,NV,Dd,JF,NZ,GF,sV,nV,Mc,ms,aU,is,Ms,jc,Js,sR,bV,TF,SF,Id,Gs,Ts,Ss,Jc,k0,aV,WU,D0,Oc,zl,Ed,hV,Bl,Gc,Xs,I0,DU,xl,ql,E0,$Z,C0,_U,Cd,XF,w0,YF,uZ,sZ,BF,mV,iV,x0,MV,yZ,wd,j0,xd,zZ,Sc,jd,JV,Od,eF,GV,TV,Kl,Rl,ld,pF,SV,XV,rd,LZ,Ud,YV,qU,y,rc,nR,Ys,Bs,gc,es,ps,us,bR,ys,aR,hR,zs,XU,pd,Ls,os,mR,ks,CW,iR,Hl,oZ,nZ,r0,kZ,IU,g0,DZ,pU,Zd,uF,IZ,gd,bZ,wW,Kc,BV,yF,eV,pV,uV,yV,zV,K0,dd,zF,Kd,Fd,Ds,Is,MR,LF,aZ,Ml,H0,Hd,LV,oF,$l,kF,Qd,vd,oV,DF,EU,kV,IF,Vd,EZ,v0,P0,$U,EF,DV,Xc,j,JR,IV,GR,Hc,Es,Cs,TR,vc,SR,ws,xs,js,XR,Os,YR,rs,gs,Ks,BR,xW,CF,wF,vl,Yc,Hs,EV,f0,A0,lZ,vs,Ps,fs,Pc,CV,xF,_0,Wd,cd,cU,jF,OF,z,nU,jW,KQ,fc,HQ,As,eR,vQ,OW,rW,pR,gW,hZ,uR,yR,zR,wV,xV,rF,jV,OV,rV,gV,q0,Pd,Nl,$0,lQ,KV,LR,ls,fd,uU,HV,vV,gF,td,PV,fV,KF,UQ,ZQ,Ad,dQ,AV,FQ,HF,_V,qV,vF,PF,$V,_d,QQ,Rd,_s,qs,oR,CU,Ac,kR,$s,ln,ec,qd,Nd,UZ,PQ,_c,sd,uc,yc,fF,AF,VQ,qc,WQ,$c,nd,CZ,cQ,tQ,bd,_F,KW,wU,lW,DR,$d,lF,qF,l0,RQ,NQ,UW,IR,xU,p0,Un,Zn,sQ,zc,Lc,nQ,U0,pl,ad,bQ,ZW,dW,aQ,hd,mZ,md,FW,id,QW,Z0,d0,sl,lt,ER,dn,Fn,Qn,Vn,Ut,Zt,CR,VW,WW,cW,tW,RW,F0,NW,wR,sW,nW,xR,bW,Q0,V0,aW,W0,Wn,jR,iZ,jU,hW,c0,OU,El,cn,tn,Rn,dt,Md,Ft,Qt,Nn,OR,sn,rU,MZ,hQ,mQ,wZ,q,t0,R0,mW,iW,iQ,MQ,UF,MW,oc,kc,Ol,HW,nn,bn,an,hn,mn,Mn,JQ,N0,Gd,JW,gU,GW,Ll,Dc,Jn,TW,SW,ZF,JZ,mU,Gn,Vt,Tn,Sn,rR,XW,GQ,GZ,s0,TQ,rl,YW,SQ,BW,eW,dF,TZ,XQ,pW,nl,gR,KR,HR,u0,Xn,nF,YQ,uW,Td,n0,BQ,zU,yW,zW,b0,ZZ,KU,lU,eQ,Sd,tU,pQ,dZ,LW,H,vR,Wt,Yn,Bn,en,PR,y0,FZ,fQ,pn,ct,vW,un,yn,zn,Ln,on,a0,HU,uQ,Pl,h0,m0,FF,QF,VF,i0,Ql,fR,AR,_R,PW,kn,tt,fW,AQ,xZ,fl,Al,M0,yQ,iU,UU,QZ,J0,G0,T0,zQ,Rt,MU,oW,kW,vU,jZ,OZ,LQ,oQ,kQ,ZU,ud,Dn,In,En,DQ,Ic,Cn,el,dU,WF,Xd,cF,EQ,rZ,gZ,PU,CQ,Vl,AW,_W,Nt,qR,st,$R,nt,wn,S0,wQ,KZ,tF,Yd,VZ,RF,xQ,X0,SZ,Bd,RU,ed,E,NF,Tl,xn,vZ,lN,UN,bt,YZ,IW,JU,Y0,Ec,jn,HZ,ZN,On,dN;var Sl=typeof document<"u"?document.currentScript:null,PZ={exports:{}},bF={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var FN;function rn(){if(FN)return bF;FN=1;var N=ll,l=Symbol.for("react.element"),U=Symbol.for("react.fragment"),Z=Object.prototype.hasOwnProperty,d=N.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,Q={key:!0,ref:!0,__self:!0,__source:!0};function V(W,c,t){var R,s={},n=null,a=null;t!==void 0&&(n=""+t),c.key!==void 0&&(n=""+c.key),c.ref!==void 0&&(a=c.ref);for(R in c)Z.call(c,R)&&!Q.hasOwnProperty(R)&&(s[R]=c[R]);if(W&&W.defaultProps)for(R in c=W.defaultProps,c)s[R]===void 0&&(s[R]=c[R]);return{$$typeof:l,type:W,key:n,ref:a,props:s,_owner:d.current}}return bF.Fragment=U,bF.jsx=V,bF.jsxs=V,bF}var _Q={};/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var QN;function gn(){return QN||(QN=1,process.env.NODE_ENV!=="production"&&function(){var N=ll,l=Symbol.for("react.element"),U=Symbol.for("react.portal"),Z=Symbol.for("react.fragment"),d=Symbol.for("react.strict_mode"),Q=Symbol.for("react.profiler"),V=Symbol.for("react.provider"),W=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),t=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),s=Symbol.for("react.memo"),n=Symbol.for("react.lazy"),a=Symbol.for("react.offscreen"),i=Symbol.iterator,M="@@iterator";function G(T){if(T===null||typeof T!="object")return null;var u=i&&T[i]||T[M];return typeof u=="function"?u:null}var J=N.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function S(T){{for(var u=arguments.length,L=new Array(u>1?u-1:0),K=1;K<u;K++)L[K-1]=arguments[K];X("error",T,L)}}function X(T,u,L){{var K=J.ReactDebugCurrentFrame,tl=K.getStackAddendum();tl!==""&&(u+="%s",L=L.concat([tl]));var ml=L.map(function(Fl){return String(Fl)});ml.unshift("Warning: "+u),Function.prototype.apply.call(console[T],console,ml)}}var Y=!1,B=!1,p=!1,e=!1,o=!1,w;w=Symbol.for("react.module.reference");function f(T){return!!(typeof T=="string"||typeof T=="function"||T===Z||T===Q||o||T===d||T===t||T===R||e||T===a||Y||B||p||typeof T=="object"&&T!==null&&(T.$$typeof===n||T.$$typeof===s||T.$$typeof===V||T.$$typeof===W||T.$$typeof===c||T.$$typeof===w||T.getModuleId!==void 0))}function r(T,u,L){var K=T.displayName;if(K)return K;var tl=u.displayName||u.name||"";return tl!==""?L+"("+tl+")":L}function hl(T){return T.displayName||"Context"}function cl(T){if(T==null)return null;if(typeof T.tag=="number"&&S("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."),typeof T=="function")return T.displayName||T.name||null;if(typeof T=="string")return T;switch(T){case Z:return"Fragment";case U:return"Portal";case Q:return"Profiler";case d:return"StrictMode";case t:return"Suspense";case R:return"SuspenseList"}if(typeof T=="object")switch(T.$$typeof){case W:var u=T;return hl(u)+".Consumer";case V:var L=T;return hl(L._context)+".Provider";case c:return r(T,T.render,"ForwardRef");case s:var K=T.displayName||null;return K!==null?K:cl(T.type)||"Memo";case n:{var tl=T,ml=tl._payload,Fl=tl._init;try{return cl(Fl(ml))}catch{return null}}}return null}var $=Object.assign,ol=0,k,x,sU,fU,WZ,GU,gl;function ul(){}ul.__reactDisabledLog=!0;function sF(){{if(ol===0){k=console.log,x=console.info,sU=console.warn,fU=console.error,WZ=console.group,GU=console.groupCollapsed,gl=console.groupEnd;var T={configurable:!0,enumerable:!0,value:ul,writable:!0};Object.defineProperties(console,{info:T,log:T,warn:T,error:T,group:T,groupCollapsed:T,groupEnd:T})}ol++}}function B0(){{if(ol--,ol===0){var T={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:$({},T,{value:k}),info:$({},T,{value:x}),warn:$({},T,{value:sU}),error:$({},T,{value:fU}),group:$({},T,{value:WZ}),groupCollapsed:$({},T,{value:GU}),groupEnd:$({},T,{value:gl})})}ol<0&&S("disabledDepth fell below zero. This is a bug in React. Please file an issue.")}}var _l=J.ReactCurrentDispatcher,bl;function BZ(T,u,L){{if(bl===void 0)try{throw Error()}catch(tl){var K=tl.stack.trim().match(/\n( *(at )?)/);bl=K&&K[1]||""}return`
`+bl+T}}var jQ=!1,OQ;{var $a=typeof WeakMap=="function"?WeakMap:Map;OQ=new $a}function Us(T,u){if(!T||jQ)return"";{var L=OQ.get(T);if(L!==void 0)return L}var K;jQ=!0;var tl=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var ml;ml=_l.current,_l.current=null,sF();try{if(u){var Fl=function(){throw Error()};if(Object.defineProperty(Fl.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Fl,[])}catch(LU){K=LU}Reflect.construct(T,[],Fl)}else{try{Fl.call()}catch(LU){K=LU}T.call(Fl.prototype)}}else{try{throw Error()}catch(LU){K=LU}T()}}catch(LU){if(LU&&K&&typeof LU.stack=="string"){for(var Ul=LU.stack.split(`
`),TU=K.stack.split(`
`),kl=Ul.length-1,Cl=TU.length-1;kl>=1&&Cl>=0&&Ul[kl]!==TU[Cl];)Cl--;for(;kl>=1&&Cl>=0;kl--,Cl--)if(Ul[kl]!==TU[Cl]){if(kl!==1||Cl!==1)do if(kl--,Cl--,Cl<0||Ul[kl]!==TU[Cl]){var cZ=`
`+Ul[kl].replace(" at new "," at ");return T.displayName&&cZ.includes("<anonymous>")&&(cZ=cZ.replace("<anonymous>",T.displayName)),typeof T=="function"&&OQ.set(T,cZ),cZ}while(kl>=1&&Cl>=0);break}}}finally{jQ=!1,_l.current=ml,B0(),Error.prepareStackTrace=tl}var gQ=T?T.displayName||T.name:"",e0=gQ?BZ(gQ):"";return typeof T=="function"&&OQ.set(T,e0),e0}function lh(T,u,L){return Us(T,!1)}function Uh(T){var u=T.prototype;return!!(u&&u.isReactComponent)}function Cc(T,u,L){if(T==null)return"";if(typeof T=="function")return Us(T,Uh(T));if(typeof T=="string")return BZ(T);switch(T){case t:return BZ("Suspense");case R:return BZ("SuspenseList")}if(typeof T=="object")switch(T.$$typeof){case c:return lh(T.render);case s:return Cc(T.type,u,L);case n:{var K=T,tl=K._payload,ml=K._init;try{return Cc(ml(tl),u,L)}catch{}}}return""}var EW=Object.prototype.hasOwnProperty,Zs={},ds=J.ReactDebugCurrentFrame;function wc(T){if(T){var u=T._owner,L=Cc(T.type,T._source,u?u.type:null);ds.setExtraStackFrame(L)}else ds.setExtraStackFrame(null)}function Zh(T,u,L,K,tl){{var ml=Function.call.bind(EW);for(var Fl in T)if(ml(T,Fl)){var Ul=void 0;try{if(typeof T[Fl]!="function"){var TU=Error((K||"React class")+": "+L+" type `"+Fl+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof T[Fl]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw TU.name="Invariant Violation",TU}Ul=T[Fl](u,Fl,K,L,null,"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED")}catch(kl){Ul=kl}Ul&&!(Ul instanceof Error)&&(wc(tl),S("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",K||"React class",L,Fl,typeof Ul),wc(null)),Ul instanceof Error&&!(Ul.message in Zs)&&(Zs[Ul.message]=!0,wc(tl),S("Failed %s type: %s",L,Ul.message),wc(null))}}}var dh=Array.isArray;function QR(T){return dh(T)}function Fh(T){{var u=typeof Symbol=="function"&&Symbol.toStringTag,L=u&&T[Symbol.toStringTag]||T.constructor.name||"Object";return L}}function Qh(T){try{return Fs(T),!1}catch{return!0}}function Fs(T){return""+T}function Qs(T){if(Qh(T))return S("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.",Fh(T)),Fs(T)}var Vs=J.ReactCurrentOwner,Vh={key:!0,ref:!0,__self:!0,__source:!0},Ws,cs;function Wh(T){if(EW.call(T,"ref")){var u=Object.getOwnPropertyDescriptor(T,"ref").get;if(u&&u.isReactWarning)return!1}return T.ref!==void 0}function ch(T){if(EW.call(T,"key")){var u=Object.getOwnPropertyDescriptor(T,"key").get;if(u&&u.isReactWarning)return!1}return T.key!==void 0}function th(T,u){typeof T.ref=="string"&&Vs.current}function Rh(T,u){{var L=function(){Ws||(Ws=!0,S("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",u))};L.isReactWarning=!0,Object.defineProperty(T,"key",{get:L,configurable:!0})}}function Nh(T,u){{var L=function(){cs||(cs=!0,S("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",u))};L.isReactWarning=!0,Object.defineProperty(T,"ref",{get:L,configurable:!0})}}var sh=function(T,u,L,K,tl,ml,Fl){var Ul={$$typeof:l,type:T,key:u,ref:L,props:Fl,_owner:ml};return Ul._store={},Object.defineProperty(Ul._store,"validated",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(Ul,"_self",{configurable:!1,enumerable:!1,writable:!1,value:K}),Object.defineProperty(Ul,"_source",{configurable:!1,enumerable:!1,writable:!1,value:tl}),Object.freeze&&(Object.freeze(Ul.props),Object.freeze(Ul)),Ul};function nh(T,u,L,K,tl){{var ml,Fl={},Ul=null,TU=null;L!==void 0&&(Qs(L),Ul=""+L),ch(u)&&(Qs(u.key),Ul=""+u.key),Wh(u)&&(TU=u.ref,th(u,tl));for(ml in u)EW.call(u,ml)&&!Vh.hasOwnProperty(ml)&&(Fl[ml]=u[ml]);if(T&&T.defaultProps){var kl=T.defaultProps;for(ml in kl)Fl[ml]===void 0&&(Fl[ml]=kl[ml])}if(Ul||TU){var Cl=typeof T=="function"?T.displayName||T.name||"Unknown":T;Ul&&Rh(Fl,Cl),TU&&Nh(Fl,Cl)}return sh(T,Ul,TU,tl,K,Vs.current,Fl)}}var VR=J.ReactCurrentOwner,ts=J.ReactDebugCurrentFrame;function rQ(T){if(T){var u=T._owner,L=Cc(T.type,T._source,u?u.type:null);ts.setExtraStackFrame(L)}else ts.setExtraStackFrame(null)}var WR;WR=!1;function cR(T){return typeof T=="object"&&T!==null&&T.$$typeof===l}function Rs(){{if(VR.current){var T=cl(VR.current.type);if(T)return`

Check the render method of \``+T+"`."}return""}}function bh(T){return""}var Ns={};function ah(T){{var u=Rs();if(!u){var L=typeof T=="string"?T:T.displayName||T.name;L&&(u=`

Check the top-level render call using <`+L+">.")}return u}}function ss(T,u){{if(!T._store||T._store.validated||T.key!=null)return;T._store.validated=!0;var L=ah(u);if(Ns[L])return;Ns[L]=!0;var K="";T&&T._owner&&T._owner!==VR.current&&(K=" It was passed a child from "+cl(T._owner.type)+"."),rQ(T),S('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',L,K),rQ(null)}}function ns(T,u){{if(typeof T!="object")return;if(QR(T))for(var L=0;L<T.length;L++){var K=T[L];cR(K)&&ss(K,u)}else if(cR(T))T._store&&(T._store.validated=!0);else if(T){var tl=G(T);if(typeof tl=="function"&&tl!==T.entries)for(var ml=tl.call(T),Fl;!(Fl=ml.next()).done;)cR(Fl.value)&&ss(Fl.value,u)}}}function hh(T){{var u=T.type;if(u==null||typeof u=="string")return;var L;if(typeof u=="function")L=u.propTypes;else if(typeof u=="object"&&(u.$$typeof===c||u.$$typeof===s))L=u.propTypes;else return;if(L){var K=cl(u);Zh(L,T.props,"prop",K,T)}else if(u.PropTypes!==void 0&&!WR){WR=!0;var tl=cl(u);S("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",tl||"Unknown")}typeof u.getDefaultProps=="function"&&!u.getDefaultProps.isReactClassApproved&&S("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.")}}function mh(T){{for(var u=Object.keys(T.props),L=0;L<u.length;L++){var K=u[L];if(K!=="children"&&K!=="key"){rQ(T),S("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",K),rQ(null);break}}T.ref!==null&&(rQ(T),S("Invalid attribute `ref` supplied to `React.Fragment`."),rQ(null))}}var bs={};function as(T,u,L,K,tl,ml){{var Fl=f(T);if(!Fl){var Ul="";(T===void 0||typeof T=="object"&&T!==null&&Object.keys(T).length===0)&&(Ul+=" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");var TU=bh();TU?Ul+=TU:Ul+=Rs();var kl;T===null?kl="null":QR(T)?kl="array":T!==void 0&&T.$$typeof===l?(kl="<"+(cl(T.type)||"Unknown")+" />",Ul=" Did you accidentally export a JSX literal instead of a component?"):kl=typeof T,S("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",kl,Ul)}var Cl=nh(T,u,L,tl,ml);if(Cl==null)return Cl;if(Fl){var cZ=u.children;if(cZ!==void 0)if(K)if(QR(cZ)){for(var gQ=0;gQ<cZ.length;gQ++)ns(cZ[gQ],T);Object.freeze&&Object.freeze(cZ)}else S("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");else ns(cZ,T)}if(EW.call(u,"key")){var e0=cl(T),LU=Object.keys(u).filter(function(Sh){return Sh!=="key"}),tR=LU.length>0?"{key: someKey, "+LU.join(": ..., ")+": ...}":"{key: someKey}";if(!bs[e0+tR]){var Th=LU.length>0?"{"+LU.join(": ..., ")+": ...}":"{}";S(`A props object containing a "key" prop is being spread into JSX:
  let props = %s;
  <%s {...props} />
React keys must be passed directly to JSX without using spread:
  let props = %s;
  <%s key={someKey} {...props} />`,tR,e0,Th,e0),bs[e0+tR]=!0}}return T===Z?mh(Cl):hh(Cl),Cl}}function ih(T,u,L){return as(T,u,L,!0)}function Mh(T,u,L){return as(T,u,L,!1)}var Jh=Mh,Gh=ih;_Q.Fragment=Z,_Q.jsx=Jh,_Q.jsxs=Gh}()),_Q}var VN;function Kn(){return VN||(VN=1,process.env.NODE_ENV==="production"?PZ.exports=rn():PZ.exports=gn()),PZ.exports}var Xl=Kn(),qQ={};qQ.d=(N,l)=>{for(var U in l)qQ.o(l,U)&&!qQ.o(N,U)&&Object.defineProperty(N,U,{enumerable:!0,get:l[U]})},qQ.o=(N,l)=>Object.prototype.hasOwnProperty.call(N,l);var g=globalThis.pdfjsLib={};qQ.d(g,{AbortException:()=>Ld,AnnotationEditorLayer:()=>_t,AnnotationEditorParamsType:()=>Zl,AnnotationEditorType:()=>v,AnnotationEditorUIManager:()=>hF,AnnotationLayer:()=>xa,AnnotationMode:()=>yd,ColorPicker:()=>hc,DOMSVGFactory:()=>jt,DrawLayer:()=>qt,FeatureTest:()=>bU,GlobalWorkerOptions:()=>AZ,ImageKind:()=>qW,InvalidPDFException:()=>it,MissingPDFException:()=>lV,OPS:()=>tZ,OutputScale:()=>et,PDFDataRangeTransport:()=>jN,PDFDateString:()=>Yt,PDFWorker:()=>o0,PasswordResponses:()=>fn,PermissionFlag:()=>Pn,PixelsPerInch:()=>od,RenderingCancelledException:()=>St,TextLayer:()=>VV,TouchManager:()=>cc,UnexpectedResponseException:()=>Zc,Util:()=>C,VerbosityLevel:()=>$W,XfaLayer:()=>KN,build:()=>Ja,createValidAbsoluteUrl:()=>$n,fetchData:()=>Fc,getDocument:()=>Na,getFilenameFromUrl:()=>cb,getPdfFilenameFromUrl:()=>tb,getXfaPageViewport:()=>Rb,isDataScheme:()=>Qc,isPdfFile:()=>Xt,noContextMenu:()=>RZ,normalizeUnicode:()=>Qb,setLayerDimensions:()=>aF,shadow:()=>_,stopEvent:()=>kU,version:()=>Ma});const FU=typeof process=="object"&&process+""=="[object process]"&&!process.versions.nw&&!(process.versions.electron&&process.type&&process.type!=="browser"),WN=[1,0,0,1,0,0],at=[.001,0,0,.001,0,0],Hn=1e7,ht=1.35,oU={ANY:1,DISPLAY:2,PRINT:4,SAVE:8,ANNOTATIONS_FORMS:16,ANNOTATIONS_STORAGE:32,ANNOTATIONS_DISABLE:64,IS_EDITING:128,OPLIST:256},yd={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3},vn="pdfjs_internal_editor_",v={DISABLE:-1,NONE:0,FREETEXT:3,HIGHLIGHT:9,STAMP:13,INK:15},Zl={RESIZE:1,CREATE:2,FREETEXT_SIZE:11,FREETEXT_COLOR:12,FREETEXT_OPACITY:13,INK_COLOR:21,INK_THICKNESS:22,INK_OPACITY:23,HIGHLIGHT_COLOR:31,HIGHLIGHT_DEFAULT_COLOR:32,HIGHLIGHT_THICKNESS:33,HIGHLIGHT_FREE:34,HIGHLIGHT_SHOW_ALL:35,DRAW_STEP:41},Pn={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},QU={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4},qW={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},wl={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26},$Q={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5},$W={ERRORS:0,WARNINGS:1,INFOS:5},tZ={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91,setStrokeTransparent:92,setFillTransparent:93},fn={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let lc=$W.WARNINGS;function An(N){Number.isInteger(N)&&(lc=N)}function _n(){return lc}function Uc(N){lc>=$W.INFOS&&console.log(`Info: ${N}`)}function P(N){lc>=$W.WARNINGS&&console.log(`Warning: ${N}`)}function al(N){throw new Error(N)}function Dl(N,l){N||al(l)}function qn(N){switch(N==null?void 0:N.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}function $n(N,l=null,U=null){if(!N)return null;try{if(U&&typeof N=="string"){if(U.addDefaultProtocol&&N.startsWith("www.")){const d=N.match(/\./g);(d==null?void 0:d.length)>=2&&(N=`http://${N}`)}if(U.tryConvertEncoding)try{N=Fb(N)}catch{}}const Z=l?new URL(N,l):new URL(N);if(qn(Z))return Z}catch{}return null}function _(N,l,U,Z=!1){return Object.defineProperty(N,l,{value:U,enumerable:!Z,configurable:!0,writable:!1}),U}const zd=function(){function l(U,Z){this.message=U,this.name=Z}return l.prototype=new Error,l.constructor=l,l}();class cN extends zd{constructor(l,U){super(l,"PasswordException"),this.code=U}}class mt extends zd{constructor(l,U){super(l,"UnknownErrorException"),this.details=U}}class it extends zd{constructor(l){super(l,"InvalidPDFException")}}class lV extends zd{constructor(l){super(l,"MissingPDFException")}}class Zc extends zd{constructor(l,U){super(l,"UnexpectedResponseException"),this.status=U}}class lb extends zd{constructor(l){super(l,"FormatError")}}class Ld extends zd{constructor(l){super(l,"AbortException")}}function tN(N){(typeof N!="object"||(N==null?void 0:N.length)===void 0)&&al("Invalid argument for bytesToString");const l=N.length,U=8192;if(l<U)return String.fromCharCode.apply(null,N);const Z=[];for(let d=0;d<l;d+=U){const Q=Math.min(d+U,l),V=N.subarray(d,Q);Z.push(String.fromCharCode.apply(null,V))}return Z.join("")}function dc(N){typeof N!="string"&&al("Invalid argument for stringToBytes");const l=N.length,U=new Uint8Array(l);for(let Z=0;Z<l;++Z)U[Z]=N.charCodeAt(Z)&255;return U}function Ub(N){return String.fromCharCode(N>>24&255,N>>16&255,N>>8&255,N&255)}function Mt(N){const l=Object.create(null);for(const[U,Z]of N)l[U]=Z;return l}function Zb(){const N=new Uint8Array(4);return N[0]=1,new Uint32Array(N.buffer,0,1)[0]===1}function db(){try{return new Function(""),!0}catch{return!1}}class bU{static get isLittleEndian(){return _(this,"isLittleEndian",Zb())}static get isEvalSupported(){return _(this,"isEvalSupported",db())}static get isOffscreenCanvasSupported(){return _(this,"isOffscreenCanvasSupported",typeof OffscreenCanvas<"u")}static get isImageDecoderSupported(){return _(this,"isImageDecoderSupported",typeof ImageDecoder<"u")}static get platform(){return typeof navigator<"u"&&typeof(navigator==null?void 0:navigator.platform)=="string"?_(this,"platform",{isMac:navigator.platform.includes("Mac"),isWindows:navigator.platform.includes("Win"),isFirefox:typeof(navigator==null?void 0:navigator.userAgent)=="string"&&navigator.userAgent.includes("Firefox")}):_(this,"platform",{isMac:!1,isWindows:!1,isFirefox:!1})}static get isCSSRoundSupported(){var l,U;return _(this,"isCSSRoundSupported",(U=(l=globalThis.CSS)==null?void 0:l.supports)==null?void 0:U.call(l,"width: round(1.5px, 1px)"))}}const Jt=Array.from(Array(256).keys(),N=>N.toString(16).padStart(2,"0"));class C{static makeHexColor(l,U,Z){return`#${Jt[l]}${Jt[U]}${Jt[Z]}`}static scaleMinMax(l,U){let Z;l[0]?(l[0]<0&&(Z=U[0],U[0]=U[2],U[2]=Z),U[0]*=l[0],U[2]*=l[0],l[3]<0&&(Z=U[1],U[1]=U[3],U[3]=Z),U[1]*=l[3],U[3]*=l[3]):(Z=U[0],U[0]=U[1],U[1]=Z,Z=U[2],U[2]=U[3],U[3]=Z,l[1]<0&&(Z=U[1],U[1]=U[3],U[3]=Z),U[1]*=l[1],U[3]*=l[1],l[2]<0&&(Z=U[0],U[0]=U[2],U[2]=Z),U[0]*=l[2],U[2]*=l[2]),U[0]+=l[4],U[1]+=l[5],U[2]+=l[4],U[3]+=l[5]}static transform(l,U){return[l[0]*U[0]+l[2]*U[1],l[1]*U[0]+l[3]*U[1],l[0]*U[2]+l[2]*U[3],l[1]*U[2]+l[3]*U[3],l[0]*U[4]+l[2]*U[5]+l[4],l[1]*U[4]+l[3]*U[5]+l[5]]}static applyTransform(l,U){const Z=l[0]*U[0]+l[1]*U[2]+U[4],d=l[0]*U[1]+l[1]*U[3]+U[5];return[Z,d]}static applyInverseTransform(l,U){const Z=U[0]*U[3]-U[1]*U[2],d=(l[0]*U[3]-l[1]*U[2]+U[2]*U[5]-U[4]*U[3])/Z,Q=(-l[0]*U[1]+l[1]*U[0]+U[4]*U[1]-U[5]*U[0])/Z;return[d,Q]}static getAxialAlignedBoundingBox(l,U){const Z=this.applyTransform(l,U),d=this.applyTransform(l.slice(2,4),U),Q=this.applyTransform([l[0],l[3]],U),V=this.applyTransform([l[2],l[1]],U);return[Math.min(Z[0],d[0],Q[0],V[0]),Math.min(Z[1],d[1],Q[1],V[1]),Math.max(Z[0],d[0],Q[0],V[0]),Math.max(Z[1],d[1],Q[1],V[1])]}static inverseTransform(l){const U=l[0]*l[3]-l[1]*l[2];return[l[3]/U,-l[1]/U,-l[2]/U,l[0]/U,(l[2]*l[5]-l[4]*l[3])/U,(l[4]*l[1]-l[5]*l[0])/U]}static singularValueDecompose2dScale(l){const U=[l[0],l[2],l[1],l[3]],Z=l[0]*U[0]+l[1]*U[2],d=l[0]*U[1]+l[1]*U[3],Q=l[2]*U[0]+l[3]*U[2],V=l[2]*U[1]+l[3]*U[3],W=(Z+V)/2,c=Math.sqrt((Z+V)**2-4*(Z*V-Q*d))/2,t=W+c||1,R=W-c||1;return[Math.sqrt(t),Math.sqrt(R)]}static normalizeRect(l){const U=l.slice(0);return l[0]>l[2]&&(U[0]=l[2],U[2]=l[0]),l[1]>l[3]&&(U[1]=l[3],U[3]=l[1]),U}static intersect(l,U){const Z=Math.max(Math.min(l[0],l[2]),Math.min(U[0],U[2])),d=Math.min(Math.max(l[0],l[2]),Math.max(U[0],U[2]));if(Z>d)return null;const Q=Math.max(Math.min(l[1],l[3]),Math.min(U[1],U[3])),V=Math.min(Math.max(l[1],l[3]),Math.max(U[1],U[3]));return Q>V?null:[Z,Q,d,V]}static bezierBoundingBox(l,U,Z,d,Q,V,W,c,t){return t?(t[0]=Math.min(t[0],l,W),t[1]=Math.min(t[1],U,c),t[2]=Math.max(t[2],l,W),t[3]=Math.max(t[3],U,c)):t=[Math.min(l,W),Math.min(U,c),Math.max(l,W),Math.max(U,c)],m(this,_Z,NR).call(this,l,Z,Q,W,U,d,V,c,3*(-l+3*(Z-Q)+W),6*(l-2*Z+Q),3*(Z-l),t),m(this,_Z,NR).call(this,l,Z,Q,W,U,d,V,c,3*(-U+3*(d-V)+c),6*(U-2*d+V),3*(d-U),t),t}}_Z=new WeakSet,xc=function(l,U,Z,d,Q,V,W,c,t,R){if(t<=0||t>=1)return;const s=1-t,n=t*t,a=n*t,i=s*(s*(s*l+3*t*U)+3*n*Z)+a*d,M=s*(s*(s*Q+3*t*V)+3*n*W)+a*c;R[0]=Math.min(R[0],i),R[1]=Math.min(R[1],M),R[2]=Math.max(R[2],i),R[3]=Math.max(R[3],M)},NR=function(l,U,Z,d,Q,V,W,c,t,R,s,n){if(Math.abs(t)<1e-12){Math.abs(R)>=1e-12&&m(this,_Z,xc).call(this,l,U,Z,d,Q,V,W,c,-s/R,n);return}const a=R**2-4*s*t;if(a<0)return;const i=Math.sqrt(a),M=2*t;m(this,_Z,xc).call(this,l,U,Z,d,Q,V,W,c,(-R+i)/M,n),m(this,_Z,xc).call(this,l,U,Z,d,Q,V,W,c,(-R-i)/M,n)},h(C,_Z);function Fb(N){return decodeURIComponent(escape(N))}let Gt=null,RN=null;function Qb(N){return Gt||(Gt=/([\u00a0\u00b5\u037e\u0eb3\u2000-\u200a\u202f\u2126\ufb00-\ufb04\ufb06\ufb20-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufba1\ufba4-\ufba9\ufbae-\ufbb1\ufbd3-\ufbdc\ufbde-\ufbe7\ufbea-\ufbf8\ufbfc-\ufbfd\ufc00-\ufc5d\ufc64-\ufcf1\ufcf5-\ufd3d\ufd88\ufdf4\ufdfa-\ufdfb\ufe71\ufe77\ufe79\ufe7b\ufe7d]+)|(\ufb05+)/gu,RN=new Map([["ﬅ","ſt"]])),N.replaceAll(Gt,(l,U,Z)=>U?U.normalize("NFKC"):RN.get(Z))}function Vb(){if(typeof crypto.randomUUID=="function")return crypto.randomUUID();const N=new Uint8Array(32);return crypto.getRandomValues(N),tN(N)}const Tt="pdfjs_internal_id_";function Wb(N){return Uint8Array.prototype.toBase64?N.toBase64():btoa(tN(N))}typeof Promise.try!="function"&&(Promise.try=function(N,...l){return new Promise(U=>{U(N(...l))})});const fZ="http://www.w3.org/2000/svg",MF=class MF{};O(MF,"CSS",96),O(MF,"PDF",72),O(MF,"PDF_TO_CSS_UNITS",MF.CSS/MF.PDF);let od=MF;async function Fc(N,l="text"){if(ZV(N,document.baseURI)){const U=await fetch(N);if(!U.ok)throw new Error(U.statusText);switch(l){case"arraybuffer":return U.arrayBuffer();case"blob":return U.blob();case"json":return U.json()}return U.text()}return new Promise((U,Z)=>{const d=new XMLHttpRequest;d.open("GET",N,!0),d.responseType=l,d.onreadystatechange=()=>{if(d.readyState===XMLHttpRequest.DONE){if(d.status===200||d.status===0){switch(l){case"arraybuffer":case"blob":case"json":U(d.response);return}U(d.responseText);return}Z(new Error(d.statusText))}},d.send(null)})}class UV{constructor({viewBox:l,userUnit:U,scale:Z,rotation:d,offsetX:Q=0,offsetY:V=0,dontFlip:W=!1}){this.viewBox=l,this.userUnit=U,this.scale=Z,this.rotation=d,this.offsetX=Q,this.offsetY=V,Z*=U;const c=(l[2]+l[0])/2,t=(l[3]+l[1])/2;let R,s,n,a;switch(d%=360,d<0&&(d+=360),d){case 180:R=-1,s=0,n=0,a=1;break;case 90:R=0,s=1,n=1,a=0;break;case 270:R=0,s=-1,n=-1,a=0;break;case 0:R=1,s=0,n=0,a=-1;break;default:throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.")}W&&(n=-n,a=-a);let i,M,G,J;R===0?(i=Math.abs(t-l[1])*Z+Q,M=Math.abs(c-l[0])*Z+V,G=(l[3]-l[1])*Z,J=(l[2]-l[0])*Z):(i=Math.abs(c-l[0])*Z+Q,M=Math.abs(t-l[1])*Z+V,G=(l[2]-l[0])*Z,J=(l[3]-l[1])*Z),this.transform=[R*Z,s*Z,n*Z,a*Z,i-R*Z*c-n*Z*t,M-s*Z*c-a*Z*t],this.width=G,this.height=J}get rawDims(){const{userUnit:l,viewBox:U}=this,Z=U.map(d=>d*l);return _(this,"rawDims",{pageWidth:Z[2]-Z[0],pageHeight:Z[3]-Z[1],pageX:Z[0],pageY:Z[1]})}clone({scale:l=this.scale,rotation:U=this.rotation,offsetX:Z=this.offsetX,offsetY:d=this.offsetY,dontFlip:Q=!1}={}){return new UV({viewBox:this.viewBox.slice(),userUnit:this.userUnit,scale:l,rotation:U,offsetX:Z,offsetY:d,dontFlip:Q})}convertToViewportPoint(l,U){return C.applyTransform([l,U],this.transform)}convertToViewportRectangle(l){const U=C.applyTransform([l[0],l[1]],this.transform),Z=C.applyTransform([l[2],l[3]],this.transform);return[U[0],U[1],Z[0],Z[1]]}convertToPdfPoint(l,U){return C.applyInverseTransform([l,U],this.transform)}}class St extends zd{constructor(l,U=0){super(l,"RenderingCancelledException"),this.extraDelay=U}}function Qc(N){const l=N.length;let U=0;for(;U<l&&N[U].trim()==="";)U++;return N.substring(U,U+5).toLowerCase()==="data:"}function Xt(N){return typeof N=="string"&&/\.pdf$/i.test(N)}function cb(N){return[N]=N.split(/[#?]/,1),N.substring(N.lastIndexOf("/")+1)}function tb(N,l="document.pdf"){if(typeof N!="string")return l;if(Qc(N))return P('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.'),l;const U=/^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/,Z=/[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i,d=U.exec(N);let Q=Z.exec(d[1])||Z.exec(d[2])||Z.exec(d[3]);if(Q&&(Q=Q[0],Q.includes("%")))try{Q=Z.exec(decodeURIComponent(Q))[0]}catch{}return Q||l}class NN{constructor(){O(this,"started",Object.create(null));O(this,"times",[])}time(l){l in this.started&&P(`Timer is already running for ${l}`),this.started[l]=Date.now()}timeEnd(l){l in this.started||P(`Timer has not been started for ${l}`),this.times.push({name:l,start:this.started[l],end:Date.now()}),delete this.started[l]}toString(){const l=[];let U=0;for(const{name:Z}of this.times)U=Math.max(Z.length,U);for(const{name:Z,start:d,end:Q}of this.times)l.push(`${Z.padEnd(U)} ${Q-d}ms
`);return l.join("")}}function ZV(N,l){try{const{protocol:U}=l?new URL(N,l):new URL(N);return U==="http:"||U==="https:"}catch{return!1}}function RZ(N){N.preventDefault()}function kU(N){N.preventDefault(),N.stopPropagation()}class Yt{static toDateObject(l){if(!l||typeof l!="string")return null;F(this,NV)||b(this,NV,new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?"));const U=F(this,NV).exec(l);if(!U)return null;const Z=parseInt(U[1],10);let d=parseInt(U[2],10);d=d>=1&&d<=12?d-1:0;let Q=parseInt(U[3],10);Q=Q>=1&&Q<=31?Q:1;let V=parseInt(U[4],10);V=V>=0&&V<=23?V:0;let W=parseInt(U[5],10);W=W>=0&&W<=59?W:0;let c=parseInt(U[6],10);c=c>=0&&c<=59?c:0;const t=U[7]||"Z";let R=parseInt(U[8],10);R=R>=0&&R<=23?R:0;let s=parseInt(U[9],10)||0;return s=s>=0&&s<=59?s:0,t==="-"?(V+=R,W+=s):t==="+"&&(V-=R,W-=s),new Date(Date.UTC(Z,d,Q,V,W,c))}}NV=new WeakMap,h(Yt,NV);function Rb(N,{scale:l=1,rotation:U=0}){const{width:Z,height:d}=N.attributes.style,Q=[0,0,parseInt(Z),parseInt(d)];return new UV({viewBox:Q,userUnit:1,scale:l,rotation:U})}function Bt(N){if(N.startsWith("#")){const l=parseInt(N.slice(1),16);return[(l&16711680)>>16,(l&65280)>>8,l&255]}return N.startsWith("rgb(")?N.slice(4,-1).split(",").map(l=>parseInt(l)):N.startsWith("rgba(")?N.slice(5,-1).split(",").map(l=>parseInt(l)).slice(0,3):(P(`Not a valid color format: "${N}"`),[0,0,0])}function Nb(N){const l=document.createElement("span");l.style.visibility="hidden",document.body.append(l);for(const U of N.keys()){l.style.color=U;const Z=window.getComputedStyle(l).color;N.set(U,Bt(Z))}l.remove()}function Jl(N){const{a:l,b:U,c:Z,d,e:Q,f:V}=N.getTransform();return[l,U,Z,d,Q,V]}function eZ(N){const{a:l,b:U,c:Z,d,e:Q,f:V}=N.getTransform().invertSelf();return[l,U,Z,d,Q,V]}function aF(N,l,U=!1,Z=!0){if(l instanceof UV){const{pageWidth:d,pageHeight:Q}=l.rawDims,{style:V}=N,W=bU.isCSSRoundSupported,c=`var(--scale-factor) * ${d}px`,t=`var(--scale-factor) * ${Q}px`,R=W?`round(down, ${c}, var(--scale-round-x, 1px))`:`calc(${c})`,s=W?`round(down, ${t}, var(--scale-round-y, 1px))`:`calc(${t})`;!U||l.rotation%180===0?(V.width=R,V.height=s):(V.width=s,V.height=R)}Z&&N.setAttribute("data-main-rotation",l.rotation)}class et{constructor(){const l=window.devicePixelRatio||1;this.sx=l,this.sy=l}get scaled(){return this.sx!==1||this.sy!==1}get symmetric(){return this.sx===this.sy}}const qZ=class qZ{constructor(l){h(this,aU);h(this,Dd,null);h(this,JF,null);h(this,NZ);h(this,GF,null);h(this,sV,null);b(this,NZ,l),F(qZ,nV)||b(qZ,nV,Object.freeze({freetext:"pdfjs-editor-remove-freetext-button",highlight:"pdfjs-editor-remove-highlight-button",ink:"pdfjs-editor-remove-ink-button",stamp:"pdfjs-editor-remove-stamp-button"}))}render(){const l=b(this,Dd,document.createElement("div"));l.classList.add("editToolbar","hidden"),l.setAttribute("role","toolbar");const U=F(this,NZ)._uiManager._signal;l.addEventListener("contextmenu",RZ,{signal:U}),l.addEventListener("pointerdown",m(qZ,Mc,ms),{signal:U});const Z=b(this,GF,document.createElement("div"));Z.className="buttons",l.append(Z);const d=F(this,NZ).toolbarPosition;if(d){const{style:Q}=l,V=F(this,NZ)._uiManager.direction==="ltr"?1-d[0]:d[0];Q.insetInlineEnd=`${100*V}%`,Q.top=`calc(${100*d[1]}% + var(--editor-toolbar-vert-offset))`}return m(this,aU,Js).call(this),l}get div(){return F(this,Dd)}hide(){var l;F(this,Dd).classList.add("hidden"),(l=F(this,JF))==null||l.hideDropdown()}show(){var l;F(this,Dd).classList.remove("hidden"),(l=F(this,sV))==null||l.shown()}async addAltText(l){const U=await l.render();m(this,aU,jc).call(this,U),F(this,GF).prepend(U,F(this,aU,sR)),b(this,sV,l)}addColorPicker(l){b(this,JF,l);const U=l.renderButton();m(this,aU,jc).call(this,U),F(this,GF).prepend(U,F(this,aU,sR))}remove(){var l;F(this,Dd).remove(),(l=F(this,JF))==null||l.destroy(),b(this,JF,null)}};Dd=new WeakMap,JF=new WeakMap,NZ=new WeakMap,GF=new WeakMap,sV=new WeakMap,nV=new WeakMap,Mc=new WeakSet,ms=function(l){l.stopPropagation()},aU=new WeakSet,is=function(l){F(this,NZ)._focusEventsAllowed=!1,kU(l)},Ms=function(l){F(this,NZ)._focusEventsAllowed=!0,kU(l)},jc=function(l){const U=F(this,NZ)._uiManager._signal;l.addEventListener("focusin",m(this,aU,is).bind(this),{capture:!0,signal:U}),l.addEventListener("focusout",m(this,aU,Ms).bind(this),{capture:!0,signal:U}),l.addEventListener("contextmenu",RZ,{signal:U})},Js=function(){const{editorType:l,_uiManager:U}=F(this,NZ),Z=document.createElement("button");Z.className="delete",Z.tabIndex=0,Z.setAttribute("data-l10n-id",F(qZ,nV)[l]),m(this,aU,jc).call(this,Z),Z.addEventListener("click",d=>{U.delete()},{signal:U._signal}),F(this,GF).append(Z)},sR=function(){const l=document.createElement("div");return l.className="divider",l},h(qZ,Mc),h(qZ,nV,null);let pt=qZ;class sb{constructor(l){h(this,Id);h(this,bV,null);h(this,TF,null);h(this,SF);b(this,SF,l)}show(l,U,Z){const[d,Q]=m(this,Id,Ts).call(this,U,Z),{style:V}=F(this,TF)||b(this,TF,m(this,Id,Gs).call(this));l.append(F(this,TF)),V.insetInlineEnd=`${100*d}%`,V.top=`calc(${100*Q}% + var(--editor-toolbar-vert-offset))`}hide(){F(this,TF).remove()}}bV=new WeakMap,TF=new WeakMap,SF=new WeakMap,Id=new WeakSet,Gs=function(){const l=b(this,TF,document.createElement("div"));l.className="editToolbar",l.setAttribute("role","toolbar"),l.addEventListener("contextmenu",RZ,{signal:F(this,SF)._signal});const U=b(this,bV,document.createElement("div"));return U.className="buttons",l.append(U),m(this,Id,Ss).call(this),l},Ts=function(l,U){let Z=0,d=0;for(const Q of l){const V=Q.y+Q.height;if(V<Z)continue;const W=Q.x+(U?Q.width:0);if(V>Z){d=W,Z=V;continue}U?W>d&&(d=W):W<d&&(d=W)}return[U?1-d:d,Z]},Ss=function(){const l=document.createElement("button");l.className="highlightButton",l.tabIndex=0,l.setAttribute("data-l10n-id","pdfjs-highlight-floating-button1");const U=document.createElement("span");l.append(U),U.className="visuallyHidden",U.setAttribute("data-l10n-id","pdfjs-highlight-floating-button-label");const Z=F(this,SF)._signal;l.addEventListener("contextmenu",RZ,{signal:Z}),l.addEventListener("click",()=>{F(this,SF).highlightSelection("floating_button")},{signal:Z}),F(this,bV).append(l)};function Vc(N,l,U){for(const Z of U)l.addEventListener(Z,N[Z].bind(N))}class nb{constructor(){h(this,Jc,0)}get id(){return`${vn}${SU(this,Jc)._++}`}}Jc=new WeakMap;const $t=class $t{constructor(){h(this,D0);h(this,k0,Vb());h(this,aV,0);h(this,WU,null)}static get _isSVGFittingCanvas(){const l='data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>',Z=new OffscreenCanvas(1,3).getContext("2d",{willReadFrequently:!0}),d=new Image;d.src=l;const Q=d.decode().then(()=>(Z.drawImage(d,0,0,1,1,0,0,1,3),new Uint32Array(Z.getImageData(0,0,1,1).data.buffer)[0]===0));return _(this,"_isSVGFittingCanvas",Q)}async getFromFile(l){const{lastModified:U,name:Z,size:d,type:Q}=l;return m(this,D0,Oc).call(this,`${U}_${Z}_${d}_${Q}`,l)}async getFromUrl(l){return m(this,D0,Oc).call(this,l,l)}async getFromBlob(l,U){const Z=await U;return m(this,D0,Oc).call(this,l,Z)}async getFromId(l){F(this,WU)||b(this,WU,new Map);const U=F(this,WU).get(l);if(!U)return null;if(U.bitmap)return U.refCounter+=1,U;if(U.file)return this.getFromFile(U.file);if(U.blobPromise){const{blobPromise:Z}=U;return delete U.blobPromise,this.getFromBlob(U.id,Z)}return this.getFromUrl(U.url)}getFromCanvas(l,U){F(this,WU)||b(this,WU,new Map);let Z=F(this,WU).get(l);if(Z!=null&&Z.bitmap)return Z.refCounter+=1,Z;const d=new OffscreenCanvas(U.width,U.height);return d.getContext("2d").drawImage(U,0,0),Z={bitmap:d.transferToImageBitmap(),id:`image_${F(this,k0)}_${SU(this,aV)._++}`,refCounter:1,isSvg:!1},F(this,WU).set(l,Z),F(this,WU).set(Z.id,Z),Z}getSvgUrl(l){const U=F(this,WU).get(l);return U!=null&&U.isSvg?U.svgUrl:null}deleteId(l){var d;F(this,WU)||b(this,WU,new Map);const U=F(this,WU).get(l);if(!U||(U.refCounter-=1,U.refCounter!==0))return;const{bitmap:Z}=U;if(!U.url&&!U.file){const Q=new OffscreenCanvas(Z.width,Z.height);Q.getContext("bitmaprenderer").transferFromImageBitmap(Z),U.blobPromise=Q.convertToBlob()}(d=Z.close)==null||d.call(Z),U.bitmap=null}isValidId(l){return l.startsWith(`image_${F(this,k0)}_`)}};k0=new WeakMap,aV=new WeakMap,WU=new WeakMap,D0=new WeakSet,Oc=async function(l,U){F(this,WU)||b(this,WU,new Map);let Z=F(this,WU).get(l);if(Z===null)return null;if(Z!=null&&Z.bitmap)return Z.refCounter+=1,Z;try{Z||(Z={bitmap:null,id:`image_${F(this,k0)}_${SU(this,aV)._++}`,refCounter:0,isSvg:!1});let d;if(typeof U=="string"?(Z.url=U,d=await Fc(U,"blob")):U instanceof File?d=Z.file=U:U instanceof Blob&&(d=U),d.type==="image/svg+xml"){const Q=$t._isSVGFittingCanvas,V=new FileReader,W=new Image,c=new Promise((t,R)=>{W.onload=()=>{Z.bitmap=W,Z.isSvg=!0,t()},V.onload=async()=>{const s=Z.svgUrl=V.result;W.src=await Q?`${s}#svgView(preserveAspectRatio(none))`:s},W.onerror=V.onerror=R});V.readAsDataURL(d),await c}else Z.bitmap=await createImageBitmap(d);Z.refCounter=1}catch(d){P(d),Z=null}return F(this,WU).set(l,Z),Z&&F(this,WU).set(Z.id,Z),Z};let ut=$t;class bb{constructor(l=128){h(this,zl,[]);h(this,Ed,!1);h(this,hV);h(this,Bl,-1);b(this,hV,l)}add({cmd:l,undo:U,post:Z,mustExec:d,type:Q=NaN,overwriteIfSameType:V=!1,keepUndo:W=!1}){if(d&&l(),F(this,Ed))return;const c={cmd:l,undo:U,post:Z,type:Q};if(F(this,Bl)===-1){F(this,zl).length>0&&(F(this,zl).length=0),b(this,Bl,0),F(this,zl).push(c);return}if(V&&F(this,zl)[F(this,Bl)].type===Q){W&&(c.undo=F(this,zl)[F(this,Bl)].undo),F(this,zl)[F(this,Bl)]=c;return}const t=F(this,Bl)+1;t===F(this,hV)?F(this,zl).splice(0,1):(b(this,Bl,t),t<F(this,zl).length&&F(this,zl).splice(t)),F(this,zl).push(c)}undo(){if(F(this,Bl)===-1)return;b(this,Ed,!0);const{undo:l,post:U}=F(this,zl)[F(this,Bl)];l(),U==null||U(),b(this,Ed,!1),b(this,Bl,F(this,Bl)-1)}redo(){if(F(this,Bl)<F(this,zl).length-1){b(this,Bl,F(this,Bl)+1),b(this,Ed,!0);const{cmd:l,post:U}=F(this,zl)[F(this,Bl)];l(),U==null||U(),b(this,Ed,!1)}}hasSomethingToUndo(){return F(this,Bl)!==-1}hasSomethingToRedo(){return F(this,Bl)<F(this,zl).length-1}cleanType(l){if(F(this,Bl)!==-1){for(let U=F(this,Bl);U>=0;U--)if(F(this,zl)[U].type!==l){F(this,zl).splice(U+1,F(this,Bl)-U),b(this,Bl,U);return}F(this,zl).length=0,b(this,Bl,-1)}}destroy(){b(this,zl,null)}}zl=new WeakMap,Ed=new WeakMap,hV=new WeakMap,Bl=new WeakMap;class dV{constructor(l){h(this,Gc);this.buffer=[],this.callbacks=new Map,this.allKeys=new Set;const{isMac:U}=bU.platform;for(const[Z,d,Q={}]of l)for(const V of Z){const W=V.startsWith("mac+");U&&W?(this.callbacks.set(V.slice(4),{callback:d,options:Q}),this.allKeys.add(V.split("+").at(-1))):!U&&!W&&(this.callbacks.set(V,{callback:d,options:Q}),this.allKeys.add(V.split("+").at(-1)))}}exec(l,U){if(!this.allKeys.has(U.key))return;const Z=this.callbacks.get(m(this,Gc,Xs).call(this,U));if(!Z)return;const{callback:d,options:{bubbles:Q=!1,args:V=[],checker:W=null}}=Z;W&&!W(l,U)||(d.bind(l,...V,U)(),Q||kU(U))}}Gc=new WeakSet,Xs=function(l){l.altKey&&this.buffer.push("alt"),l.ctrlKey&&this.buffer.push("ctrl"),l.metaKey&&this.buffer.push("meta"),l.shiftKey&&this.buffer.push("shift"),this.buffer.push(l.key);const U=this.buffer.join("+");return this.buffer.length=0,U};const Tc=class Tc{get _colors(){const l=new Map([["CanvasText",null],["Canvas",null]]);return Nb(l),_(this,"_colors",l)}convert(l){const U=Bt(l);if(!window.matchMedia("(forced-colors: active)").matches)return U;for(const[Z,d]of this._colors)if(d.every((Q,V)=>Q===U[V]))return Tc._colorsMapping.get(Z);return U}getHexCode(l){const U=this._colors.get(l);return U?C.makeHexColor(...U):l}};O(Tc,"_colorsMapping",new Map([["CanvasText",[0,0,0]],["Canvas",[255,255,255]]]));let yt=Tc;const O0=class O0{constructor(l,U,Z,d,Q,V,W,c,t,R,s,n,a){h(this,y);h(this,I0,new AbortController);h(this,DU,null);h(this,xl,new Map);h(this,ql,new Map);h(this,E0,null);h(this,$Z,null);h(this,C0,null);h(this,_U,new bb);h(this,Cd,null);h(this,XF,null);h(this,w0,0);h(this,YF,new Set);h(this,uZ,null);h(this,sZ,null);h(this,BF,new Set);O(this,"_editorUndoBar",null);h(this,mV,!1);h(this,iV,!1);h(this,x0,!1);h(this,MV,null);h(this,yZ,null);h(this,wd,null);h(this,j0,null);h(this,xd,!1);h(this,zZ,null);h(this,Sc,new nb);h(this,jd,!1);h(this,JV,!1);h(this,Od,null);h(this,eF,null);h(this,GV,null);h(this,TV,null);h(this,Kl,v.NONE);h(this,Rl,new Set);h(this,ld,null);h(this,pF,null);h(this,SV,null);h(this,XV,{isEditing:!1,isEmpty:!0,hasSomethingToUndo:!1,hasSomethingToRedo:!1,hasSelectedEditor:!1,hasSelectedText:!1});h(this,rd,[0,0]);h(this,LZ,null);h(this,Ud,null);h(this,YV,null);h(this,qU,null);const i=this._signal=F(this,I0).signal;b(this,Ud,l),b(this,YV,U),b(this,E0,Z),this._eventBus=d,d._on("editingaction",this.onEditingAction.bind(this),{signal:i}),d._on("pagechanging",this.onPageChanging.bind(this),{signal:i}),d._on("scalechanging",this.onScaleChanging.bind(this),{signal:i}),d._on("rotationchanging",this.onRotationChanging.bind(this),{signal:i}),d._on("setpreference",this.onSetPreference.bind(this),{signal:i}),d._on("switchannotationeditorparams",M=>this.updateParams(M.type,M.value),{signal:i}),m(this,y,es).call(this),m(this,y,zs).call(this),m(this,y,bR).call(this),b(this,$Z,Q.annotationStorage),b(this,MV,Q.filterFactory),b(this,pF,V),b(this,j0,W||null),b(this,mV,c),b(this,iV,t),b(this,x0,R),b(this,TV,s||null),this.viewParameters={realScale:od.PDF_TO_CSS_UNITS,rotation:0},this.isShiftKeyDown=!1,this._editorUndoBar=n||null,this._supportsPinchToZoom=a!==!1}static get _keyboardManager(){const l=O0.prototype,U=V=>F(V,Ud).contains(document.activeElement)&&document.activeElement.tagName!=="BUTTON"&&V.hasSomethingToControl(),Z=(V,{target:W})=>{if(W instanceof HTMLInputElement){const{type:c}=W;return c!=="text"&&c!=="number"}return!0},d=this.TRANSLATE_SMALL,Q=this.TRANSLATE_BIG;return _(this,"_keyboardManager",new dV([[["ctrl+a","mac+meta+a"],l.selectAll,{checker:Z}],[["ctrl+z","mac+meta+z"],l.undo,{checker:Z}],[["ctrl+y","ctrl+shift+z","mac+meta+shift+z","ctrl+shift+Z","mac+meta+shift+Z"],l.redo,{checker:Z}],[["Backspace","alt+Backspace","ctrl+Backspace","shift+Backspace","mac+Backspace","mac+alt+Backspace","mac+ctrl+Backspace","Delete","ctrl+Delete","shift+Delete","mac+Delete"],l.delete,{checker:Z}],[["Enter","mac+Enter"],l.addNewEditorFromKeyboard,{checker:(V,{target:W})=>!(W instanceof HTMLButtonElement)&&F(V,Ud).contains(W)&&!V.isEnterHandled}],[[" ","mac+ "],l.addNewEditorFromKeyboard,{checker:(V,{target:W})=>!(W instanceof HTMLButtonElement)&&F(V,Ud).contains(document.activeElement)}],[["Escape","mac+Escape"],l.unselectAll],[["ArrowLeft","mac+ArrowLeft"],l.translateSelectedEditors,{args:[-d,0],checker:U}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],l.translateSelectedEditors,{args:[-Q,0],checker:U}],[["ArrowRight","mac+ArrowRight"],l.translateSelectedEditors,{args:[d,0],checker:U}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],l.translateSelectedEditors,{args:[Q,0],checker:U}],[["ArrowUp","mac+ArrowUp"],l.translateSelectedEditors,{args:[0,-d],checker:U}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],l.translateSelectedEditors,{args:[0,-Q],checker:U}],[["ArrowDown","mac+ArrowDown"],l.translateSelectedEditors,{args:[0,d],checker:U}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],l.translateSelectedEditors,{args:[0,Q],checker:U}]]))}destroy(){var l,U,Z,d,Q;(l=F(this,qU))==null||l.resolve(),b(this,qU,null),(U=F(this,I0))==null||U.abort(),b(this,I0,null),this._signal=null;for(const V of F(this,ql).values())V.destroy();F(this,ql).clear(),F(this,xl).clear(),F(this,BF).clear(),b(this,DU,null),F(this,Rl).clear(),F(this,_U).destroy(),(Z=F(this,E0))==null||Z.destroy(),(d=F(this,zZ))==null||d.hide(),b(this,zZ,null),F(this,yZ)&&(clearTimeout(F(this,yZ)),b(this,yZ,null)),F(this,LZ)&&(clearTimeout(F(this,LZ)),b(this,LZ,null)),(Q=this._editorUndoBar)==null||Q.destroy()}combinedSignal(l){return AbortSignal.any([this._signal,l.signal])}get mlManager(){return F(this,TV)}get useNewAltTextFlow(){return F(this,iV)}get useNewAltTextWhenAddingImage(){return F(this,x0)}get hcmFilter(){return _(this,"hcmFilter",F(this,pF)?F(this,MV).addHCMFilter(F(this,pF).foreground,F(this,pF).background):"none")}get direction(){return _(this,"direction",getComputedStyle(F(this,Ud)).direction)}get highlightColors(){return _(this,"highlightColors",F(this,j0)?new Map(F(this,j0).split(",").map(l=>l.split("=").map(U=>U.trim()))):null)}get highlightColorNames(){return _(this,"highlightColorNames",this.highlightColors?new Map(Array.from(this.highlightColors,l=>l.reverse())):null)}setCurrentDrawingSession(l){l?(this.unselectAll(),this.disableUserSelect(!0)):this.disableUserSelect(!1),b(this,XF,l)}setMainHighlightColorPicker(l){b(this,GV,l)}editAltText(l,U=!1){var Z;(Z=F(this,E0))==null||Z.editAltText(this,l,U)}switchToMode(l,U){this._eventBus.on("annotationeditormodechanged",U,{once:!0,signal:this._signal}),this._eventBus.dispatch("showannotationeditorui",{source:this,mode:l})}setPreference(l,U){this._eventBus.dispatch("setpreference",{source:this,name:l,value:U})}onSetPreference({name:l,value:U}){switch(l){case"enableNewAltTextWhenAddingImage":b(this,x0,U);break}}onPageChanging({pageNumber:l}){b(this,w0,l-1)}focusMainContainer(){F(this,Ud).focus()}findParent(l,U){for(const Z of F(this,ql).values()){const{x:d,y:Q,width:V,height:W}=Z.div.getBoundingClientRect();if(l>=d&&l<=d+V&&U>=Q&&U<=Q+W)return Z}return null}disableUserSelect(l=!1){F(this,YV).classList.toggle("noUserSelect",l)}addShouldRescale(l){F(this,BF).add(l)}removeShouldRescale(l){F(this,BF).delete(l)}onScaleChanging({scale:l}){var U;this.commitOrRemove(),this.viewParameters.realScale=l*od.PDF_TO_CSS_UNITS;for(const Z of F(this,BF))Z.onScaleChanging();(U=F(this,XF))==null||U.onScaleChanging()}onRotationChanging({pagesRotation:l}){this.commitOrRemove(),this.viewParameters.rotation=l}highlightSelection(l=""){const U=document.getSelection();if(!U||U.isCollapsed)return;const{anchorNode:Z,anchorOffset:d,focusNode:Q,focusOffset:V}=U,W=U.toString(),t=m(this,y,rc).call(this,U).closest(".textLayer"),R=this.getSelectionBoxes(t);if(!R)return;U.empty();const s=m(this,y,nR).call(this,t),n=F(this,Kl)===v.NONE,a=()=>{s==null||s.createAndAddNewEditor({x:0,y:0},!1,{methodOfCreation:l,boxes:R,anchorNode:Z,anchorOffset:d,focusNode:Q,focusOffset:V,text:W}),n&&this.showAllEditors("highlight",!0,!0)};if(n){this.switchToMode(v.HIGHLIGHT,a);return}a()}addToAnnotationStorage(l){!l.isEmpty()&&F(this,$Z)&&!F(this,$Z).has(l.id)&&F(this,$Z).setValue(l.id,l)}blur(){if(this.isShiftKeyDown=!1,F(this,xd)&&(b(this,xd,!1),m(this,y,gc).call(this,"main_toolbar")),!this.hasSelection)return;const{activeElement:l}=document;for(const U of F(this,Rl))if(U.div.contains(l)){b(this,eF,[U,l]),U._focusEventsAllowed=!1;break}}focus(){if(!F(this,eF))return;const[l,U]=F(this,eF);b(this,eF,null),U.addEventListener("focusin",()=>{l._focusEventsAllowed=!0},{once:!0,signal:this._signal}),U.focus()}addEditListeners(){m(this,y,bR).call(this),m(this,y,aR).call(this)}removeEditListeners(){m(this,y,ys).call(this),m(this,y,hR).call(this)}dragOver(l){for(const{type:U}of l.dataTransfer.items)for(const Z of F(this,sZ))if(Z.isHandlingMimeForPasting(U)){l.dataTransfer.dropEffect="copy",l.preventDefault();return}}drop(l){for(const U of l.dataTransfer.items)for(const Z of F(this,sZ))if(Z.isHandlingMimeForPasting(U.type)){Z.paste(U,this.currentLayer),l.preventDefault();return}}copy(l){var Z;if(l.preventDefault(),(Z=F(this,DU))==null||Z.commitOrRemove(),!this.hasSelection)return;const U=[];for(const d of F(this,Rl)){const Q=d.serialize(!0);Q&&U.push(Q)}U.length!==0&&l.clipboardData.setData("application/pdfjs",JSON.stringify(U))}cut(l){this.copy(l),this.delete()}async paste(l){l.preventDefault();const{clipboardData:U}=l;for(const Q of U.items)for(const V of F(this,sZ))if(V.isHandlingMimeForPasting(Q.type)){V.paste(Q,this.currentLayer);return}let Z=U.getData("application/pdfjs");if(!Z)return;try{Z=JSON.parse(Z)}catch(Q){P(`paste: "${Q.message}".`);return}if(!Array.isArray(Z))return;this.unselectAll();const d=this.currentLayer;try{const Q=[];for(const c of Z){const t=await d.deserialize(c);if(!t)return;Q.push(t)}const V=()=>{for(const c of Q)m(this,y,mR).call(this,c);m(this,y,iR).call(this,Q)},W=()=>{for(const c of Q)c.remove()};this.addCommands({cmd:V,undo:W,mustExec:!0})}catch(Q){P(`paste: "${Q.message}".`)}}keydown(l){!this.isShiftKeyDown&&l.key==="Shift"&&(this.isShiftKeyDown=!0),F(this,Kl)!==v.NONE&&!this.isEditorHandlingKeyboard&&O0._keyboardManager.exec(this,l)}keyup(l){this.isShiftKeyDown&&l.key==="Shift"&&(this.isShiftKeyDown=!1,F(this,xd)&&(b(this,xd,!1),m(this,y,gc).call(this,"main_toolbar")))}onEditingAction({name:l}){switch(l){case"undo":case"redo":case"delete":case"selectAll":this[l]();break;case"highlightSelection":this.highlightSelection("context_menu");break}}setEditingState(l){l?(m(this,y,ps).call(this),m(this,y,aR).call(this),m(this,y,XU).call(this,{isEditing:F(this,Kl)!==v.NONE,isEmpty:m(this,y,CW).call(this),hasSomethingToUndo:F(this,_U).hasSomethingToUndo(),hasSomethingToRedo:F(this,_U).hasSomethingToRedo(),hasSelectedEditor:!1})):(m(this,y,us).call(this),m(this,y,hR).call(this),m(this,y,XU).call(this,{isEditing:!1}),this.disableUserSelect(!1))}registerEditorTypes(l){if(!F(this,sZ)){b(this,sZ,l);for(const U of F(this,sZ))m(this,y,pd).call(this,U.defaultPropertiesToUpdate)}}getId(){return F(this,Sc).id}get currentLayer(){return F(this,ql).get(F(this,w0))}getLayer(l){return F(this,ql).get(l)}get currentPageIndex(){return F(this,w0)}addLayer(l){F(this,ql).set(l.pageIndex,l),F(this,jd)?l.enable():l.disable()}removeLayer(l){F(this,ql).delete(l.pageIndex)}async updateMode(l,U=null,Z=!1){var d;if(F(this,Kl)!==l&&!(F(this,qU)&&(await F(this,qU).promise,!F(this,qU)))){if(b(this,qU,Promise.withResolvers()),b(this,Kl,l),l===v.NONE){this.setEditingState(!1),m(this,y,os).call(this),(d=this._editorUndoBar)==null||d.hide(),F(this,qU).resolve();return}this.setEditingState(!0),await m(this,y,Ls).call(this),this.unselectAll();for(const Q of F(this,ql).values())Q.updateMode(l);if(!U){Z&&this.addNewEditorFromKeyboard(),F(this,qU).resolve();return}for(const Q of F(this,xl).values())Q.annotationElementId===U?(this.setSelected(Q),Q.enterInEditMode()):Q.unselect();F(this,qU).resolve()}}addNewEditorFromKeyboard(){this.currentLayer.canCreateNewEmptyEditor()&&this.currentLayer.addNewEditor()}updateToolbar(l){l!==F(this,Kl)&&this._eventBus.dispatch("switchannotationeditormode",{source:this,mode:l})}updateParams(l,U){var Z;if(F(this,sZ)){switch(l){case Zl.CREATE:this.currentLayer.addNewEditor();return;case Zl.HIGHLIGHT_DEFAULT_COLOR:(Z=F(this,GV))==null||Z.updateColor(U);break;case Zl.HIGHLIGHT_SHOW_ALL:this._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:{type:"highlight",action:"toggle_visibility"}}}),(F(this,SV)||b(this,SV,new Map)).set(l,U),this.showAllEditors("highlight",U);break}for(const d of F(this,Rl))d.updateParams(l,U);for(const d of F(this,sZ))d.updateDefaultParams(l,U)}}showAllEditors(l,U,Z=!1){var Q;for(const V of F(this,xl).values())V.editorType===l&&V.show(U);(((Q=F(this,SV))==null?void 0:Q.get(Zl.HIGHLIGHT_SHOW_ALL))??!0)!==U&&m(this,y,pd).call(this,[[Zl.HIGHLIGHT_SHOW_ALL,U]])}enableWaiting(l=!1){if(F(this,JV)!==l){b(this,JV,l);for(const U of F(this,ql).values())l?U.disableClick():U.enableClick(),U.div.classList.toggle("waiting",l)}}getEditors(l){const U=[];for(const Z of F(this,xl).values())Z.pageIndex===l&&U.push(Z);return U}getEditor(l){return F(this,xl).get(l)}addEditor(l){F(this,xl).set(l.id,l)}removeEditor(l){var U;l.div.contains(document.activeElement)&&(F(this,yZ)&&clearTimeout(F(this,yZ)),b(this,yZ,setTimeout(()=>{this.focusMainContainer(),b(this,yZ,null)},0))),F(this,xl).delete(l.id),this.unselect(l),(!l.annotationElementId||!F(this,YF).has(l.annotationElementId))&&((U=F(this,$Z))==null||U.remove(l.id))}addDeletedAnnotationElement(l){F(this,YF).add(l.annotationElementId),this.addChangedExistingAnnotation(l),l.deleted=!0}isDeletedAnnotationElement(l){return F(this,YF).has(l)}removeDeletedAnnotationElement(l){F(this,YF).delete(l.annotationElementId),this.removeChangedExistingAnnotation(l),l.deleted=!1}setActiveEditor(l){F(this,DU)!==l&&(b(this,DU,l),l&&m(this,y,pd).call(this,l.propertiesToUpdate))}updateUI(l){F(this,y,ks)===l&&m(this,y,pd).call(this,l.propertiesToUpdate)}updateUIForDefaultProperties(l){m(this,y,pd).call(this,l.defaultPropertiesToUpdate)}toggleSelected(l){if(F(this,Rl).has(l)){F(this,Rl).delete(l),l.unselect(),m(this,y,XU).call(this,{hasSelectedEditor:this.hasSelection});return}F(this,Rl).add(l),l.select(),m(this,y,pd).call(this,l.propertiesToUpdate),m(this,y,XU).call(this,{hasSelectedEditor:!0})}setSelected(l){var U;(U=F(this,XF))==null||U.commitOrRemove();for(const Z of F(this,Rl))Z!==l&&Z.unselect();F(this,Rl).clear(),F(this,Rl).add(l),l.select(),m(this,y,pd).call(this,l.propertiesToUpdate),m(this,y,XU).call(this,{hasSelectedEditor:!0})}isSelected(l){return F(this,Rl).has(l)}get firstSelectedEditor(){return F(this,Rl).values().next().value}unselect(l){l.unselect(),F(this,Rl).delete(l),m(this,y,XU).call(this,{hasSelectedEditor:this.hasSelection})}get hasSelection(){return F(this,Rl).size!==0}get isEnterHandled(){return F(this,Rl).size===1&&this.firstSelectedEditor.isEnterHandled}undo(){var l;F(this,_U).undo(),m(this,y,XU).call(this,{hasSomethingToUndo:F(this,_U).hasSomethingToUndo(),hasSomethingToRedo:!0,isEmpty:m(this,y,CW).call(this)}),(l=this._editorUndoBar)==null||l.hide()}redo(){F(this,_U).redo(),m(this,y,XU).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:F(this,_U).hasSomethingToRedo(),isEmpty:m(this,y,CW).call(this)})}addCommands(l){F(this,_U).add(l),m(this,y,XU).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:!1,isEmpty:m(this,y,CW).call(this)})}cleanUndoStack(l){F(this,_U).cleanType(l)}delete(){var Q;this.commitOrRemove();const l=(Q=this.currentLayer)==null?void 0:Q.endDrawingSession(!0);if(!this.hasSelection&&!l)return;const U=l?[l]:[...F(this,Rl)],Z=()=>{var V;(V=this._editorUndoBar)==null||V.show(d,U.length===1?U[0].editorType:U.length);for(const W of U)W.remove()},d=()=>{for(const V of U)m(this,y,mR).call(this,V)};this.addCommands({cmd:Z,undo:d,mustExec:!0})}commitOrRemove(){var l;(l=F(this,DU))==null||l.commitOrRemove()}hasSomethingToControl(){return F(this,DU)||this.hasSelection}selectAll(){for(const l of F(this,Rl))l.commit();m(this,y,iR).call(this,F(this,xl).values())}unselectAll(){var l;if(!(F(this,DU)&&(F(this,DU).commitOrRemove(),F(this,Kl)!==v.NONE))&&!((l=F(this,XF))!=null&&l.commitOrRemove())&&this.hasSelection){for(const U of F(this,Rl))U.unselect();F(this,Rl).clear(),m(this,y,XU).call(this,{hasSelectedEditor:!1})}}translateSelectedEditors(l,U,Z=!1){if(Z||this.commitOrRemove(),!this.hasSelection)return;F(this,rd)[0]+=l,F(this,rd)[1]+=U;const[d,Q]=F(this,rd),V=[...F(this,Rl)],W=1e3;F(this,LZ)&&clearTimeout(F(this,LZ)),b(this,LZ,setTimeout(()=>{b(this,LZ,null),F(this,rd)[0]=F(this,rd)[1]=0,this.addCommands({cmd:()=>{for(const c of V)F(this,xl).has(c.id)&&c.translateInPage(d,Q)},undo:()=>{for(const c of V)F(this,xl).has(c.id)&&c.translateInPage(-d,-Q)},mustExec:!1})},W));for(const c of V)c.translateInPage(l,U)}setUpDragSession(){if(this.hasSelection){this.disableUserSelect(!0),b(this,uZ,new Map);for(const l of F(this,Rl))F(this,uZ).set(l,{savedX:l.x,savedY:l.y,savedPageIndex:l.pageIndex,newX:0,newY:0,newPageIndex:-1})}}endDragSession(){if(!F(this,uZ))return!1;this.disableUserSelect(!1);const l=F(this,uZ);b(this,uZ,null);let U=!1;for(const[{x:d,y:Q,pageIndex:V},W]of l)W.newX=d,W.newY=Q,W.newPageIndex=V,U||(U=d!==W.savedX||Q!==W.savedY||V!==W.savedPageIndex);if(!U)return!1;const Z=(d,Q,V,W)=>{if(F(this,xl).has(d.id)){const c=F(this,ql).get(W);c?d._setParentAndPosition(c,Q,V):(d.pageIndex=W,d.x=Q,d.y=V)}};return this.addCommands({cmd:()=>{for(const[d,{newX:Q,newY:V,newPageIndex:W}]of l)Z(d,Q,V,W)},undo:()=>{for(const[d,{savedX:Q,savedY:V,savedPageIndex:W}]of l)Z(d,Q,V,W)},mustExec:!0}),!0}dragSelectedEditors(l,U){if(F(this,uZ))for(const Z of F(this,uZ).keys())Z.drag(l,U)}rebuild(l){if(l.parent===null){const U=this.getLayer(l.pageIndex);U?(U.changeParent(l),U.addOrRebuild(l)):(this.addEditor(l),this.addToAnnotationStorage(l),l.rebuild())}else l.parent.addOrRebuild(l)}get isEditorHandlingKeyboard(){var l;return((l=this.getActive())==null?void 0:l.shouldGetKeyboardEvents())||F(this,Rl).size===1&&this.firstSelectedEditor.shouldGetKeyboardEvents()}isActive(l){return F(this,DU)===l}getActive(){return F(this,DU)}getMode(){return F(this,Kl)}get imageManager(){return _(this,"imageManager",new ut)}getSelectionBoxes(l){if(!l)return null;const U=document.getSelection();for(let t=0,R=U.rangeCount;t<R;t++)if(!l.contains(U.getRangeAt(t).commonAncestorContainer))return null;const{x:Z,y:d,width:Q,height:V}=l.getBoundingClientRect();let W;switch(l.getAttribute("data-main-rotation")){case"90":W=(t,R,s,n)=>({x:(R-d)/V,y:1-(t+s-Z)/Q,width:n/V,height:s/Q});break;case"180":W=(t,R,s,n)=>({x:1-(t+s-Z)/Q,y:1-(R+n-d)/V,width:s/Q,height:n/V});break;case"270":W=(t,R,s,n)=>({x:1-(R+n-d)/V,y:(t-Z)/Q,width:n/V,height:s/Q});break;default:W=(t,R,s,n)=>({x:(t-Z)/Q,y:(R-d)/V,width:s/Q,height:n/V});break}const c=[];for(let t=0,R=U.rangeCount;t<R;t++){const s=U.getRangeAt(t);if(!s.collapsed)for(const{x:n,y:a,width:i,height:M}of s.getClientRects())i===0||M===0||c.push(W(n,a,i,M))}return c.length===0?null:c}addChangedExistingAnnotation({annotationElementId:l,id:U}){(F(this,C0)||b(this,C0,new Map)).set(l,U)}removeChangedExistingAnnotation({annotationElementId:l}){var U;(U=F(this,C0))==null||U.delete(l)}renderAnnotationElement(l){var d;const U=(d=F(this,C0))==null?void 0:d.get(l.data.id);if(!U)return;const Z=F(this,$Z).getRawValue(U);Z&&(F(this,Kl)===v.NONE&&!Z.hasBeenModified||Z.renderAnnotationElement(l))}};I0=new WeakMap,DU=new WeakMap,xl=new WeakMap,ql=new WeakMap,E0=new WeakMap,$Z=new WeakMap,C0=new WeakMap,_U=new WeakMap,Cd=new WeakMap,XF=new WeakMap,w0=new WeakMap,YF=new WeakMap,uZ=new WeakMap,sZ=new WeakMap,BF=new WeakMap,mV=new WeakMap,iV=new WeakMap,x0=new WeakMap,MV=new WeakMap,yZ=new WeakMap,wd=new WeakMap,j0=new WeakMap,xd=new WeakMap,zZ=new WeakMap,Sc=new WeakMap,jd=new WeakMap,JV=new WeakMap,Od=new WeakMap,eF=new WeakMap,GV=new WeakMap,TV=new WeakMap,Kl=new WeakMap,Rl=new WeakMap,ld=new WeakMap,pF=new WeakMap,SV=new WeakMap,XV=new WeakMap,rd=new WeakMap,LZ=new WeakMap,Ud=new WeakMap,YV=new WeakMap,qU=new WeakMap,y=new WeakSet,rc=function({anchorNode:l}){return l.nodeType===Node.TEXT_NODE?l.parentElement:l},nR=function(l){const{currentLayer:U}=this;if(U.hasTextLayer(l))return U;for(const Z of F(this,ql).values())if(Z.hasTextLayer(l))return Z;return null},Ys=function(){const l=document.getSelection();if(!l||l.isCollapsed)return;const Z=m(this,y,rc).call(this,l).closest(".textLayer"),d=this.getSelectionBoxes(Z);d&&(F(this,zZ)||b(this,zZ,new sb(this)),F(this,zZ).show(Z,d,this.direction==="ltr"))},Bs=function(){var Q,V,W;const l=document.getSelection();if(!l||l.isCollapsed){F(this,ld)&&((Q=F(this,zZ))==null||Q.hide(),b(this,ld,null),m(this,y,XU).call(this,{hasSelectedText:!1}));return}const{anchorNode:U}=l;if(U===F(this,ld))return;const d=m(this,y,rc).call(this,l).closest(".textLayer");if(!d){F(this,ld)&&((V=F(this,zZ))==null||V.hide(),b(this,ld,null),m(this,y,XU).call(this,{hasSelectedText:!1}));return}if((W=F(this,zZ))==null||W.hide(),b(this,ld,U),m(this,y,XU).call(this,{hasSelectedText:!0}),!(F(this,Kl)!==v.HIGHLIGHT&&F(this,Kl)!==v.NONE)&&(F(this,Kl)===v.HIGHLIGHT&&this.showAllEditors("highlight",!0,!0),b(this,xd,this.isShiftKeyDown),!this.isShiftKeyDown)){const c=F(this,Kl)===v.HIGHLIGHT?m(this,y,nR).call(this,d):null;c==null||c.toggleDrawing();const t=new AbortController,R=this.combinedSignal(t),s=n=>{n.type==="pointerup"&&n.button!==0||(t.abort(),c==null||c.toggleDrawing(!0),n.type==="pointerup"&&m(this,y,gc).call(this,"main_toolbar"))};window.addEventListener("pointerup",s,{signal:R}),window.addEventListener("blur",s,{signal:R})}},gc=function(l=""){F(this,Kl)===v.HIGHLIGHT?this.highlightSelection(l):F(this,mV)&&m(this,y,Ys).call(this)},es=function(){document.addEventListener("selectionchange",m(this,y,Bs).bind(this),{signal:this._signal})},ps=function(){if(F(this,wd))return;b(this,wd,new AbortController);const l=this.combinedSignal(F(this,wd));window.addEventListener("focus",this.focus.bind(this),{signal:l}),window.addEventListener("blur",this.blur.bind(this),{signal:l})},us=function(){var l;(l=F(this,wd))==null||l.abort(),b(this,wd,null)},bR=function(){if(F(this,Od))return;b(this,Od,new AbortController);const l=this.combinedSignal(F(this,Od));window.addEventListener("keydown",this.keydown.bind(this),{signal:l}),window.addEventListener("keyup",this.keyup.bind(this),{signal:l})},ys=function(){var l;(l=F(this,Od))==null||l.abort(),b(this,Od,null)},aR=function(){if(F(this,Cd))return;b(this,Cd,new AbortController);const l=this.combinedSignal(F(this,Cd));document.addEventListener("copy",this.copy.bind(this),{signal:l}),document.addEventListener("cut",this.cut.bind(this),{signal:l}),document.addEventListener("paste",this.paste.bind(this),{signal:l})},hR=function(){var l;(l=F(this,Cd))==null||l.abort(),b(this,Cd,null)},zs=function(){const l=this._signal;document.addEventListener("dragover",this.dragOver.bind(this),{signal:l}),document.addEventListener("drop",this.drop.bind(this),{signal:l})},XU=function(l){Object.entries(l).some(([Z,d])=>F(this,XV)[Z]!==d)&&(this._eventBus.dispatch("annotationeditorstateschanged",{source:this,details:Object.assign(F(this,XV),l)}),F(this,Kl)===v.HIGHLIGHT&&l.hasSelectedEditor===!1&&m(this,y,pd).call(this,[[Zl.HIGHLIGHT_FREE,!0]]))},pd=function(l){this._eventBus.dispatch("annotationeditorparamschanged",{source:this,details:l})},Ls=async function(){if(!F(this,jd)){b(this,jd,!0);const l=[];for(const U of F(this,ql).values())l.push(U.enable());await Promise.all(l);for(const U of F(this,xl).values())U.enable()}},os=function(){if(this.unselectAll(),F(this,jd)){b(this,jd,!1);for(const l of F(this,ql).values())l.disable();for(const l of F(this,xl).values())l.disable()}},mR=function(l){const U=F(this,ql).get(l.pageIndex);U?U.addOrRebuild(l):(this.addEditor(l),this.addToAnnotationStorage(l))},ks=function(){let l=null;for(l of F(this,Rl));return l},CW=function(){if(F(this,xl).size===0)return!0;if(F(this,xl).size===1)for(const l of F(this,xl).values())return l.isEmpty();return!1},iR=function(l){for(const U of F(this,Rl))U.unselect();F(this,Rl).clear();for(const U of l)U.isEmpty()||(F(this,Rl).add(U),U.select());m(this,y,XU).call(this,{hasSelectedEditor:this.hasSelection})},O(O0,"TRANSLATE_SMALL",1),O(O0,"TRANSLATE_BIG",10);let hF=O0;const hU=class hU{constructor(l){h(this,bZ);h(this,Hl,null);h(this,oZ,!1);h(this,nZ,null);h(this,r0,null);h(this,kZ,null);h(this,IU,null);h(this,g0,!1);h(this,DZ,null);h(this,pU,null);h(this,Zd,null);h(this,uF,null);h(this,IZ,!1);b(this,pU,l),b(this,IZ,l._uiManager.useNewAltTextFlow),F(hU,gd)||b(hU,gd,Object.freeze({added:"pdfjs-editor-new-alt-text-added-button","added-label":"pdfjs-editor-new-alt-text-added-button-label",missing:"pdfjs-editor-new-alt-text-missing-button","missing-label":"pdfjs-editor-new-alt-text-missing-button-label",review:"pdfjs-editor-new-alt-text-to-review-button","review-label":"pdfjs-editor-new-alt-text-to-review-button-label"}))}static initialize(l){hU._l10n??(hU._l10n=l)}async render(){const l=b(this,nZ,document.createElement("button"));l.className="altText",l.tabIndex="0";const U=b(this,r0,document.createElement("span"));l.append(U),F(this,IZ)?(l.classList.add("new"),l.setAttribute("data-l10n-id",F(hU,gd).missing),U.setAttribute("data-l10n-id",F(hU,gd)["missing-label"])):(l.setAttribute("data-l10n-id","pdfjs-editor-alt-text-button"),U.setAttribute("data-l10n-id","pdfjs-editor-alt-text-button-label"));const Z=F(this,pU)._uiManager._signal;l.addEventListener("contextmenu",RZ,{signal:Z}),l.addEventListener("pointerdown",Q=>Q.stopPropagation(),{signal:Z});const d=Q=>{Q.preventDefault(),F(this,pU)._uiManager.editAltText(F(this,pU)),F(this,IZ)&&F(this,pU)._reportTelemetry({action:"pdfjs.image.alt_text.image_status_label_clicked",data:{label:F(this,bZ,wW)}})};return l.addEventListener("click",d,{capture:!0,signal:Z}),l.addEventListener("keydown",Q=>{Q.target===l&&Q.key==="Enter"&&(b(this,g0,!0),d(Q))},{signal:Z}),await m(this,bZ,Kc).call(this),l}finish(){F(this,nZ)&&(F(this,nZ).focus({focusVisible:F(this,g0)}),b(this,g0,!1))}isEmpty(){return F(this,IZ)?F(this,Hl)===null:!F(this,Hl)&&!F(this,oZ)}hasData(){return F(this,IZ)?F(this,Hl)!==null||!!F(this,Zd):this.isEmpty()}get guessedText(){return F(this,Zd)}async setGuessedText(l){F(this,Hl)===null&&(b(this,Zd,l),b(this,uF,await hU._l10n.get("pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer",{generatedAltText:l})),m(this,bZ,Kc).call(this))}toggleAltTextBadge(l=!1){var U;if(!F(this,IZ)||F(this,Hl)){(U=F(this,DZ))==null||U.remove(),b(this,DZ,null);return}if(!F(this,DZ)){const Z=b(this,DZ,document.createElement("div"));Z.className="noAltTextBadge",F(this,pU).div.append(Z)}F(this,DZ).classList.toggle("hidden",!l)}serialize(l){let U=F(this,Hl);return!l&&F(this,Zd)===U&&(U=F(this,uF)),{altText:U,decorative:F(this,oZ),guessedText:F(this,Zd),textWithDisclaimer:F(this,uF)}}get data(){return{altText:F(this,Hl),decorative:F(this,oZ)}}set data({altText:l,decorative:U,guessedText:Z,textWithDisclaimer:d,cancel:Q=!1}){Z&&(b(this,Zd,Z),b(this,uF,d)),!(F(this,Hl)===l&&F(this,oZ)===U)&&(Q||(b(this,Hl,l),b(this,oZ,U)),m(this,bZ,Kc).call(this))}toggle(l=!1){F(this,nZ)&&(!l&&F(this,IU)&&(clearTimeout(F(this,IU)),b(this,IU,null)),F(this,nZ).disabled=!l)}shown(){F(this,pU)._reportTelemetry({action:"pdfjs.image.alt_text.image_status_label_displayed",data:{label:F(this,bZ,wW)}})}destroy(){var l,U;(l=F(this,nZ))==null||l.remove(),b(this,nZ,null),b(this,r0,null),b(this,kZ,null),(U=F(this,DZ))==null||U.remove(),b(this,DZ,null)}};Hl=new WeakMap,oZ=new WeakMap,nZ=new WeakMap,r0=new WeakMap,kZ=new WeakMap,IU=new WeakMap,g0=new WeakMap,DZ=new WeakMap,pU=new WeakMap,Zd=new WeakMap,uF=new WeakMap,IZ=new WeakMap,gd=new WeakMap,bZ=new WeakSet,wW=function(){return F(this,Hl)&&"added"||F(this,Hl)===null&&this.guessedText&&"review"||"missing"},Kc=async function(){var d,Q,V;const l=F(this,nZ);if(!l)return;if(F(this,IZ)){if(l.classList.toggle("done",!!F(this,Hl)),l.setAttribute("data-l10n-id",F(hU,gd)[F(this,bZ,wW)]),(d=F(this,r0))==null||d.setAttribute("data-l10n-id",F(hU,gd)[`${F(this,bZ,wW)}-label`]),!F(this,Hl)){(Q=F(this,kZ))==null||Q.remove();return}}else{if(!F(this,Hl)&&!F(this,oZ)){l.classList.remove("done"),(V=F(this,kZ))==null||V.remove();return}l.classList.add("done"),l.setAttribute("data-l10n-id","pdfjs-editor-alt-text-edit-button")}let U=F(this,kZ);if(!U){b(this,kZ,U=document.createElement("span")),U.className="tooltip",U.setAttribute("role","tooltip"),U.id=`alt-text-tooltip-${F(this,pU).id}`;const W=100,c=F(this,pU)._uiManager._signal;c.addEventListener("abort",()=>{clearTimeout(F(this,IU)),b(this,IU,null)},{once:!0}),l.addEventListener("mouseenter",()=>{b(this,IU,setTimeout(()=>{b(this,IU,null),F(this,kZ).classList.add("show"),F(this,pU)._reportTelemetry({action:"alt_text_tooltip"})},W))},{signal:c}),l.addEventListener("mouseleave",()=>{var t;F(this,IU)&&(clearTimeout(F(this,IU)),b(this,IU,null)),(t=F(this,kZ))==null||t.classList.remove("show")},{signal:c})}F(this,oZ)?U.setAttribute("data-l10n-id","pdfjs-editor-alt-text-decorative-tooltip"):(U.removeAttribute("data-l10n-id"),U.textContent=F(this,Hl)),U.parentNode||l.append(U);const Z=F(this,pU).getImageForAltText();Z==null||Z.setAttribute("aria-describedby",U.id)},h(hU,gd,null),O(hU,"_l10n",null);let Wc=hU;const lR=class lR{constructor({container:l,isPinchingDisabled:U=null,isPinchingStopped:Z=null,onPinchStart:d=null,onPinching:Q=null,onPinchEnd:V=null,signal:W}){h(this,Fd);h(this,BV);h(this,yF,!1);h(this,eV,null);h(this,pV);h(this,uV);h(this,yV);h(this,zV);h(this,K0);h(this,dd,null);h(this,zF);h(this,Kd,null);b(this,BV,l),b(this,eV,Z),b(this,pV,U),b(this,uV,d),b(this,yV,Q),b(this,zV,V),b(this,zF,new AbortController),b(this,K0,AbortSignal.any([W,F(this,zF).signal])),l.addEventListener("touchstart",m(this,Fd,Ds).bind(this),{passive:!1,signal:F(this,K0)})}get MIN_TOUCH_DISTANCE_TO_PINCH(){return _(this,"MIN_TOUCH_DISTANCE_TO_PINCH",35/(window.devicePixelRatio||1))}destroy(){var l;(l=F(this,zF))==null||l.abort(),b(this,zF,null)}};BV=new WeakMap,yF=new WeakMap,eV=new WeakMap,pV=new WeakMap,uV=new WeakMap,yV=new WeakMap,zV=new WeakMap,K0=new WeakMap,dd=new WeakMap,zF=new WeakMap,Kd=new WeakMap,Fd=new WeakSet,Ds=function(l){var d,Q,V;if((d=F(this,pV))!=null&&d.call(this)||l.touches.length<2)return;if(!F(this,Kd)){b(this,Kd,new AbortController);const W=AbortSignal.any([F(this,K0),F(this,Kd).signal]),c=F(this,BV),t={signal:W,passive:!1};c.addEventListener("touchmove",m(this,Fd,Is).bind(this),t),c.addEventListener("touchend",m(this,Fd,MR).bind(this),t),c.addEventListener("touchcancel",m(this,Fd,MR).bind(this),t),(Q=F(this,uV))==null||Q.call(this)}if(kU(l),l.touches.length!==2||(V=F(this,eV))!=null&&V.call(this)){b(this,dd,null);return}let[U,Z]=l.touches;U.identifier>Z.identifier&&([U,Z]=[Z,U]),b(this,dd,{touch0X:U.screenX,touch0Y:U.screenY,touch1X:Z.screenX,touch1Y:Z.screenY})},Is=function(l){var Y;if(!F(this,dd)||l.touches.length!==2)return;let[U,Z]=l.touches;U.identifier>Z.identifier&&([U,Z]=[Z,U]);const{screenX:d,screenY:Q}=U,{screenX:V,screenY:W}=Z,c=F(this,dd),{touch0X:t,touch0Y:R,touch1X:s,touch1Y:n}=c,a=s-t,i=n-R,M=V-d,G=W-Q,J=Math.hypot(M,G)||1,S=Math.hypot(a,i)||1;if(!F(this,yF)&&Math.abs(S-J)<=lR.MIN_TOUCH_DISTANCE_TO_PINCH)return;if(c.touch0X=d,c.touch0Y=Q,c.touch1X=V,c.touch1Y=W,l.preventDefault(),!F(this,yF)){b(this,yF,!0);return}const X=[(d+V)/2,(Q+W)/2];(Y=F(this,yV))==null||Y.call(this,X,S,J)},MR=function(l){var U;F(this,Kd).abort(),b(this,Kd,null),(U=F(this,zV))==null||U.call(this),F(this,dd)&&(l.preventDefault(),b(this,dd,null),b(this,yF,!1))};let cc=lR;const A=class A{constructor(l){h(this,j);h(this,LF,null);h(this,aZ,null);h(this,Ml,null);h(this,H0,!1);h(this,Hd,null);h(this,LV,"");h(this,oF,!1);h(this,$l,null);h(this,kF,null);h(this,Qd,null);h(this,vd,null);h(this,oV,"");h(this,DF,!1);h(this,EU,null);h(this,kV,!1);h(this,IF,!1);h(this,Vd,!1);h(this,EZ,null);h(this,v0,0);h(this,P0,0);h(this,$U,null);h(this,EF,null);O(this,"_editToolbar",null);O(this,"_initialOptions",Object.create(null));O(this,"_initialData",null);O(this,"_isVisible",!0);O(this,"_uiManager",null);O(this,"_focusEventsAllowed",!0);h(this,DV,!1);h(this,Xc,A._zIndex++);this.parent=l.parent,this.id=l.id,this.width=this.height=null,this.pageIndex=l.parent.pageIndex,this.name=l.name,this.div=null,this._uiManager=l.uiManager,this.annotationElementId=null,this._willKeepAspectRatio=!1,this._initialOptions.isCentered=l.isCentered,this._structTreeParentId=null;const{rotation:U,rawDims:{pageWidth:Z,pageHeight:d,pageX:Q,pageY:V}}=this.parent.viewport;this.rotation=U,this.pageRotation=(360+U-this._uiManager.viewParameters.rotation)%360,this.pageDimensions=[Z,d],this.pageTranslation=[Q,V];const[W,c]=this.parentDimensions;this.x=l.x/W,this.y=l.y/c,this.isAttachedToDOM=!1,this.deleted=!1}static get _resizerKeyboardManager(){const l=A.prototype._resizeWithKeyboard,U=hF.TRANSLATE_SMALL,Z=hF.TRANSLATE_BIG;return _(this,"_resizerKeyboardManager",new dV([[["ArrowLeft","mac+ArrowLeft"],l,{args:[-U,0]}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],l,{args:[-Z,0]}],[["ArrowRight","mac+ArrowRight"],l,{args:[U,0]}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],l,{args:[Z,0]}],[["ArrowUp","mac+ArrowUp"],l,{args:[0,-U]}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],l,{args:[0,-Z]}],[["ArrowDown","mac+ArrowDown"],l,{args:[0,U]}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],l,{args:[0,Z]}],[["Escape","mac+Escape"],A.prototype._stopResizingWithKeyboard]]))}get editorType(){return Object.getPrototypeOf(this).constructor._type}static get isDrawer(){return!1}static get _defaultLineColor(){return _(this,"_defaultLineColor",this._colorManager.getHexCode("CanvasText"))}static deleteAnnotationElement(l){const U=new ab({id:l.parent.getNextId(),parent:l.parent,uiManager:l._uiManager});U.annotationElementId=l.annotationElementId,U.deleted=!0,U._uiManager.addToAnnotationStorage(U)}static initialize(l,U){if(A._l10n??(A._l10n=l),A._l10nResizer||(A._l10nResizer=Object.freeze({topLeft:"pdfjs-editor-resizer-top-left",topMiddle:"pdfjs-editor-resizer-top-middle",topRight:"pdfjs-editor-resizer-top-right",middleRight:"pdfjs-editor-resizer-middle-right",bottomRight:"pdfjs-editor-resizer-bottom-right",bottomMiddle:"pdfjs-editor-resizer-bottom-middle",bottomLeft:"pdfjs-editor-resizer-bottom-left",middleLeft:"pdfjs-editor-resizer-middle-left"})),A._borderLineWidth!==-1)return;const Z=getComputedStyle(document.documentElement);A._borderLineWidth=parseFloat(Z.getPropertyValue("--outline-width"))||0}static updateDefaultParams(l,U){}static get defaultPropertiesToUpdate(){return[]}static isHandlingMimeForPasting(l){return!1}static paste(l,U){al("Not implemented")}get propertiesToUpdate(){return[]}get _isDraggable(){return F(this,DV)}set _isDraggable(l){var U;b(this,DV,l),(U=this.div)==null||U.classList.toggle("draggable",l)}get isEnterHandled(){return!0}center(){const[l,U]=this.pageDimensions;switch(this.parentRotation){case 90:this.x-=this.height*U/(l*2),this.y+=this.width*l/(U*2);break;case 180:this.x+=this.width/2,this.y+=this.height/2;break;case 270:this.x+=this.height*U/(l*2),this.y-=this.width*l/(U*2);break;default:this.x-=this.width/2,this.y-=this.height/2;break}this.fixAndSetPosition()}addCommands(l){this._uiManager.addCommands(l)}get currentLayer(){return this._uiManager.currentLayer}setInBackground(){this.div.style.zIndex=0}setInForeground(){this.div.style.zIndex=F(this,Xc)}setParent(l){l!==null?(this.pageIndex=l.pageIndex,this.pageDimensions=l.pageDimensions):m(this,j,xW).call(this),this.parent=l}focusin(l){this._focusEventsAllowed&&(F(this,DF)?b(this,DF,!1):this.parent.setSelected(this))}focusout(l){var Z;if(!this._focusEventsAllowed||!this.isAttachedToDOM)return;const U=l.relatedTarget;U!=null&&U.closest(`#${this.id}`)||(l.preventDefault(),(Z=this.parent)!=null&&Z.isMultipleSelection||this.commitOrRemove())}commitOrRemove(){this.isEmpty()?this.remove():this.commit()}commit(){this.addToAnnotationStorage()}addToAnnotationStorage(){this._uiManager.addToAnnotationStorage(this)}setAt(l,U,Z,d){const[Q,V]=this.parentDimensions;[Z,d]=this.screenToPageTranslation(Z,d),this.x=(l+Z)/Q,this.y=(U+d)/V,this.fixAndSetPosition()}translate(l,U){m(this,j,JR).call(this,this.parentDimensions,l,U)}translateInPage(l,U){F(this,EU)||b(this,EU,[this.x,this.y,this.width,this.height]),m(this,j,JR).call(this,this.pageDimensions,l,U),this.div.scrollIntoView({block:"nearest"})}drag(l,U){F(this,EU)||b(this,EU,[this.x,this.y,this.width,this.height]);const{div:Z,parentDimensions:[d,Q]}=this;if(this.x+=l/d,this.y+=U/Q,this.parent&&(this.x<0||this.x>1||this.y<0||this.y>1)){const{x:s,y:n}=this.div.getBoundingClientRect();this.parent.findNewParent(this,s,n)&&(this.x-=Math.floor(this.x),this.y-=Math.floor(this.y))}let{x:V,y:W}=this;const[c,t]=this.getBaseTranslation();V+=c,W+=t;const{style:R}=Z;R.left=`${(100*V).toFixed(2)}%`,R.top=`${(100*W).toFixed(2)}%`,this._onTranslating(V,W),Z.scrollIntoView({block:"nearest"})}_onTranslating(l,U){}_onTranslated(l,U){}get _hasBeenMoved(){return!!F(this,EU)&&(F(this,EU)[0]!==this.x||F(this,EU)[1]!==this.y)}get _hasBeenResized(){return!!F(this,EU)&&(F(this,EU)[2]!==this.width||F(this,EU)[3]!==this.height)}getBaseTranslation(){const[l,U]=this.parentDimensions,{_borderLineWidth:Z}=A,d=Z/l,Q=Z/U;switch(this.rotation){case 90:return[-d,Q];case 180:return[d,Q];case 270:return[d,-Q];default:return[-d,-Q]}}get _mustFixPosition(){return!0}fixAndSetPosition(l=this.rotation){const{div:{style:U},pageDimensions:[Z,d]}=this;let{x:Q,y:V,width:W,height:c}=this;if(W*=Z,c*=d,Q*=Z,V*=d,this._mustFixPosition)switch(l){case 0:Q=Math.max(0,Math.min(Z-W,Q)),V=Math.max(0,Math.min(d-c,V));break;case 90:Q=Math.max(0,Math.min(Z-c,Q)),V=Math.min(d,Math.max(W,V));break;case 180:Q=Math.min(Z,Math.max(W,Q)),V=Math.min(d,Math.max(c,V));break;case 270:Q=Math.min(Z,Math.max(c,Q)),V=Math.max(0,Math.min(d-W,V));break}this.x=Q/=Z,this.y=V/=d;const[t,R]=this.getBaseTranslation();Q+=t,V+=R,U.left=`${(100*Q).toFixed(2)}%`,U.top=`${(100*V).toFixed(2)}%`,this.moveInDOM()}screenToPageTranslation(l,U){var Z;return m(Z=A,IV,GR).call(Z,l,U,this.parentRotation)}pageTranslationToScreen(l,U){var Z;return m(Z=A,IV,GR).call(Z,l,U,360-this.parentRotation)}get parentScale(){return this._uiManager.viewParameters.realScale}get parentRotation(){return(this._uiManager.viewParameters.rotation+this.pageRotation)%360}get parentDimensions(){const{parentScale:l,pageDimensions:[U,Z]}=this;return[U*l,Z*l]}setDims(l,U){const[Z,d]=this.parentDimensions,{style:Q}=this.div;Q.width=`${(100*l/Z).toFixed(2)}%`,F(this,oF)||(Q.height=`${(100*U/d).toFixed(2)}%`)}fixDims(){const{style:l}=this.div,{height:U,width:Z}=l,d=Z.endsWith("%"),Q=!F(this,oF)&&U.endsWith("%");if(d&&Q)return;const[V,W]=this.parentDimensions;d||(l.width=`${(100*parseFloat(Z)/V).toFixed(2)}%`),!F(this,oF)&&!Q&&(l.height=`${(100*parseFloat(U)/W).toFixed(2)}%`)}getInitialTranslation(){return[0,0]}_onResized(){}static _round(l){return Math.round(l*1e4)/1e4}_onResizing(){}altTextFinish(){var l;(l=F(this,Ml))==null||l.finish()}async addEditToolbar(){return this._editToolbar||F(this,IF)?this._editToolbar:(this._editToolbar=new pt(this),this.div.append(this._editToolbar.render()),F(this,Ml)&&await this._editToolbar.addAltText(F(this,Ml)),this._editToolbar)}removeEditToolbar(){var l;this._editToolbar&&(this._editToolbar.remove(),this._editToolbar=null,(l=F(this,Ml))==null||l.destroy())}addContainer(l){var Z;const U=(Z=this._editToolbar)==null?void 0:Z.div;U?U.before(l):this.div.append(l)}getClientDimensions(){return this.div.getBoundingClientRect()}async addAltTextButton(){F(this,Ml)||(Wc.initialize(A._l10n),b(this,Ml,new Wc(this)),F(this,LF)&&(F(this,Ml).data=F(this,LF),b(this,LF,null)),await this.addEditToolbar())}get altTextData(){var l;return(l=F(this,Ml))==null?void 0:l.data}set altTextData(l){F(this,Ml)&&(F(this,Ml).data=l)}get guessedAltText(){var l;return(l=F(this,Ml))==null?void 0:l.guessedText}async setGuessedAltText(l){var U;await((U=F(this,Ml))==null?void 0:U.setGuessedText(l))}serializeAltText(l){var U;return(U=F(this,Ml))==null?void 0:U.serialize(l)}hasAltText(){return!!F(this,Ml)&&!F(this,Ml).isEmpty()}hasAltTextData(){var l;return((l=F(this,Ml))==null?void 0:l.hasData())??!1}render(){var Q;this.div=document.createElement("div"),this.div.setAttribute("data-editor-rotation",(360-this.rotation)%360),this.div.className=this.name,this.div.setAttribute("id",this.id),this.div.tabIndex=F(this,H0)?-1:0,this._isVisible||this.div.classList.add("hidden"),this.setInForeground(),m(this,j,YR).call(this);const[l,U]=this.parentDimensions;this.parentRotation%180!==0&&(this.div.style.maxWidth=`${(100*U/l).toFixed(2)}%`,this.div.style.maxHeight=`${(100*l/U).toFixed(2)}%`);const[Z,d]=this.getInitialTranslation();return this.translate(Z,d),Vc(this,this.div,["pointerdown"]),this.isResizable&&this._uiManager._supportsPinchToZoom&&(F(this,EF)||b(this,EF,new cc({container:this.div,isPinchingDisabled:()=>!this.isSelected,onPinchStart:m(this,j,ws).bind(this),onPinching:m(this,j,xs).bind(this),onPinchEnd:m(this,j,js).bind(this),signal:this._uiManager._signal}))),(Q=this._uiManager._editorUndoBar)==null||Q.hide(),this.div}pointerdown(l){const{isMac:U}=bU.platform;if(l.button!==0||l.ctrlKey&&U){l.preventDefault();return}if(b(this,DF,!0),this._isDraggable){m(this,j,Os).call(this,l);return}m(this,j,XR).call(this,l)}get isSelected(){return this._uiManager.isSelected(this)}_onStartDragging(){}_onStopDragging(){}moveInDOM(){F(this,EZ)&&clearTimeout(F(this,EZ)),b(this,EZ,setTimeout(()=>{var l;b(this,EZ,null),(l=this.parent)==null||l.moveEditorInDOM(this)},0))}_setParentAndPosition(l,U,Z){l.changeParent(this),this.x=U,this.y=Z,this.fixAndSetPosition(),this._onTranslated()}getRect(l,U,Z=this.rotation){const d=this.parentScale,[Q,V]=this.pageDimensions,[W,c]=this.pageTranslation,t=l/d,R=U/d,s=this.x*Q,n=this.y*V,a=this.width*Q,i=this.height*V;switch(Z){case 0:return[s+t+W,V-n-R-i+c,s+t+a+W,V-n-R+c];case 90:return[s+R+W,V-n+t+c,s+R+i+W,V-n+t+a+c];case 180:return[s-t-a+W,V-n+R+c,s-t+W,V-n+R+i+c];case 270:return[s-R-i+W,V-n-t-a+c,s-R+W,V-n-t+c];default:throw new Error("Invalid rotation")}}getRectInCurrentCoords(l,U){const[Z,d,Q,V]=l,W=Q-Z,c=V-d;switch(this.rotation){case 0:return[Z,U-V,W,c];case 90:return[Z,U-d,c,W];case 180:return[Q,U-d,W,c];case 270:return[Q,U-V,c,W];default:throw new Error("Invalid rotation")}}onceAdded(l){}isEmpty(){return!1}enableEditMode(){b(this,IF,!0)}disableEditMode(){b(this,IF,!1)}isInEditMode(){return F(this,IF)}shouldGetKeyboardEvents(){return F(this,Vd)}needsToBeRebuilt(){return this.div&&!this.isAttachedToDOM}get isOnScreen(){const{top:l,left:U,bottom:Z,right:d}=this.getClientDimensions(),{innerHeight:Q,innerWidth:V}=window;return U<V&&d>0&&l<Q&&Z>0}rebuild(){m(this,j,YR).call(this)}rotate(l){}resize(){}serializeDeleted(){var l;return{id:this.annotationElementId,deleted:!0,pageIndex:this.pageIndex,popupRef:((l=this._initialData)==null?void 0:l.popupRef)||""}}serialize(l=!1,U=null){al("An editor must be serializable")}static async deserialize(l,U,Z){const d=new this.prototype.constructor({parent:U,id:U.getNextId(),uiManager:Z});d.rotation=l.rotation,b(d,LF,l.accessibilityData);const[Q,V]=d.pageDimensions,[W,c,t,R]=d.getRectInCurrentCoords(l.rect,V);return d.x=W/Q,d.y=c/V,d.width=t/Q,d.height=R/V,d}get hasBeenModified(){return!!this.annotationElementId&&(this.deleted||this.serialize()!==null)}remove(){var l,U;if((l=F(this,vd))==null||l.abort(),b(this,vd,null),this.isEmpty()||this.commit(),this.parent?this.parent.remove(this):this._uiManager.removeEditor(this),F(this,EZ)&&(clearTimeout(F(this,EZ)),b(this,EZ,null)),m(this,j,xW).call(this),this.removeEditToolbar(),F(this,$U)){for(const Z of F(this,$U).values())clearTimeout(Z);b(this,$U,null)}this.parent=null,(U=F(this,EF))==null||U.destroy(),b(this,EF,null)}get isResizable(){return!1}makeResizable(){this.isResizable&&(m(this,j,Es).call(this),F(this,$l).classList.remove("hidden"),Vc(this,this.div,["keydown"]))}get toolbarPosition(){return null}keydown(l){if(!this.isResizable||l.target!==this.div||l.key!=="Enter")return;this._uiManager.setSelected(this),b(this,Qd,{savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height});const U=F(this,$l).children;if(!F(this,aZ)){b(this,aZ,Array.from(U));const V=m(this,j,rs).bind(this),W=m(this,j,gs).bind(this),c=this._uiManager._signal;for(const t of F(this,aZ)){const R=t.getAttribute("data-resizer-name");t.setAttribute("role","spinbutton"),t.addEventListener("keydown",V,{signal:c}),t.addEventListener("blur",W,{signal:c}),t.addEventListener("focus",m(this,j,Ks).bind(this,R),{signal:c}),t.setAttribute("data-l10n-id",A._l10nResizer[R])}}const Z=F(this,aZ)[0];let d=0;for(const V of U){if(V===Z)break;d++}const Q=(360-this.rotation+this.parentRotation)%360/90*(F(this,aZ).length/4);if(Q!==d){if(Q<d)for(let W=0;W<d-Q;W++)F(this,$l).append(F(this,$l).firstChild);else if(Q>d)for(let W=0;W<Q-d;W++)F(this,$l).firstChild.before(F(this,$l).lastChild);let V=0;for(const W of U){const t=F(this,aZ)[V++].getAttribute("data-resizer-name");W.setAttribute("data-l10n-id",A._l10nResizer[t])}}m(this,j,BR).call(this,0),b(this,Vd,!0),F(this,$l).firstChild.focus({focusVisible:!0}),l.preventDefault(),l.stopImmediatePropagation()}_resizeWithKeyboard(l,U){F(this,Vd)&&m(this,j,SR).call(this,F(this,oV),{deltaX:l,deltaY:U,fromKeyboard:!0})}_stopResizingWithKeyboard(){m(this,j,xW).call(this),this.div.focus()}select(){var l,U,Z;if(this.makeResizable(),(l=this.div)==null||l.classList.add("selectedEditor"),!this._editToolbar){this.addEditToolbar().then(()=>{var d,Q;(d=this.div)!=null&&d.classList.contains("selectedEditor")&&((Q=this._editToolbar)==null||Q.show())});return}(U=this._editToolbar)==null||U.show(),(Z=F(this,Ml))==null||Z.toggleAltTextBadge(!1)}unselect(){var l,U,Z,d,Q;(l=F(this,$l))==null||l.classList.add("hidden"),(U=this.div)==null||U.classList.remove("selectedEditor"),(Z=this.div)!=null&&Z.contains(document.activeElement)&&this._uiManager.currentLayer.div.focus({preventScroll:!0}),(d=this._editToolbar)==null||d.hide(),(Q=F(this,Ml))==null||Q.toggleAltTextBadge(!0)}updateParams(l,U){}disableEditing(){}enableEditing(){}enterInEditMode(){}getImageForAltText(){return null}get contentDiv(){return this.div}get isEditing(){return F(this,kV)}set isEditing(l){b(this,kV,l),this.parent&&(l?(this.parent.setSelected(this),this.parent.setActiveEditor(this)):this.parent.setActiveEditor(null))}setAspectRatio(l,U){b(this,oF,!0);const Z=l/U,{style:d}=this.div;d.aspectRatio=Z,d.height="auto"}static get MIN_SIZE(){return 16}static canCreateNewEmptyEditor(){return!0}get telemetryInitialData(){return{action:"added"}}get telemetryFinalData(){return null}_reportTelemetry(l,U=!1){if(U){F(this,$U)||b(this,$U,new Map);const{action:Z}=l;let d=F(this,$U).get(Z);d&&clearTimeout(d),d=setTimeout(()=>{this._reportTelemetry(l),F(this,$U).delete(Z),F(this,$U).size===0&&b(this,$U,null)},A._telemetryTimeout),F(this,$U).set(Z,d);return}l.type||(l.type=this.editorType),this._uiManager._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:l}})}show(l=this._isVisible){this.div.classList.toggle("hidden",!l),this._isVisible=l}enable(){this.div&&(this.div.tabIndex=0),b(this,H0,!1)}disable(){this.div&&(this.div.tabIndex=-1),b(this,H0,!0)}renderAnnotationElement(l){let U=l.container.querySelector(".annotationContent");if(!U)U=document.createElement("div"),U.classList.add("annotationContent",this.editorType),l.container.prepend(U);else if(U.nodeName==="CANVAS"){const Z=U;U=document.createElement("div"),U.classList.add("annotationContent",this.editorType),Z.before(U)}return U}resetAnnotationElement(l){const{firstChild:U}=l.container;(U==null?void 0:U.nodeName)==="DIV"&&U.classList.contains("annotationContent")&&U.remove()}};LF=new WeakMap,aZ=new WeakMap,Ml=new WeakMap,H0=new WeakMap,Hd=new WeakMap,LV=new WeakMap,oF=new WeakMap,$l=new WeakMap,kF=new WeakMap,Qd=new WeakMap,vd=new WeakMap,oV=new WeakMap,DF=new WeakMap,EU=new WeakMap,kV=new WeakMap,IF=new WeakMap,Vd=new WeakMap,EZ=new WeakMap,v0=new WeakMap,P0=new WeakMap,$U=new WeakMap,EF=new WeakMap,DV=new WeakMap,Xc=new WeakMap,j=new WeakSet,JR=function([l,U],Z,d){[Z,d]=this.screenToPageTranslation(Z,d),this.x+=Z/l,this.y+=d/U,this._onTranslating(this.x,this.y),this.fixAndSetPosition()},IV=new WeakSet,GR=function(l,U,Z){switch(Z){case 90:return[U,-l];case 180:return[-l,-U];case 270:return[-U,l];default:return[l,U]}},Hc=function(l){switch(l){case 90:{const[U,Z]=this.pageDimensions;return[0,-U/Z,Z/U,0]}case 180:return[-1,0,0,-1];case 270:{const[U,Z]=this.pageDimensions;return[0,U/Z,-Z/U,0]}default:return[1,0,0,1]}},Es=function(){if(F(this,$l))return;b(this,$l,document.createElement("div")),F(this,$l).classList.add("resizers");const l=this._willKeepAspectRatio?["topLeft","topRight","bottomRight","bottomLeft"]:["topLeft","topMiddle","topRight","middleRight","bottomRight","bottomMiddle","bottomLeft","middleLeft"],U=this._uiManager._signal;for(const Z of l){const d=document.createElement("div");F(this,$l).append(d),d.classList.add("resizer",Z),d.setAttribute("data-resizer-name",Z),d.addEventListener("pointerdown",m(this,j,Cs).bind(this,Z),{signal:U}),d.addEventListener("contextmenu",RZ,{signal:U}),d.tabIndex=-1}this.div.prepend(F(this,$l))},Cs=function(l,U){var R;U.preventDefault();const{isMac:Z}=bU.platform;if(U.button!==0||U.ctrlKey&&Z)return;(R=F(this,Ml))==null||R.toggle(!1);const d=this._isDraggable;this._isDraggable=!1,b(this,kF,[U.screenX,U.screenY]);const Q=new AbortController,V=this._uiManager.combinedSignal(Q);this.parent.togglePointerEvents(!1),window.addEventListener("pointermove",m(this,j,SR).bind(this,l),{passive:!0,capture:!0,signal:V}),window.addEventListener("touchmove",kU,{passive:!1,signal:V}),window.addEventListener("contextmenu",RZ,{signal:V}),b(this,Qd,{savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height});const W=this.parent.div.style.cursor,c=this.div.style.cursor;this.div.style.cursor=this.parent.div.style.cursor=window.getComputedStyle(U.target).cursor;const t=()=>{var s;Q.abort(),this.parent.togglePointerEvents(!0),(s=F(this,Ml))==null||s.toggle(!0),this._isDraggable=d,this.parent.div.style.cursor=W,this.div.style.cursor=c,m(this,j,vc).call(this)};window.addEventListener("pointerup",t,{signal:V}),window.addEventListener("blur",t,{signal:V})},TR=function(l,U,Z,d){this.width=Z,this.height=d,this.x=l,this.y=U;const[Q,V]=this.parentDimensions;this.setDims(Q*Z,V*d),this.fixAndSetPosition(),this._onResized()},vc=function(){if(!F(this,Qd))return;const{savedX:l,savedY:U,savedWidth:Z,savedHeight:d}=F(this,Qd);b(this,Qd,null);const Q=this.x,V=this.y,W=this.width,c=this.height;Q===l&&V===U&&W===Z&&c===d||this.addCommands({cmd:m(this,j,TR).bind(this,Q,V,W,c),undo:m(this,j,TR).bind(this,l,U,Z,d),mustExec:!0})},SR=function(l,U){const[Z,d]=this.parentDimensions,Q=this.x,V=this.y,W=this.width,c=this.height,t=A.MIN_SIZE/Z,R=A.MIN_SIZE/d,s=m(this,j,Hc).call(this,this.rotation),n=(k,x)=>[s[0]*k+s[2]*x,s[1]*k+s[3]*x],a=m(this,j,Hc).call(this,360-this.rotation),i=(k,x)=>[a[0]*k+a[2]*x,a[1]*k+a[3]*x];let M,G,J=!1,S=!1;switch(l){case"topLeft":J=!0,M=(k,x)=>[0,0],G=(k,x)=>[k,x];break;case"topMiddle":M=(k,x)=>[k/2,0],G=(k,x)=>[k/2,x];break;case"topRight":J=!0,M=(k,x)=>[k,0],G=(k,x)=>[0,x];break;case"middleRight":S=!0,M=(k,x)=>[k,x/2],G=(k,x)=>[0,x/2];break;case"bottomRight":J=!0,M=(k,x)=>[k,x],G=(k,x)=>[0,0];break;case"bottomMiddle":M=(k,x)=>[k/2,x],G=(k,x)=>[k/2,0];break;case"bottomLeft":J=!0,M=(k,x)=>[0,x],G=(k,x)=>[k,0];break;case"middleLeft":S=!0,M=(k,x)=>[0,x/2],G=(k,x)=>[k,x/2];break}const X=M(W,c),Y=G(W,c);let B=n(...Y);const p=A._round(Q+B[0]),e=A._round(V+B[1]);let o=1,w=1,f,r;if(U.fromKeyboard)({deltaX:f,deltaY:r}=U);else{const{screenX:k,screenY:x}=U,[sU,fU]=F(this,kF);[f,r]=this.screenToPageTranslation(k-sU,x-fU),F(this,kF)[0]=k,F(this,kF)[1]=x}if([f,r]=i(f/Z,r/d),J){const k=Math.hypot(W,c);o=w=Math.max(Math.min(Math.hypot(Y[0]-X[0]-f,Y[1]-X[1]-r)/k,1/W,1/c),t/W,R/c)}else S?o=Math.max(t,Math.min(1,Math.abs(Y[0]-X[0]-f)))/W:w=Math.max(R,Math.min(1,Math.abs(Y[1]-X[1]-r)))/c;const hl=A._round(W*o),cl=A._round(c*w);B=n(...G(hl,cl));const $=p-B[0],ol=e-B[1];F(this,EU)||b(this,EU,[this.x,this.y,this.width,this.height]),this.width=hl,this.height=cl,this.x=$,this.y=ol,this.setDims(Z*hl,d*cl),this.fixAndSetPosition(),this._onResizing()},ws=function(){var l;b(this,Qd,{savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height}),(l=F(this,Ml))==null||l.toggle(!1),this.parent.togglePointerEvents(!1)},xs=function(l,U,Z){let Q=.7*(Z/U)+1-.7;if(Q===1)return;const V=m(this,j,Hc).call(this,this.rotation),W=(p,e)=>[V[0]*p+V[2]*e,V[1]*p+V[3]*e],[c,t]=this.parentDimensions,R=this.x,s=this.y,n=this.width,a=this.height,i=A.MIN_SIZE/c,M=A.MIN_SIZE/t;Q=Math.max(Math.min(Q,1/n,1/a),i/n,M/a);const G=A._round(n*Q),J=A._round(a*Q);if(G===n&&J===a)return;F(this,EU)||b(this,EU,[R,s,n,a]);const S=W(n/2,a/2),X=A._round(R+S[0]),Y=A._round(s+S[1]),B=W(G/2,J/2);this.x=X-B[0],this.y=Y-B[1],this.width=G,this.height=J,this.setDims(c*G,t*J),this.fixAndSetPosition(),this._onResizing()},js=function(){var l;(l=F(this,Ml))==null||l.toggle(!0),this.parent.togglePointerEvents(!0),m(this,j,vc).call(this)},XR=function(l){const{isMac:U}=bU.platform;l.ctrlKey&&!U||l.shiftKey||l.metaKey&&U?this.parent.toggleSelected(this):this.parent.setSelected(this)},Os=function(l){const{isSelected:U}=this;this._uiManager.setUpDragSession();let Z=!1;const d=new AbortController,Q=this._uiManager.combinedSignal(d),V={capture:!0,passive:!1,signal:Q},W=t=>{d.abort(),b(this,Hd,null),b(this,DF,!1),this._uiManager.endDragSession()||m(this,j,XR).call(this,t),Z&&this._onStopDragging()};U&&(b(this,v0,l.clientX),b(this,P0,l.clientY),b(this,Hd,l.pointerId),b(this,LV,l.pointerType),window.addEventListener("pointermove",t=>{Z||(Z=!0,this._onStartDragging());const{clientX:R,clientY:s,pointerId:n}=t;if(n!==F(this,Hd)){kU(t);return}const[a,i]=this.screenToPageTranslation(R-F(this,v0),s-F(this,P0));b(this,v0,R),b(this,P0,s),this._uiManager.dragSelectedEditors(a,i)},V),window.addEventListener("touchmove",kU,V),window.addEventListener("pointerdown",t=>{t.pointerType===F(this,LV)&&(F(this,EF)||t.isPrimary)&&W(t),kU(t)},V));const c=t=>{if(!F(this,Hd)||F(this,Hd)===t.pointerId){W(t);return}kU(t)};window.addEventListener("pointerup",c,{signal:Q}),window.addEventListener("blur",c,{signal:Q})},YR=function(){if(F(this,vd)||!this.div)return;b(this,vd,new AbortController);const l=this._uiManager.combinedSignal(F(this,vd));this.div.addEventListener("focusin",this.focusin.bind(this),{signal:l}),this.div.addEventListener("focusout",this.focusout.bind(this),{signal:l})},rs=function(l){A._resizerKeyboardManager.exec(this,l)},gs=function(l){var U;F(this,Vd)&&((U=l.relatedTarget)==null?void 0:U.parentNode)!==F(this,$l)&&m(this,j,xW).call(this)},Ks=function(l){b(this,oV,F(this,Vd)?l:"")},BR=function(l){if(F(this,aZ))for(const U of F(this,aZ))U.tabIndex=l},xW=function(){b(this,Vd,!1),m(this,j,BR).call(this,-1),m(this,j,vc).call(this)},h(A,IV),O(A,"_l10n",null),O(A,"_l10nResizer",null),O(A,"_borderLineWidth",-1),O(A,"_colorManager",new yt),O(A,"_zIndex",1),O(A,"_telemetryTimeout",1e3);let Yl=A;class ab extends Yl{constructor(l){super(l),this.annotationElementId=l.annotationElementId,this.deleted=!0}serialize(){return this.serializeDeleted()}}const sN=3285377520,AU=4294901760,pZ=65535;class nN{constructor(l){this.h1=l?l&4294967295:sN,this.h2=l?l&4294967295:sN}update(l){let U,Z;if(typeof l=="string"){U=new Uint8Array(l.length*2),Z=0;for(let M=0,G=l.length;M<G;M++){const J=l.charCodeAt(M);J<=255?U[Z++]=J:(U[Z++]=J>>>8,U[Z++]=J&255)}}else if(ArrayBuffer.isView(l))U=l.slice(),Z=U.byteLength;else throw new Error("Invalid data format, must be a string or TypedArray.");const d=Z>>2,Q=Z-d*4,V=new Uint32Array(U.buffer,0,d);let W=0,c=0,t=this.h1,R=this.h2;const s=3432918353,n=461845907,a=s&pZ,i=n&pZ;for(let M=0;M<d;M++)M&1?(W=V[M],W=W*s&AU|W*a&pZ,W=W<<15|W>>>17,W=W*n&AU|W*i&pZ,t^=W,t=t<<13|t>>>19,t=t*5+3864292196):(c=V[M],c=c*s&AU|c*a&pZ,c=c<<15|c>>>17,c=c*n&AU|c*i&pZ,R^=c,R=R<<13|R>>>19,R=R*5+3864292196);switch(W=0,Q){case 3:W^=U[d*4+2]<<16;case 2:W^=U[d*4+1]<<8;case 1:W^=U[d*4],W=W*s&AU|W*a&pZ,W=W<<15|W>>>17,W=W*n&AU|W*i&pZ,d&1?t^=W:R^=W}this.h1=t,this.h2=R}hexdigest(){let l=this.h1,U=this.h2;return l^=U>>>1,l=l*3981806797&AU|l*36045&pZ,U=U*4283543511&AU|((U<<16|l>>>16)*2950163797&AU)>>>16,l^=U>>>1,l=l*444984403&AU|l*60499&pZ,U=U*3301882366&AU|((U<<16|l>>>16)*3120437893&AU)>>>16,l^=U>>>1,(l>>>0).toString(16).padStart(8,"0")+(U>>>0).toString(16).padStart(8,"0")}}const zt=Object.freeze({map:null,hash:"",transfer:void 0});class Lt{constructor(){h(this,Yc);h(this,CF,!1);h(this,wF,null);h(this,vl,new Map);this.onSetModified=null,this.onResetModified=null,this.onAnnotationEditor=null}getValue(l,U){const Z=F(this,vl).get(l);return Z===void 0?U:Object.assign(U,Z)}getRawValue(l){return F(this,vl).get(l)}remove(l){if(F(this,vl).delete(l),F(this,vl).size===0&&this.resetModified(),typeof this.onAnnotationEditor=="function"){for(const U of F(this,vl).values())if(U instanceof Yl)return;this.onAnnotationEditor(null)}}setValue(l,U){const Z=F(this,vl).get(l);let d=!1;if(Z!==void 0)for(const[Q,V]of Object.entries(U))Z[Q]!==V&&(d=!0,Z[Q]=V);else d=!0,F(this,vl).set(l,U);d&&m(this,Yc,Hs).call(this),U instanceof Yl&&typeof this.onAnnotationEditor=="function"&&this.onAnnotationEditor(U.constructor._type)}has(l){return F(this,vl).has(l)}getAll(){return F(this,vl).size>0?Mt(F(this,vl)):null}setAll(l){for(const[U,Z]of Object.entries(l))this.setValue(U,Z)}get size(){return F(this,vl).size}resetModified(){F(this,CF)&&(b(this,CF,!1),typeof this.onResetModified=="function"&&this.onResetModified())}get print(){return new bN(this)}get serializable(){if(F(this,vl).size===0)return zt;const l=new Map,U=new nN,Z=[],d=Object.create(null);let Q=!1;for(const[V,W]of F(this,vl)){const c=W instanceof Yl?W.serialize(!1,d):W;c&&(l.set(V,c),U.update(`${V}:${JSON.stringify(c)}`),Q||(Q=!!c.bitmap))}if(Q)for(const V of l.values())V.bitmap&&Z.push(V.bitmap);return l.size>0?{map:l,hash:U.hexdigest(),transfer:Z}:zt}get editorStats(){let l=null;const U=new Map;for(const Z of F(this,vl).values()){if(!(Z instanceof Yl))continue;const d=Z.telemetryFinalData;if(!d)continue;const{type:Q}=d;U.has(Q)||U.set(Q,Object.getPrototypeOf(Z).constructor),l||(l=Object.create(null));const V=l[Q]||(l[Q]=new Map);for(const[W,c]of Object.entries(d)){if(W==="type")continue;let t=V.get(W);t||(t=new Map,V.set(W,t));const R=t.get(c)??0;t.set(c,R+1)}}for(const[Z,d]of U)l[Z]=d.computeTelemetryFinalData(l[Z]);return l}resetModifiedIds(){b(this,wF,null)}get modifiedIds(){if(F(this,wF))return F(this,wF);const l=[];for(const U of F(this,vl).values())!(U instanceof Yl)||!U.annotationElementId||!U.serialize()||l.push(U.annotationElementId);return b(this,wF,{ids:new Set(l),hash:l.join(",")})}}CF=new WeakMap,wF=new WeakMap,vl=new WeakMap,Yc=new WeakSet,Hs=function(){F(this,CF)||(b(this,CF,!0),typeof this.onSetModified=="function"&&this.onSetModified())};class bN extends Lt{constructor(U){super();h(this,EV);const{map:Z,hash:d,transfer:Q}=U.serializable,V=structuredClone(Z,Q?{transfer:Q}:null);b(this,EV,{map:V,hash:d,transfer:Q})}get print(){al("Should not call PrintAnnotationStorage.print")}get serializable(){return F(this,EV)}get modifiedIds(){return _(this,"modifiedIds",{ids:new Set,hash:""})}}EV=new WeakMap;class hb{constructor({ownerDocument:l=globalThis.document,styleElement:U=null}){h(this,f0,new Set);this._document=l,this.nativeFontFaces=new Set,this.styleElement=null,this.loadingRequests=[],this.loadTestFontId=0}addNativeFontFace(l){this.nativeFontFaces.add(l),this._document.fonts.add(l)}removeNativeFontFace(l){this.nativeFontFaces.delete(l),this._document.fonts.delete(l)}insertRule(l){this.styleElement||(this.styleElement=this._document.createElement("style"),this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement));const U=this.styleElement.sheet;U.insertRule(l,U.cssRules.length)}clear(){for(const l of this.nativeFontFaces)this._document.fonts.delete(l);this.nativeFontFaces.clear(),F(this,f0).clear(),this.styleElement&&(this.styleElement.remove(),this.styleElement=null)}async loadSystemFont({systemFontInfo:l,_inspectFont:U}){if(!(!l||F(this,f0).has(l.loadedName))){if(Dl(!this.disableFontFace,"loadSystemFont shouldn't be called when `disableFontFace` is set."),this.isFontLoadingAPISupported){const{loadedName:Z,src:d,style:Q}=l,V=new FontFace(Z,d,Q);this.addNativeFontFace(V);try{await V.load(),F(this,f0).add(Z),U==null||U(l)}catch{P(`Cannot load system font: ${l.baseFontName}, installing it could help to improve PDF rendering.`),this.removeNativeFontFace(V)}return}al("Not implemented: loadSystemFont without the Font Loading API.")}}async bind(l){if(l.attached||l.missingFile&&!l.systemFontInfo)return;if(l.attached=!0,l.systemFontInfo){await this.loadSystemFont(l);return}if(this.isFontLoadingAPISupported){const Z=l.createNativeFontFace();if(Z){this.addNativeFontFace(Z);try{await Z.loaded}catch(d){throw P(`Failed to load font '${Z.family}': '${d}'.`),l.disableFontFace=!0,d}}return}const U=l.createFontFaceRule();if(U){if(this.insertRule(U),this.isSyncFontLoadingSupported)return;await new Promise(Z=>{const d=this._queueLoadingCallback(Z);this._prepareFontLoadEvent(l,d)})}}get isFontLoadingAPISupported(){var U;const l=!!((U=this._document)!=null&&U.fonts);return _(this,"isFontLoadingAPISupported",l)}get isSyncFontLoadingSupported(){let l=!1;return(FU||typeof navigator<"u"&&typeof(navigator==null?void 0:navigator.userAgent)=="string"&&/Mozilla\/5.0.*?rv:\d+.*? Gecko/.test(navigator.userAgent))&&(l=!0),_(this,"isSyncFontLoadingSupported",l)}_queueLoadingCallback(l){function U(){for(Dl(!d.done,"completeRequest() cannot be called twice."),d.done=!0;Z.length>0&&Z[0].done;){const Q=Z.shift();setTimeout(Q.callback,0)}}const{loadingRequests:Z}=this,d={done:!1,complete:U,callback:l};return Z.push(d),d}get _loadTestFont(){const l=atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==");return _(this,"_loadTestFont",l)}_prepareFontLoadEvent(l,U){function Z(Y,B){return Y.charCodeAt(B)<<24|Y.charCodeAt(B+1)<<16|Y.charCodeAt(B+2)<<8|Y.charCodeAt(B+3)&255}function d(Y,B,p,e){const o=Y.substring(0,B),w=Y.substring(B+p);return o+e+w}let Q,V;const W=this._document.createElement("canvas");W.width=1,W.height=1;const c=W.getContext("2d");let t=0;function R(Y,B){if(++t>30){P("Load test font never loaded."),B();return}if(c.font="30px "+Y,c.fillText(".",0,20),c.getImageData(0,0,1,1).data[3]>0){B();return}setTimeout(R.bind(null,Y,B))}const s=`lt${Date.now()}${this.loadTestFontId++}`;let n=this._loadTestFont;n=d(n,976,s.length,s);const i=16,M=1482184792;let G=Z(n,i);for(Q=0,V=s.length-3;Q<V;Q+=4)G=G-M+Z(s,Q)|0;Q<s.length&&(G=G-M+Z(s+"XXX",Q)|0),n=d(n,i,4,Ub(G));const J=`url(data:font/opentype;base64,${btoa(n)});`,S=`@font-face {font-family:"${s}";src:${J}}`;this.insertRule(S);const X=this._document.createElement("div");X.style.visibility="hidden",X.style.width=X.style.height="10px",X.style.position="absolute",X.style.top=X.style.left="0px";for(const Y of[l.loadedName,s]){const B=this._document.createElement("span");B.textContent="Hi",B.style.fontFamily=Y,X.append(B)}this._document.body.append(X),R(s,()=>{X.remove(),U.complete()})}}f0=new WeakMap;class mb{constructor(l,{disableFontFace:U=!1,fontExtraProperties:Z=!1,inspectFont:d=null}){this.compiledGlyphs=Object.create(null);for(const Q in l)this[Q]=l[Q];this.disableFontFace=U===!0,this.fontExtraProperties=Z===!0,this._inspectFont=d}createNativeFontFace(){var U;if(!this.data||this.disableFontFace)return null;let l;if(!this.cssFontInfo)l=new FontFace(this.loadedName,this.data,{});else{const Z={weight:this.cssFontInfo.fontWeight};this.cssFontInfo.italicAngle&&(Z.style=`oblique ${this.cssFontInfo.italicAngle}deg`),l=new FontFace(this.cssFontInfo.fontFamily,this.data,Z)}return(U=this._inspectFont)==null||U.call(this,this),l}createFontFaceRule(){var Z;if(!this.data||this.disableFontFace)return null;const l=`url(data:${this.mimetype};base64,${Wb(this.data)});`;let U;if(!this.cssFontInfo)U=`@font-face {font-family:"${this.loadedName}";src:${l}}`;else{let d=`font-weight: ${this.cssFontInfo.fontWeight};`;this.cssFontInfo.italicAngle&&(d+=`font-style: oblique ${this.cssFontInfo.italicAngle}deg;`),U=`@font-face {font-family:"${this.cssFontInfo.fontFamily}";${d}src:${l}}`}return(Z=this._inspectFont)==null||Z.call(this,this,l),U}getPathGenerator(l,U){if(this.compiledGlyphs[U]!==void 0)return this.compiledGlyphs[U];const Z=this.loadedName+"_path_"+U;let d;try{d=l.get(Z)}catch(V){P(`getPathGenerator - ignoring character: "${V}".`)}const Q=new Path2D(d||"");return this.fontExtraProperties||l.delete(Z),this.compiledGlyphs[U]=Q}}const tc={DATA:1,ERROR:2},Il={CANCEL:1,CANCEL_COMPLETE:2,CLOSE:3,ENQUEUE:4,ERROR:5,PULL:6,PULL_COMPLETE:7,START_COMPLETE:8};function aN(){}function YU(N){if(N instanceof Ld||N instanceof it||N instanceof lV||N instanceof cN||N instanceof Zc||N instanceof mt)return N;switch(N instanceof Error||typeof N=="object"&&N!==null||al('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),N.name){case"AbortException":return new Ld(N.message);case"InvalidPDFException":return new it(N.message);case"MissingPDFException":return new lV(N.message);case"PasswordException":return new cN(N.message,N.code);case"UnexpectedResponseException":return new Zc(N.message,N.status);case"UnknownErrorException":return new mt(N.message,N.details)}return new mt(N.message,N.toString())}class FV{constructor(l,U,Z){h(this,lZ);h(this,A0,new AbortController);this.sourceName=l,this.targetName=U,this.comObj=Z,this.callbackId=1,this.streamId=1,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),Z.addEventListener("message",m(this,lZ,vs).bind(this),{signal:F(this,A0).signal})}on(l,U){const Z=this.actionHandler;if(Z[l])throw new Error(`There is already an actionName called "${l}"`);Z[l]=U}send(l,U,Z){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:l,data:U},Z)}sendWithPromise(l,U,Z){const d=this.callbackId++,Q=Promise.withResolvers();this.callbackCapabilities[d]=Q;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:l,callbackId:d,data:U},Z)}catch(V){Q.reject(V)}return Q.promise}sendWithStream(l,U,Z,d){const Q=this.streamId++,V=this.sourceName,W=this.targetName,c=this.comObj;return new ReadableStream({start:t=>{const R=Promise.withResolvers();return this.streamControllers[Q]={controller:t,startCall:R,pullCall:null,cancelCall:null,isClosed:!1},c.postMessage({sourceName:V,targetName:W,action:l,streamId:Q,data:U,desiredSize:t.desiredSize},d),R.promise},pull:t=>{const R=Promise.withResolvers();return this.streamControllers[Q].pullCall=R,c.postMessage({sourceName:V,targetName:W,stream:Il.PULL,streamId:Q,desiredSize:t.desiredSize}),R.promise},cancel:t=>{Dl(t instanceof Error,"cancel must have a valid reason");const R=Promise.withResolvers();return this.streamControllers[Q].cancelCall=R,this.streamControllers[Q].isClosed=!0,c.postMessage({sourceName:V,targetName:W,stream:Il.CANCEL,streamId:Q,reason:YU(t)}),R.promise}},Z)}destroy(){var l;(l=F(this,A0))==null||l.abort(),b(this,A0,null)}}A0=new WeakMap,lZ=new WeakSet,vs=function({data:l}){if(l.targetName!==this.sourceName)return;if(l.stream){m(this,lZ,fs).call(this,l);return}if(l.callback){const Z=l.callbackId,d=this.callbackCapabilities[Z];if(!d)throw new Error(`Cannot resolve callback ${Z}`);if(delete this.callbackCapabilities[Z],l.callback===tc.DATA)d.resolve(l.data);else if(l.callback===tc.ERROR)d.reject(YU(l.reason));else throw new Error("Unexpected callback case");return}const U=this.actionHandler[l.action];if(!U)throw new Error(`Unknown action from worker: ${l.action}`);if(l.callbackId){const Z=this.sourceName,d=l.sourceName,Q=this.comObj;Promise.try(U,l.data).then(function(V){Q.postMessage({sourceName:Z,targetName:d,callback:tc.DATA,callbackId:l.callbackId,data:V})},function(V){Q.postMessage({sourceName:Z,targetName:d,callback:tc.ERROR,callbackId:l.callbackId,reason:YU(V)})});return}if(l.streamId){m(this,lZ,Ps).call(this,l);return}U(l.data)},Ps=function(l){const U=l.streamId,Z=this.sourceName,d=l.sourceName,Q=this.comObj,V=this,W=this.actionHandler[l.action],c={enqueue(t,R=1,s){if(this.isCancelled)return;const n=this.desiredSize;this.desiredSize-=R,n>0&&this.desiredSize<=0&&(this.sinkCapability=Promise.withResolvers(),this.ready=this.sinkCapability.promise),Q.postMessage({sourceName:Z,targetName:d,stream:Il.ENQUEUE,streamId:U,chunk:t},s)},close(){this.isCancelled||(this.isCancelled=!0,Q.postMessage({sourceName:Z,targetName:d,stream:Il.CLOSE,streamId:U}),delete V.streamSinks[U])},error(t){Dl(t instanceof Error,"error must have a valid reason"),!this.isCancelled&&(this.isCancelled=!0,Q.postMessage({sourceName:Z,targetName:d,stream:Il.ERROR,streamId:U,reason:YU(t)}))},sinkCapability:Promise.withResolvers(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:l.desiredSize,ready:null};c.sinkCapability.resolve(),c.ready=c.sinkCapability.promise,this.streamSinks[U]=c,Promise.try(W,l.data,c).then(function(){Q.postMessage({sourceName:Z,targetName:d,stream:Il.START_COMPLETE,streamId:U,success:!0})},function(t){Q.postMessage({sourceName:Z,targetName:d,stream:Il.START_COMPLETE,streamId:U,reason:YU(t)})})},fs=function(l){const U=l.streamId,Z=this.sourceName,d=l.sourceName,Q=this.comObj,V=this.streamControllers[U],W=this.streamSinks[U];switch(l.stream){case Il.START_COMPLETE:l.success?V.startCall.resolve():V.startCall.reject(YU(l.reason));break;case Il.PULL_COMPLETE:l.success?V.pullCall.resolve():V.pullCall.reject(YU(l.reason));break;case Il.PULL:if(!W){Q.postMessage({sourceName:Z,targetName:d,stream:Il.PULL_COMPLETE,streamId:U,success:!0});break}W.desiredSize<=0&&l.desiredSize>0&&W.sinkCapability.resolve(),W.desiredSize=l.desiredSize,Promise.try(W.onPull||aN).then(function(){Q.postMessage({sourceName:Z,targetName:d,stream:Il.PULL_COMPLETE,streamId:U,success:!0})},function(t){Q.postMessage({sourceName:Z,targetName:d,stream:Il.PULL_COMPLETE,streamId:U,reason:YU(t)})});break;case Il.ENQUEUE:if(Dl(V,"enqueue should have stream controller"),V.isClosed)break;V.controller.enqueue(l.chunk);break;case Il.CLOSE:if(Dl(V,"close should have stream controller"),V.isClosed)break;V.isClosed=!0,V.controller.close(),m(this,lZ,Pc).call(this,V,U);break;case Il.ERROR:Dl(V,"error should have stream controller"),V.controller.error(YU(l.reason)),m(this,lZ,Pc).call(this,V,U);break;case Il.CANCEL_COMPLETE:l.success?V.cancelCall.resolve():V.cancelCall.reject(YU(l.reason)),m(this,lZ,Pc).call(this,V,U);break;case Il.CANCEL:if(!W)break;const c=YU(l.reason);Promise.try(W.onCancel||aN,c).then(function(){Q.postMessage({sourceName:Z,targetName:d,stream:Il.CANCEL_COMPLETE,streamId:U,success:!0})},function(t){Q.postMessage({sourceName:Z,targetName:d,stream:Il.CANCEL_COMPLETE,streamId:U,reason:YU(t)})}),W.sinkCapability.reject(c),W.isCancelled=!0,delete this.streamSinks[U];break;default:throw new Error("Unexpected stream case")}},Pc=async function(l,U){var Z,d,Q;await Promise.allSettled([(Z=l.startCall)==null?void 0:Z.promise,(d=l.pullCall)==null?void 0:d.promise,(Q=l.cancelCall)==null?void 0:Q.promise]),delete this.streamControllers[U]};class hN{constructor({enableHWA:l=!1}){h(this,CV,!1);b(this,CV,l)}create(l,U){if(l<=0||U<=0)throw new Error("Invalid canvas size");const Z=this._createCanvas(l,U);return{canvas:Z,context:Z.getContext("2d",{willReadFrequently:!F(this,CV)})}}reset(l,U,Z){if(!l.canvas)throw new Error("Canvas is not specified");if(U<=0||Z<=0)throw new Error("Invalid canvas size");l.canvas.width=U,l.canvas.height=Z}destroy(l){if(!l.canvas)throw new Error("Canvas is not specified");l.canvas.width=0,l.canvas.height=0,l.canvas=null,l.context=null}_createCanvas(l,U){al("Abstract method `_createCanvas` called.")}}CV=new WeakMap;class ib extends hN{constructor({ownerDocument:l=globalThis.document,enableHWA:U=!1}){super({enableHWA:U}),this._document=l}_createCanvas(l,U){const Z=this._document.createElement("canvas");return Z.width=l,Z.height=U,Z}}class mN{constructor({baseUrl:l=null,isCompressed:U=!0}){this.baseUrl=l,this.isCompressed=U}async fetch({name:l}){if(!this.baseUrl)throw new Error("Ensure that the `cMapUrl` and `cMapPacked` API parameters are provided.");if(!l)throw new Error("CMap name must be specified.");const U=this.baseUrl+l+(this.isCompressed?".bcmap":"");return this._fetch(U).then(Z=>({cMapData:Z,isCompressed:this.isCompressed})).catch(Z=>{throw new Error(`Unable to load ${this.isCompressed?"binary ":""}CMap at: ${U}`)})}async _fetch(l){al("Abstract method `_fetch` called.")}}class iN extends mN{async _fetch(l){const U=await Fc(l,this.isCompressed?"arraybuffer":"text");return U instanceof ArrayBuffer?new Uint8Array(U):dc(U)}}class MN{addFilter(l){return"none"}addHCMFilter(l,U){return"none"}addAlphaFilter(l){return"none"}addLuminosityFilter(l){return"none"}addHighlightHCMFilter(l,U,Z,d,Q){return"none"}destroy(l=!1){}}class Mb extends MN{constructor({docId:U,ownerDocument:Z=globalThis.document}){super();h(this,z);h(this,xF);h(this,_0);h(this,Wd);h(this,cd);h(this,cU);h(this,jF);h(this,OF,0);b(this,cd,U),b(this,cU,Z)}addFilter(U){if(!U)return"none";let Z=F(this,z,nU).get(U);if(Z)return Z;const[d,Q,V]=m(this,z,fc).call(this,U),W=U.length===1?d:`${d}${Q}${V}`;if(Z=F(this,z,nU).get(W),Z)return F(this,z,nU).set(U,Z),Z;const c=`g_${F(this,cd)}_transfer_map_${SU(this,OF)._++}`,t=m(this,z,HQ).call(this,c);F(this,z,nU).set(U,t),F(this,z,nU).set(W,t);const R=m(this,z,vQ).call(this,c);return m(this,z,rW).call(this,d,Q,V,R),t}addHCMFilter(U,Z){var i;const d=`${U}-${Z}`,Q="base";let V=F(this,z,jW).get(Q);if((V==null?void 0:V.key)===d||(V?((i=V.filter)==null||i.remove(),V.key=d,V.url="none",V.filter=null):(V={key:d,url:"none",filter:null},F(this,z,jW).set(Q,V)),!U||!Z))return V.url;const W=m(this,z,gW).call(this,U);U=C.makeHexColor(...W);const c=m(this,z,gW).call(this,Z);if(Z=C.makeHexColor(...c),F(this,z,KQ).style.color="",U==="#000000"&&Z==="#ffffff"||U===Z)return V.url;const t=new Array(256);for(let M=0;M<=255;M++){const G=M/255;t[M]=G<=.03928?G/12.92:((G+.055)/1.055)**2.4}const R=t.join(","),s=`g_${F(this,cd)}_hcm_filter`,n=V.filter=m(this,z,vQ).call(this,s);m(this,z,rW).call(this,R,R,R,n),m(this,z,eR).call(this,n);const a=(M,G)=>{const J=W[M]/255,S=c[M]/255,X=new Array(G+1);for(let Y=0;Y<=G;Y++)X[Y]=J+Y/G*(S-J);return X.join(",")};return m(this,z,rW).call(this,a(0,5),a(1,5),a(2,5),n),V.url=m(this,z,HQ).call(this,s),V.url}addAlphaFilter(U){let Z=F(this,z,nU).get(U);if(Z)return Z;const[d]=m(this,z,fc).call(this,[U]),Q=`alpha_${d}`;if(Z=F(this,z,nU).get(Q),Z)return F(this,z,nU).set(U,Z),Z;const V=`g_${F(this,cd)}_alpha_map_${SU(this,OF)._++}`,W=m(this,z,HQ).call(this,V);F(this,z,nU).set(U,W),F(this,z,nU).set(Q,W);const c=m(this,z,vQ).call(this,V);return m(this,z,pR).call(this,d,c),W}addLuminosityFilter(U){let Z=F(this,z,nU).get(U||"luminosity");if(Z)return Z;let d,Q;if(U?([d]=m(this,z,fc).call(this,[U]),Q=`luminosity_${d}`):Q="luminosity",Z=F(this,z,nU).get(Q),Z)return F(this,z,nU).set(U,Z),Z;const V=`g_${F(this,cd)}_luminosity_map_${SU(this,OF)._++}`,W=m(this,z,HQ).call(this,V);F(this,z,nU).set(U,W),F(this,z,nU).set(Q,W);const c=m(this,z,vQ).call(this,V);return m(this,z,As).call(this,c),U&&m(this,z,pR).call(this,d,c),W}addHighlightHCMFilter(U,Z,d,Q,V){var S;const W=`${Z}-${d}-${Q}-${V}`;let c=F(this,z,jW).get(U);if((c==null?void 0:c.key)===W||(c?((S=c.filter)==null||S.remove(),c.key=W,c.url="none",c.filter=null):(c={key:W,url:"none",filter:null},F(this,z,jW).set(U,c)),!Z||!d))return c.url;const[t,R]=[Z,d].map(m(this,z,gW).bind(this));let s=Math.round(.2126*t[0]+.7152*t[1]+.0722*t[2]),n=Math.round(.2126*R[0]+.7152*R[1]+.0722*R[2]),[a,i]=[Q,V].map(m(this,z,gW).bind(this));n<s&&([s,n,a,i]=[n,s,i,a]),F(this,z,KQ).style.color="";const M=(X,Y,B)=>{const p=new Array(256),e=(n-s)/B,o=X/255,w=(Y-X)/(255*B);let f=0;for(let r=0;r<=B;r++){const hl=Math.round(s+r*e),cl=o+r*w;for(let $=f;$<=hl;$++)p[$]=cl;f=hl+1}for(let r=f;r<256;r++)p[r]=p[f-1];return p.join(",")},G=`g_${F(this,cd)}_hcm_${U}_filter`,J=c.filter=m(this,z,vQ).call(this,G);return m(this,z,eR).call(this,J),m(this,z,rW).call(this,M(a[0],i[0],5),M(a[1],i[1],5),M(a[2],i[2],5),J),c.url=m(this,z,HQ).call(this,G),c.url}destroy(U=!1){var Z,d,Q,V;U&&((Z=F(this,jF))!=null&&Z.size)||((d=F(this,Wd))==null||d.parentNode.parentNode.remove(),b(this,Wd,null),(Q=F(this,_0))==null||Q.clear(),b(this,_0,null),(V=F(this,jF))==null||V.clear(),b(this,jF,null),b(this,OF,0))}}xF=new WeakMap,_0=new WeakMap,Wd=new WeakMap,cd=new WeakMap,cU=new WeakMap,jF=new WeakMap,OF=new WeakMap,z=new WeakSet,nU=function(){return F(this,_0)||b(this,_0,new Map)},jW=function(){return F(this,jF)||b(this,jF,new Map)},KQ=function(){if(!F(this,Wd)){const U=F(this,cU).createElement("div"),{style:Z}=U;Z.visibility="hidden",Z.contain="strict",Z.width=Z.height=0,Z.position="absolute",Z.top=Z.left=0,Z.zIndex=-1;const d=F(this,cU).createElementNS(fZ,"svg");d.setAttribute("width",0),d.setAttribute("height",0),b(this,Wd,F(this,cU).createElementNS(fZ,"defs")),U.append(d),d.append(F(this,Wd)),F(this,cU).body.append(U)}return F(this,Wd)},fc=function(U){if(U.length===1){const t=U[0],R=new Array(256);for(let n=0;n<256;n++)R[n]=t[n]/255;const s=R.join(",");return[s,s,s]}const[Z,d,Q]=U,V=new Array(256),W=new Array(256),c=new Array(256);for(let t=0;t<256;t++)V[t]=Z[t]/255,W[t]=d[t]/255,c[t]=Q[t]/255;return[V.join(","),W.join(","),c.join(",")]},HQ=function(U){if(F(this,xF)===void 0){b(this,xF,"");const Z=F(this,cU).URL;Z!==F(this,cU).baseURI&&(Qc(Z)?P('#createUrl: ignore "data:"-URL for performance reasons.'):b(this,xF,Z.split("#",1)[0]))}return`url(${F(this,xF)}#${U})`},As=function(U){const Z=F(this,cU).createElementNS(fZ,"feColorMatrix");Z.setAttribute("type","matrix"),Z.setAttribute("values","0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0"),U.append(Z)},eR=function(U){const Z=F(this,cU).createElementNS(fZ,"feColorMatrix");Z.setAttribute("type","matrix"),Z.setAttribute("values","0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0"),U.append(Z)},vQ=function(U){const Z=F(this,cU).createElementNS(fZ,"filter");return Z.setAttribute("color-interpolation-filters","sRGB"),Z.setAttribute("id",U),F(this,z,KQ).append(Z),Z},OW=function(U,Z,d){const Q=F(this,cU).createElementNS(fZ,Z);Q.setAttribute("type","discrete"),Q.setAttribute("tableValues",d),U.append(Q)},rW=function(U,Z,d,Q){const V=F(this,cU).createElementNS(fZ,"feComponentTransfer");Q.append(V),m(this,z,OW).call(this,V,"feFuncR",U),m(this,z,OW).call(this,V,"feFuncG",Z),m(this,z,OW).call(this,V,"feFuncB",d)},pR=function(U,Z){const d=F(this,cU).createElementNS(fZ,"feComponentTransfer");Z.append(d),m(this,z,OW).call(this,d,"feFuncA",U)},gW=function(U){return F(this,z,KQ).style.color=U,Bt(getComputedStyle(F(this,z,KQ)).getPropertyValue("color"))};class JN{constructor({baseUrl:l=null}){this.baseUrl=l}async fetch({filename:l}){if(!this.baseUrl)throw new Error("Ensure that the `standardFontDataUrl` API parameter is provided.");if(!l)throw new Error("Font filename must be specified.");const U=`${this.baseUrl}${l}`;return this._fetch(U).catch(Z=>{throw new Error(`Unable to load font data at: ${U}`)})}async _fetch(l){al("Abstract method `_fetch` called.")}}class GN extends JN{async _fetch(l){const U=await Fc(l,"arraybuffer");return new Uint8Array(U)}}FU&&P("Please use the `legacy` build in Node.js environments.");async function TN(N){const U=await process.getBuiltinModule("fs").promises.readFile(N);return new Uint8Array(U)}class Jb extends MN{}class Gb extends hN{_createCanvas(l,U){return process.getBuiltinModule("module").createRequire(typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:Sl&&Sl.tagName.toUpperCase()==="SCRIPT"&&Sl.src||new URL("document-preview.umd.js",document.baseURI).href)("@napi-rs/canvas").createCanvas(l,U)}}class Tb extends mN{async _fetch(l){return TN(l)}}class Sb extends JN{async _fetch(l){return TN(l)}}const VU={FILL:"Fill",STROKE:"Stroke",SHADING:"Shading"};function ot(N,l){if(!l)return;const U=l[2]-l[0],Z=l[3]-l[1],d=new Path2D;d.rect(l[0],l[1],U,Z),N.clip(d)}class kt{getPattern(){al("Abstract method `getPattern` called.")}}class Xb extends kt{constructor(l){super(),this._type=l[1],this._bbox=l[2],this._colorStops=l[3],this._p0=l[4],this._p1=l[5],this._r0=l[6],this._r1=l[7],this.matrix=null}_createGradient(l){let U;this._type==="axial"?U=l.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1]):this._type==="radial"&&(U=l.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1));for(const Z of this._colorStops)U.addColorStop(Z[0],Z[1]);return U}getPattern(l,U,Z,d){let Q;if(d===VU.STROKE||d===VU.FILL){const V=U.current.getClippedPathBoundingBox(d,Jl(l))||[0,0,0,0],W=Math.ceil(V[2]-V[0])||1,c=Math.ceil(V[3]-V[1])||1,t=U.cachedCanvases.getCanvas("pattern",W,c),R=t.context;R.clearRect(0,0,R.canvas.width,R.canvas.height),R.beginPath(),R.rect(0,0,R.canvas.width,R.canvas.height),R.translate(-V[0],-V[1]),Z=C.transform(Z,[1,0,0,1,V[0],V[1]]),R.transform(...U.baseTransform),this.matrix&&R.transform(...this.matrix),ot(R,this._bbox),R.fillStyle=this._createGradient(R),R.fill(),Q=l.createPattern(t.canvas,"no-repeat");const s=new DOMMatrix(Z);Q.setTransform(s)}else ot(l,this._bbox),Q=this._createGradient(l);return Q}}function Dt(N,l,U,Z,d,Q,V,W){const c=l.coords,t=l.colors,R=N.data,s=N.width*4;let n;c[U+1]>c[Z+1]&&(n=U,U=Z,Z=n,n=Q,Q=V,V=n),c[Z+1]>c[d+1]&&(n=Z,Z=d,d=n,n=V,V=W,W=n),c[U+1]>c[Z+1]&&(n=U,U=Z,Z=n,n=Q,Q=V,V=n);const a=(c[U]+l.offsetX)*l.scaleX,i=(c[U+1]+l.offsetY)*l.scaleY,M=(c[Z]+l.offsetX)*l.scaleX,G=(c[Z+1]+l.offsetY)*l.scaleY,J=(c[d]+l.offsetX)*l.scaleX,S=(c[d+1]+l.offsetY)*l.scaleY;if(i>=S)return;const X=t[Q],Y=t[Q+1],B=t[Q+2],p=t[V],e=t[V+1],o=t[V+2],w=t[W],f=t[W+1],r=t[W+2],hl=Math.round(i),cl=Math.round(S);let $,ol,k,x,sU,fU,WZ,GU;for(let gl=hl;gl<=cl;gl++){if(gl<G){const bl=gl<i?0:(i-gl)/(i-G);$=a-(a-M)*bl,ol=X-(X-p)*bl,k=Y-(Y-e)*bl,x=B-(B-o)*bl}else{let bl;gl>S?bl=1:G===S?bl=0:bl=(G-gl)/(G-S),$=M-(M-J)*bl,ol=p-(p-w)*bl,k=e-(e-f)*bl,x=o-(o-r)*bl}let ul;gl<i?ul=0:gl>S?ul=1:ul=(i-gl)/(i-S),sU=a-(a-J)*ul,fU=X-(X-w)*ul,WZ=Y-(Y-f)*ul,GU=B-(B-r)*ul;const sF=Math.round(Math.min($,sU)),B0=Math.round(Math.max($,sU));let _l=s*gl+sF*4;for(let bl=sF;bl<=B0;bl++)ul=($-bl)/($-sU),ul<0?ul=0:ul>1&&(ul=1),R[_l++]=ol-(ol-fU)*ul|0,R[_l++]=k-(k-WZ)*ul|0,R[_l++]=x-(x-GU)*ul|0,R[_l++]=255}}function Yb(N,l,U){const Z=l.coords,d=l.colors;let Q,V;switch(l.type){case"lattice":const W=l.verticesPerRow,c=Math.floor(Z.length/W)-1,t=W-1;for(Q=0;Q<c;Q++){let R=Q*W;for(let s=0;s<t;s++,R++)Dt(N,U,Z[R],Z[R+1],Z[R+W],d[R],d[R+1],d[R+W]),Dt(N,U,Z[R+W+1],Z[R+1],Z[R+W],d[R+W+1],d[R+1],d[R+W])}break;case"triangles":for(Q=0,V=Z.length;Q<V;Q+=3)Dt(N,U,Z[Q],Z[Q+1],Z[Q+2],d[Q],d[Q+1],d[Q+2]);break;default:throw new Error("illegal figure")}}class Bb extends kt{constructor(l){super(),this._coords=l[2],this._colors=l[3],this._figures=l[4],this._bounds=l[5],this._bbox=l[7],this._background=l[8],this.matrix=null}_createMeshCanvas(l,U,Z){const W=Math.floor(this._bounds[0]),c=Math.floor(this._bounds[1]),t=Math.ceil(this._bounds[2])-W,R=Math.ceil(this._bounds[3])-c,s=Math.min(Math.ceil(Math.abs(t*l[0]*1.1)),3e3),n=Math.min(Math.ceil(Math.abs(R*l[1]*1.1)),3e3),a=t/s,i=R/n,M={coords:this._coords,colors:this._colors,offsetX:-W,offsetY:-c,scaleX:1/a,scaleY:1/i},G=s+2*2,J=n+2*2,S=Z.getCanvas("mesh",G,J),X=S.context,Y=X.createImageData(s,n);if(U){const p=Y.data;for(let e=0,o=p.length;e<o;e+=4)p[e]=U[0],p[e+1]=U[1],p[e+2]=U[2],p[e+3]=255}for(const p of this._figures)Yb(Y,p,M);return X.putImageData(Y,2,2),{canvas:S.canvas,offsetX:W-2*a,offsetY:c-2*i,scaleX:a,scaleY:i}}getPattern(l,U,Z,d){ot(l,this._bbox);let Q;if(d===VU.SHADING)Q=C.singularValueDecompose2dScale(Jl(l));else if(Q=C.singularValueDecompose2dScale(U.baseTransform),this.matrix){const W=C.singularValueDecompose2dScale(this.matrix);Q=[Q[0]*W[0],Q[1]*W[1]]}const V=this._createMeshCanvas(Q,d===VU.SHADING?null:this._background,U.cachedCanvases);return d!==VU.SHADING&&(l.setTransform(...U.baseTransform),this.matrix&&l.transform(...this.matrix)),l.translate(V.offsetX,V.offsetY),l.scale(V.scaleX,V.scaleY),l.createPattern(V.canvas,"no-repeat")}}class eb extends kt{getPattern(){return"hotpink"}}function pb(N){switch(N[0]){case"RadialAxial":return new Xb(N);case"Mesh":return new Bb(N);case"Dummy":return new eb}throw new Error(`Unknown IR type: ${N[0]}`)}const SN={COLORED:1,UNCOLORED:2},Bc=class Bc{constructor(l,U,Z,d,Q){this.operatorList=l[2],this.matrix=l[3],this.bbox=l[4],this.xstep=l[5],this.ystep=l[6],this.paintType=l[7],this.tilingType=l[8],this.color=U,this.ctx=Z,this.canvasGraphicsFactory=d,this.baseTransform=Q}createPatternCanvas(l){const{bbox:U,operatorList:Z,paintType:d,tilingType:Q,color:V,canvasGraphicsFactory:W}=this;let{xstep:c,ystep:t}=this;c=Math.abs(c),t=Math.abs(t),Uc("TilingType: "+Q);const R=U[0],s=U[1],n=U[2],a=U[3],i=n-R,M=a-s,G=C.singularValueDecompose2dScale(this.matrix),J=C.singularValueDecompose2dScale(this.baseTransform),S=G[0]*J[0],X=G[1]*J[1];let Y=i,B=M,p=!1,e=!1;const o=Math.ceil(c*S),w=Math.ceil(t*X),f=Math.ceil(i*S),r=Math.ceil(M*X);o>=f?Y=c:p=!0,w>=r?B=t:e=!0;const hl=this.getSizeAndScale(Y,this.ctx.canvas.width,S),cl=this.getSizeAndScale(B,this.ctx.canvas.height,X),$=l.cachedCanvases.getCanvas("pattern",hl.size,cl.size),ol=$.context,k=W.createCanvasGraphics(ol);if(k.groupLevel=l.groupLevel,this.setFillAndStrokeStyleToContext(k,d,V),ol.translate(-hl.scale*R,-cl.scale*s),k.transform(hl.scale,0,0,cl.scale,0,0),ol.save(),this.clipBbox(k,R,s,n,a),k.baseTransform=Jl(k.ctx),k.executeOperatorList(Z),k.endDrawing(),ol.restore(),p||e){const x=$.canvas;p&&(Y=c),e&&(B=t);const sU=this.getSizeAndScale(Y,this.ctx.canvas.width,S),fU=this.getSizeAndScale(B,this.ctx.canvas.height,X),WZ=sU.size,GU=fU.size,gl=l.cachedCanvases.getCanvas("pattern-workaround",WZ,GU),ul=gl.context,sF=p?Math.floor(i/c):0,B0=e?Math.floor(M/t):0;for(let _l=0;_l<=sF;_l++)for(let bl=0;bl<=B0;bl++)ul.drawImage(x,WZ*_l,GU*bl,WZ,GU,0,0,WZ,GU);return{canvas:gl.canvas,scaleX:sU.scale,scaleY:fU.scale,offsetX:R,offsetY:s}}return{canvas:$.canvas,scaleX:hl.scale,scaleY:cl.scale,offsetX:R,offsetY:s}}getSizeAndScale(l,U,Z){const d=Math.max(Bc.MAX_PATTERN_SIZE,U);let Q=Math.ceil(l*Z);return Q>=d?Q=d:Z=Q/l,{scale:Z,size:Q}}clipBbox(l,U,Z,d,Q){const V=d-U,W=Q-Z;l.ctx.rect(U,Z,V,W),l.current.updateRectMinMax(Jl(l.ctx),[U,Z,d,Q]),l.clip(),l.endPath()}setFillAndStrokeStyleToContext(l,U,Z){const d=l.ctx,Q=l.current;switch(U){case SN.COLORED:const V=this.ctx;d.fillStyle=V.fillStyle,d.strokeStyle=V.strokeStyle,Q.fillColor=V.fillStyle,Q.strokeColor=V.strokeStyle;break;case SN.UNCOLORED:const W=C.makeHexColor(Z[0],Z[1],Z[2]);d.fillStyle=W,d.strokeStyle=W,Q.fillColor=W,Q.strokeColor=W;break;default:throw new lb(`Unsupported paint type: ${U}`)}}getPattern(l,U,Z,d){let Q=Z;d!==VU.SHADING&&(Q=C.transform(Q,U.baseTransform),this.matrix&&(Q=C.transform(Q,this.matrix)));const V=this.createPatternCanvas(U);let W=new DOMMatrix(Q);W=W.translate(V.offsetX,V.offsetY),W=W.scale(1/V.scaleX,1/V.scaleY);const c=l.createPattern(V.canvas,"repeat");return c.setTransform(W),c}};O(Bc,"MAX_PATTERN_SIZE",3e3);let It=Bc;function ub({src:N,srcPos:l=0,dest:U,width:Z,height:d,nonBlackColor:Q=4294967295,inverseDecode:V=!1}){const W=bU.isLittleEndian?4278190080:255,[c,t]=V?[Q,W]:[W,Q],R=Z>>3,s=Z&7,n=N.length;U=new Uint32Array(U.buffer);let a=0;for(let i=0;i<d;i++){for(const G=l+R;l<G;l++){const J=l<n?N[l]:255;U[a++]=J&128?t:c,U[a++]=J&64?t:c,U[a++]=J&32?t:c,U[a++]=J&16?t:c,U[a++]=J&8?t:c,U[a++]=J&4?t:c,U[a++]=J&2?t:c,U[a++]=J&1?t:c}if(s===0)continue;const M=l<n?N[l++]:255;for(let G=0;G<s;G++)U[a++]=M&1<<7-G?t:c}return{srcPos:l,destPos:a}}const XN=16,YN=100,yb=15,BN=10,eN=1e3,BU=16;function zb(N,l){if(N._removeMirroring)throw new Error("Context is already forwarding operations.");N.__originalSave=N.save,N.__originalRestore=N.restore,N.__originalRotate=N.rotate,N.__originalScale=N.scale,N.__originalTranslate=N.translate,N.__originalTransform=N.transform,N.__originalSetTransform=N.setTransform,N.__originalResetTransform=N.resetTransform,N.__originalClip=N.clip,N.__originalMoveTo=N.moveTo,N.__originalLineTo=N.lineTo,N.__originalBezierCurveTo=N.bezierCurveTo,N.__originalRect=N.rect,N.__originalClosePath=N.closePath,N.__originalBeginPath=N.beginPath,N._removeMirroring=()=>{N.save=N.__originalSave,N.restore=N.__originalRestore,N.rotate=N.__originalRotate,N.scale=N.__originalScale,N.translate=N.__originalTranslate,N.transform=N.__originalTransform,N.setTransform=N.__originalSetTransform,N.resetTransform=N.__originalResetTransform,N.clip=N.__originalClip,N.moveTo=N.__originalMoveTo,N.lineTo=N.__originalLineTo,N.bezierCurveTo=N.__originalBezierCurveTo,N.rect=N.__originalRect,N.closePath=N.__originalClosePath,N.beginPath=N.__originalBeginPath,delete N._removeMirroring},N.save=function(){l.save(),this.__originalSave()},N.restore=function(){l.restore(),this.__originalRestore()},N.translate=function(Z,d){l.translate(Z,d),this.__originalTranslate(Z,d)},N.scale=function(Z,d){l.scale(Z,d),this.__originalScale(Z,d)},N.transform=function(Z,d,Q,V,W,c){l.transform(Z,d,Q,V,W,c),this.__originalTransform(Z,d,Q,V,W,c)},N.setTransform=function(Z,d,Q,V,W,c){l.setTransform(Z,d,Q,V,W,c),this.__originalSetTransform(Z,d,Q,V,W,c)},N.resetTransform=function(){l.resetTransform(),this.__originalResetTransform()},N.rotate=function(Z){l.rotate(Z),this.__originalRotate(Z)},N.clip=function(Z){l.clip(Z),this.__originalClip(Z)},N.moveTo=function(U,Z){l.moveTo(U,Z),this.__originalMoveTo(U,Z)},N.lineTo=function(U,Z){l.lineTo(U,Z),this.__originalLineTo(U,Z)},N.bezierCurveTo=function(U,Z,d,Q,V,W){l.bezierCurveTo(U,Z,d,Q,V,W),this.__originalBezierCurveTo(U,Z,d,Q,V,W)},N.rect=function(U,Z,d,Q){l.rect(U,Z,d,Q),this.__originalRect(U,Z,d,Q)},N.closePath=function(){l.closePath(),this.__originalClosePath()},N.beginPath=function(){l.beginPath(),this.__originalBeginPath()}}class Lb{constructor(l){this.canvasFactory=l,this.cache=Object.create(null)}getCanvas(l,U,Z){let d;return this.cache[l]!==void 0?(d=this.cache[l],this.canvasFactory.reset(d,U,Z)):(d=this.canvasFactory.create(U,Z),this.cache[l]=d),d}delete(l){delete this.cache[l]}clear(){for(const l in this.cache){const U=this.cache[l];this.canvasFactory.destroy(U),delete this.cache[l]}}}function Rc(N,l,U,Z,d,Q,V,W,c,t){const[R,s,n,a,i,M]=Jl(N);if(s===0&&n===0){const S=V*R+i,X=Math.round(S),Y=W*a+M,B=Math.round(Y),p=(V+c)*R+i,e=Math.abs(Math.round(p)-X)||1,o=(W+t)*a+M,w=Math.abs(Math.round(o)-B)||1;return N.setTransform(Math.sign(R),0,0,Math.sign(a),X,B),N.drawImage(l,U,Z,d,Q,0,0,e,w),N.setTransform(R,s,n,a,i,M),[e,w]}if(R===0&&a===0){const S=W*n+i,X=Math.round(S),Y=V*s+M,B=Math.round(Y),p=(W+t)*n+i,e=Math.abs(Math.round(p)-X)||1,o=(V+c)*s+M,w=Math.abs(Math.round(o)-B)||1;return N.setTransform(0,Math.sign(s),Math.sign(n),0,X,B),N.drawImage(l,U,Z,d,Q,0,0,w,e),N.setTransform(R,s,n,a,i,M),[w,e]}N.drawImage(l,U,Z,d,Q,V,W,c,t);const G=Math.hypot(R,s),J=Math.hypot(n,a);return[G*c,J*t]}function ob(N){const{width:l,height:U}=N;if(l>eN||U>eN)return null;const Z=1e3,d=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),Q=l+1;let V=new Uint8Array(Q*(U+1)),W,c,t;const R=l+7&-8;let s=new Uint8Array(R*U),n=0;for(const J of N.data){let S=128;for(;S>0;)s[n++]=J&S?0:255,S>>=1}let a=0;for(n=0,s[n]!==0&&(V[0]=1,++a),c=1;c<l;c++)s[n]!==s[n+1]&&(V[c]=s[n]?2:1,++a),n++;for(s[n]!==0&&(V[c]=2,++a),W=1;W<U;W++){n=W*R,t=W*Q,s[n-R]!==s[n]&&(V[t]=s[n]?1:8,++a);let J=(s[n]?4:0)+(s[n-R]?8:0);for(c=1;c<l;c++)J=(J>>2)+(s[n+1]?4:0)+(s[n-R+1]?8:0),d[J]&&(V[t+c]=d[J],++a),n++;if(s[n-R]!==s[n]&&(V[t+c]=s[n]?2:4,++a),a>Z)return null}for(n=R*(U-1),t=W*Q,s[n]!==0&&(V[t]=8,++a),c=1;c<l;c++)s[n]!==s[n+1]&&(V[t+c]=s[n]?4:8,++a),n++;if(s[n]!==0&&(V[t+c]=4,++a),a>Z)return null;const i=new Int32Array([0,Q,-1,0,-Q,0,0,0,1]),M=new Path2D;for(W=0;a&&W<=U;W++){let J=W*Q;const S=J+l;for(;J<S&&!V[J];)J++;if(J===S)continue;M.moveTo(J%Q,W);const X=J;let Y=V[J];do{const B=i[Y];do J+=B;while(!V[J]);const p=V[J];p!==5&&p!==10?(Y=p,V[J]=0):(Y=p&51*Y>>4,V[J]&=Y>>2|Y<<2),M.lineTo(J%Q,J/Q|0),V[J]||--a}while(X!==J);--W}return s=null,V=null,function(J){J.save(),J.scale(1/l,-1/U),J.translate(0,-U),J.fill(M),J.beginPath(),J.restore()}}class pN{constructor(l,U){this.alphaIsShape=!1,this.fontSize=0,this.fontSizeScale=1,this.textMatrix=WN,this.textMatrixScale=1,this.fontMatrix=at,this.leading=0,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRenderingMode=QU.FILL,this.textRise=0,this.fillColor="#000000",this.strokeColor="#000000",this.patternFill=!1,this.patternStroke=!1,this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.activeSMask=null,this.transferMaps="none",this.startNewPathAndClipBox([0,0,l,U])}clone(){const l=Object.create(this);return l.clipBox=this.clipBox.slice(),l}setCurrentPoint(l,U){this.x=l,this.y=U}updatePathMinMax(l,U,Z){[U,Z]=C.applyTransform([U,Z],l),this.minX=Math.min(this.minX,U),this.minY=Math.min(this.minY,Z),this.maxX=Math.max(this.maxX,U),this.maxY=Math.max(this.maxY,Z)}updateRectMinMax(l,U){const Z=C.applyTransform(U,l),d=C.applyTransform(U.slice(2),l),Q=C.applyTransform([U[0],U[3]],l),V=C.applyTransform([U[2],U[1]],l);this.minX=Math.min(this.minX,Z[0],d[0],Q[0],V[0]),this.minY=Math.min(this.minY,Z[1],d[1],Q[1],V[1]),this.maxX=Math.max(this.maxX,Z[0],d[0],Q[0],V[0]),this.maxY=Math.max(this.maxY,Z[1],d[1],Q[1],V[1])}updateScalingPathMinMax(l,U){C.scaleMinMax(l,U),this.minX=Math.min(this.minX,U[0]),this.minY=Math.min(this.minY,U[1]),this.maxX=Math.max(this.maxX,U[2]),this.maxY=Math.max(this.maxY,U[3])}updateCurvePathMinMax(l,U,Z,d,Q,V,W,c,t,R){const s=C.bezierBoundingBox(U,Z,d,Q,V,W,c,t,R);R||this.updateRectMinMax(l,s)}getPathBoundingBox(l=VU.FILL,U=null){const Z=[this.minX,this.minY,this.maxX,this.maxY];if(l===VU.STROKE){U||al("Stroke bounding box must include transform.");const d=C.singularValueDecompose2dScale(U),Q=d[0]*this.lineWidth/2,V=d[1]*this.lineWidth/2;Z[0]-=Q,Z[1]-=V,Z[2]+=Q,Z[3]+=V}return Z}updateClipFromPath(){const l=C.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(l||[0,0,0,0])}isEmptyClip(){return this.minX===1/0}startNewPathAndClipBox(l){this.clipBox=l,this.minX=1/0,this.minY=1/0,this.maxX=0,this.maxY=0}getClippedPathBoundingBox(l=VU.FILL,U=null){return C.intersect(this.clipBox,this.getPathBoundingBox(l,U))}}function uN(N,l){if(l instanceof ImageData){N.putImageData(l,0,0);return}const U=l.height,Z=l.width,d=U%BU,Q=(U-d)/BU,V=d===0?Q:Q+1,W=N.createImageData(Z,BU);let c=0,t;const R=l.data,s=W.data;let n,a,i,M;if(l.kind===qW.GRAYSCALE_1BPP){const G=R.byteLength,J=new Uint32Array(s.buffer,0,s.byteLength>>2),S=J.length,X=Z+7>>3,Y=4294967295,B=bU.isLittleEndian?4278190080:255;for(n=0;n<V;n++){for(i=n<Q?BU:d,t=0,a=0;a<i;a++){const p=G-c;let e=0;const o=p>X?Z:p*8-7,w=o&-8;let f=0,r=0;for(;e<w;e+=8)r=R[c++],J[t++]=r&128?Y:B,J[t++]=r&64?Y:B,J[t++]=r&32?Y:B,J[t++]=r&16?Y:B,J[t++]=r&8?Y:B,J[t++]=r&4?Y:B,J[t++]=r&2?Y:B,J[t++]=r&1?Y:B;for(;e<o;e++)f===0&&(r=R[c++],f=128),J[t++]=r&f?Y:B,f>>=1}for(;t<S;)J[t++]=0;N.putImageData(W,0,n*BU)}}else if(l.kind===qW.RGBA_32BPP){for(a=0,M=Z*BU*4,n=0;n<Q;n++)s.set(R.subarray(c,c+M)),c+=M,N.putImageData(W,0,a),a+=BU;n<V&&(M=Z*d*4,s.set(R.subarray(c,c+M)),N.putImageData(W,0,a))}else if(l.kind===qW.RGB_24BPP)for(i=BU,M=Z*i,n=0;n<V;n++){for(n>=Q&&(i=d,M=Z*i),t=0,a=M;a--;)s[t++]=R[c++],s[t++]=R[c++],s[t++]=R[c++],s[t++]=255;N.putImageData(W,0,n*BU)}else throw new Error(`bad image kind: ${l.kind}`)}function yN(N,l){if(l.bitmap){N.drawImage(l.bitmap,0,0);return}const U=l.height,Z=l.width,d=U%BU,Q=(U-d)/BU,V=d===0?Q:Q+1,W=N.createImageData(Z,BU);let c=0;const t=l.data,R=W.data;for(let s=0;s<V;s++){const n=s<Q?BU:d;({srcPos:c}=ub({src:t,srcPos:c,dest:R,width:Z,height:n,nonBlackColor:0})),N.putImageData(W,0,s*BU)}}function QV(N,l){const U=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font","filter"];for(const Z of U)N[Z]!==void 0&&(l[Z]=N[Z]);N.setLineDash!==void 0&&(l.setLineDash(N.getLineDash()),l.lineDashOffset=N.lineDashOffset)}function Nc(N){if(N.strokeStyle=N.fillStyle="#000000",N.fillRule="nonzero",N.globalAlpha=1,N.lineWidth=1,N.lineCap="butt",N.lineJoin="miter",N.miterLimit=10,N.globalCompositeOperation="source-over",N.font="10px sans-serif",N.setLineDash!==void 0&&(N.setLineDash([]),N.lineDashOffset=0),!FU){const{filter:l}=N;l!=="none"&&l!==""&&(N.filter="none")}}function zN(N,l){if(l)return!0;const U=C.singularValueDecompose2dScale(N);U[0]=Math.fround(U[0]),U[1]=Math.fround(U[1]);const Z=Math.fround((globalThis.devicePixelRatio||1)*od.PDF_TO_CSS_UNITS);return U[0]<=Z&&U[1]<=Z}const kb=["butt","round","square"],Db=["miter","round","bevel"],Ib={},LN={},UR=class UR{constructor(l,U,Z,d,Q,{optionalContentConfig:V,markedContentStack:W=null},c,t){h(this,hZ);this.ctx=l,this.current=new pN(this.ctx.canvas.width,this.ctx.canvas.height),this.stateStack=[],this.pendingClip=null,this.pendingEOFill=!1,this.res=null,this.xobjs=null,this.commonObjs=U,this.objs=Z,this.canvasFactory=d,this.filterFactory=Q,this.groupStack=[],this.processingType3=null,this.baseTransform=null,this.baseTransformStack=[],this.groupLevel=0,this.smaskStack=[],this.smaskCounter=0,this.tempSMask=null,this.suspendedCtx=null,this.contentVisible=!0,this.markedContentStack=W||[],this.optionalContentConfig=V,this.cachedCanvases=new Lb(this.canvasFactory),this.cachedPatterns=new Map,this.annotationCanvasMap=c,this.viewportScale=1,this.outputScaleX=1,this.outputScaleY=1,this.pageColors=t,this._cachedScaleForStroking=[-1,0],this._cachedGetSinglePixelWidth=null,this._cachedBitmapsMap=new Map}getObject(l,U=null){return typeof l=="string"?l.startsWith("g_")?this.commonObjs.get(l):this.objs.get(l):U}beginDrawing({transform:l,viewport:U,transparency:Z=!1,background:d=null}){const Q=this.ctx.canvas.width,V=this.ctx.canvas.height,W=this.ctx.fillStyle;if(this.ctx.fillStyle=d||"#ffffff",this.ctx.fillRect(0,0,Q,V),this.ctx.fillStyle=W,Z){const c=this.cachedCanvases.getCanvas("transparent",Q,V);this.compositeCtx=this.ctx,this.transparentCanvas=c.canvas,this.ctx=c.context,this.ctx.save(),this.ctx.transform(...Jl(this.compositeCtx))}this.ctx.save(),Nc(this.ctx),l&&(this.ctx.transform(...l),this.outputScaleX=l[0],this.outputScaleY=l[0]),this.ctx.transform(...U.transform),this.viewportScale=U.scale,this.baseTransform=Jl(this.ctx)}executeOperatorList(l,U,Z,d){const Q=l.argsArray,V=l.fnArray;let W=U||0;const c=Q.length;if(c===W)return W;const t=c-W>BN&&typeof Z=="function",R=t?Date.now()+yb:0;let s=0;const n=this.commonObjs,a=this.objs;let i;for(;;){if(d!==void 0&&W===d.nextBreakPoint)return d.breakIt(W,Z),W;if(i=V[W],i!==tZ.dependency)this[i].apply(this,Q[W]);else for(const M of Q[W]){const G=M.startsWith("g_")?n:a;if(!G.has(M))return G.get(M,Z),W}if(W++,W===c)return W;if(t&&++s>BN){if(Date.now()>R)return Z(),W;s=0}}}endDrawing(){m(this,hZ,uR).call(this),this.cachedCanvases.clear(),this.cachedPatterns.clear();for(const l of this._cachedBitmapsMap.values()){for(const U of l.values())typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement&&(U.width=U.height=0);l.clear()}this._cachedBitmapsMap.clear(),m(this,hZ,yR).call(this)}_scaleImage(l,U){const Z=l.width??l.displayWidth,d=l.height??l.displayHeight;let Q=Math.max(Math.hypot(U[0],U[1]),1),V=Math.max(Math.hypot(U[2],U[3]),1),W=Z,c=d,t="prescale1",R,s;for(;Q>2&&W>1||V>2&&c>1;){let n=W,a=c;Q>2&&W>1&&(n=W>=16384?Math.floor(W/2)-1||1:Math.ceil(W/2),Q/=W/n),V>2&&c>1&&(a=c>=16384?Math.floor(c/2)-1||1:Math.ceil(c)/2,V/=c/a),R=this.cachedCanvases.getCanvas(t,n,a),s=R.context,s.clearRect(0,0,n,a),s.drawImage(l,0,0,W,c,0,0,n,a),l=R.canvas,W=n,c=a,t=t==="prescale1"?"prescale2":"prescale1"}return{img:l,paintWidth:W,paintHeight:c}}_createMaskCanvas(l){const U=this.ctx,{width:Z,height:d}=l,Q=this.current.fillColor,V=this.current.patternFill,W=Jl(U);let c,t,R,s;if((l.bitmap||l.data)&&l.count>1){const o=l.bitmap||l.data.buffer;t=JSON.stringify(V?W:[W.slice(0,4),Q]),c=this._cachedBitmapsMap.get(o),c||(c=new Map,this._cachedBitmapsMap.set(o,c));const w=c.get(t);if(w&&!V){const f=Math.round(Math.min(W[0],W[2])+W[4]),r=Math.round(Math.min(W[1],W[3])+W[5]);return{canvas:w,offsetX:f,offsetY:r}}R=w}R||(s=this.cachedCanvases.getCanvas("maskCanvas",Z,d),yN(s.context,l));let n=C.transform(W,[1/Z,0,0,-1/d,0,0]);n=C.transform(n,[1,0,0,1,0,-d]);const[a,i,M,G]=C.getAxialAlignedBoundingBox([0,0,Z,d],n),J=Math.round(M-a)||1,S=Math.round(G-i)||1,X=this.cachedCanvases.getCanvas("fillCanvas",J,S),Y=X.context,B=a,p=i;Y.translate(-B,-p),Y.transform(...n),R||(R=this._scaleImage(s.canvas,eZ(Y)),R=R.img,c&&V&&c.set(t,R)),Y.imageSmoothingEnabled=zN(Jl(Y),l.interpolate),Rc(Y,R,0,0,R.width,R.height,0,0,Z,d),Y.globalCompositeOperation="source-in";const e=C.transform(eZ(Y),[1,0,0,1,-B,-p]);return Y.fillStyle=V?Q.getPattern(U,this,e,VU.FILL):Q,Y.fillRect(0,0,Z,d),c&&!V&&(this.cachedCanvases.delete("fillCanvas"),c.set(t,X.canvas)),{canvas:X.canvas,offsetX:Math.round(B),offsetY:Math.round(p)}}setLineWidth(l){l!==this.current.lineWidth&&(this._cachedScaleForStroking[0]=-1),this.current.lineWidth=l,this.ctx.lineWidth=l}setLineCap(l){this.ctx.lineCap=kb[l]}setLineJoin(l){this.ctx.lineJoin=Db[l]}setMiterLimit(l){this.ctx.miterLimit=l}setDash(l,U){const Z=this.ctx;Z.setLineDash!==void 0&&(Z.setLineDash(l),Z.lineDashOffset=U)}setRenderingIntent(l){}setFlatness(l){}setGState(l){for(const[U,Z]of l)switch(U){case"LW":this.setLineWidth(Z);break;case"LC":this.setLineCap(Z);break;case"LJ":this.setLineJoin(Z);break;case"ML":this.setMiterLimit(Z);break;case"D":this.setDash(Z[0],Z[1]);break;case"RI":this.setRenderingIntent(Z);break;case"FL":this.setFlatness(Z);break;case"Font":this.setFont(Z[0],Z[1]);break;case"CA":this.current.strokeAlpha=Z;break;case"ca":this.current.fillAlpha=Z,this.ctx.globalAlpha=Z;break;case"BM":this.ctx.globalCompositeOperation=Z;break;case"SMask":this.current.activeSMask=Z?this.tempSMask:null,this.tempSMask=null,this.checkSMaskState();break;case"TR":this.ctx.filter=this.current.transferMaps=this.filterFactory.addFilter(Z);break}}get inSMaskMode(){return!!this.suspendedCtx}checkSMaskState(){const l=this.inSMaskMode;this.current.activeSMask&&!l?this.beginSMaskMode():!this.current.activeSMask&&l&&this.endSMaskMode()}beginSMaskMode(){if(this.inSMaskMode)throw new Error("beginSMaskMode called while already in smask mode");const l=this.ctx.canvas.width,U=this.ctx.canvas.height,Z="smaskGroupAt"+this.groupLevel,d=this.cachedCanvases.getCanvas(Z,l,U);this.suspendedCtx=this.ctx,this.ctx=d.context;const Q=this.ctx;Q.setTransform(...Jl(this.suspendedCtx)),QV(this.suspendedCtx,Q),zb(Q,this.suspendedCtx),this.setGState([["BM","source-over"],["ca",1],["CA",1]])}endSMaskMode(){if(!this.inSMaskMode)throw new Error("endSMaskMode called while not in smask mode");this.ctx._removeMirroring(),QV(this.ctx,this.suspendedCtx),this.ctx=this.suspendedCtx,this.suspendedCtx=null}compose(l){if(!this.current.activeSMask)return;l?(l[0]=Math.floor(l[0]),l[1]=Math.floor(l[1]),l[2]=Math.ceil(l[2]),l[3]=Math.ceil(l[3])):l=[0,0,this.ctx.canvas.width,this.ctx.canvas.height];const U=this.current.activeSMask,Z=this.suspendedCtx;this.composeSMask(Z,U,this.ctx,l),this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.restore()}composeSMask(l,U,Z,d){const Q=d[0],V=d[1],W=d[2]-Q,c=d[3]-V;W===0||c===0||(this.genericComposeSMask(U.context,Z,W,c,U.subtype,U.backdrop,U.transferMap,Q,V,U.offsetX,U.offsetY),l.save(),l.globalAlpha=1,l.globalCompositeOperation="source-over",l.setTransform(1,0,0,1,0,0),l.drawImage(Z.canvas,0,0),l.restore())}genericComposeSMask(l,U,Z,d,Q,V,W,c,t,R,s){let n=l.canvas,a=c-R,i=t-s;if(V){const G=C.makeHexColor(...V);if(a<0||i<0||a+Z>n.width||i+d>n.height){const J=this.cachedCanvases.getCanvas("maskExtension",Z,d),S=J.context;S.drawImage(n,-a,-i),S.globalCompositeOperation="destination-atop",S.fillStyle=G,S.fillRect(0,0,Z,d),S.globalCompositeOperation="source-over",n=J.canvas,a=i=0}else{l.save(),l.globalAlpha=1,l.setTransform(1,0,0,1,0,0);const J=new Path2D;J.rect(a,i,Z,d),l.clip(J),l.globalCompositeOperation="destination-atop",l.fillStyle=G,l.fillRect(a,i,Z,d),l.restore()}}U.save(),U.globalAlpha=1,U.setTransform(1,0,0,1,0,0),Q==="Alpha"&&W?U.filter=this.filterFactory.addAlphaFilter(W):Q==="Luminosity"&&(U.filter=this.filterFactory.addLuminosityFilter(W));const M=new Path2D;M.rect(c,t,Z,d),U.clip(M),U.globalCompositeOperation="destination-in",U.drawImage(n,a,i,Z,d,c,t,Z,d),U.restore()}save(){this.inSMaskMode?(QV(this.ctx,this.suspendedCtx),this.suspendedCtx.save()):this.ctx.save();const l=this.current;this.stateStack.push(l),this.current=l.clone()}restore(){this.stateStack.length===0&&this.inSMaskMode&&this.endSMaskMode(),this.stateStack.length!==0&&(this.current=this.stateStack.pop(),this.inSMaskMode?(this.suspendedCtx.restore(),QV(this.suspendedCtx,this.ctx)):this.ctx.restore(),this.checkSMaskState(),this.pendingClip=null,this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null)}transform(l,U,Z,d,Q,V){this.ctx.transform(l,U,Z,d,Q,V),this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null}constructPath(l,U,Z){const d=this.ctx,Q=this.current;let V=Q.x,W=Q.y,c,t;const R=Jl(d),s=R[0]===0&&R[3]===0||R[1]===0&&R[2]===0,n=s?Z.slice(0):null;for(let a=0,i=0,M=l.length;a<M;a++)switch(l[a]|0){case tZ.rectangle:V=U[i++],W=U[i++];const G=U[i++],J=U[i++],S=V+G,X=W+J;d.moveTo(V,W),G===0||J===0?d.lineTo(S,X):(d.lineTo(S,W),d.lineTo(S,X),d.lineTo(V,X)),s||Q.updateRectMinMax(R,[V,W,S,X]),d.closePath();break;case tZ.moveTo:V=U[i++],W=U[i++],d.moveTo(V,W),s||Q.updatePathMinMax(R,V,W);break;case tZ.lineTo:V=U[i++],W=U[i++],d.lineTo(V,W),s||Q.updatePathMinMax(R,V,W);break;case tZ.curveTo:c=V,t=W,V=U[i+4],W=U[i+5],d.bezierCurveTo(U[i],U[i+1],U[i+2],U[i+3],V,W),Q.updateCurvePathMinMax(R,c,t,U[i],U[i+1],U[i+2],U[i+3],V,W,n),i+=6;break;case tZ.curveTo2:c=V,t=W,d.bezierCurveTo(V,W,U[i],U[i+1],U[i+2],U[i+3]),Q.updateCurvePathMinMax(R,c,t,V,W,U[i],U[i+1],U[i+2],U[i+3],n),V=U[i+2],W=U[i+3],i+=4;break;case tZ.curveTo3:c=V,t=W,V=U[i+2],W=U[i+3],d.bezierCurveTo(U[i],U[i+1],V,W,V,W),Q.updateCurvePathMinMax(R,c,t,U[i],U[i+1],V,W,V,W,n),i+=4;break;case tZ.closePath:d.closePath();break}s&&Q.updateScalingPathMinMax(R,n),Q.setCurrentPoint(V,W)}closePath(){this.ctx.closePath()}stroke(l=!0){const U=this.ctx,Z=this.current.strokeColor;U.globalAlpha=this.current.strokeAlpha,this.contentVisible&&(typeof Z=="object"&&(Z!=null&&Z.getPattern)?(U.save(),U.strokeStyle=Z.getPattern(U,this,eZ(U),VU.STROKE),this.rescaleAndStroke(!1),U.restore()):this.rescaleAndStroke(!0)),l&&this.consumePath(this.current.getClippedPathBoundingBox()),U.globalAlpha=this.current.fillAlpha}closeStroke(){this.closePath(),this.stroke()}fill(l=!0){const U=this.ctx,Z=this.current.fillColor,d=this.current.patternFill;let Q=!1;d&&(U.save(),U.fillStyle=Z.getPattern(U,this,eZ(U),VU.FILL),Q=!0);const V=this.current.getClippedPathBoundingBox();this.contentVisible&&V!==null&&(this.pendingEOFill?(U.fill("evenodd"),this.pendingEOFill=!1):U.fill()),Q&&U.restore(),l&&this.consumePath(V)}eoFill(){this.pendingEOFill=!0,this.fill()}fillStroke(){this.fill(!1),this.stroke(!1),this.consumePath()}eoFillStroke(){this.pendingEOFill=!0,this.fillStroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.pendingEOFill=!0,this.closePath(),this.fillStroke()}endPath(){this.consumePath()}clip(){this.pendingClip=Ib}eoClip(){this.pendingClip=LN}beginText(){this.current.textMatrix=WN,this.current.textMatrixScale=1,this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}endText(){const l=this.pendingTextPaths,U=this.ctx;if(l===void 0){U.beginPath();return}const Z=new Path2D,d=U.getTransform().invertSelf();for(const{transform:Q,x:V,y:W,fontSize:c,path:t}of l)Z.addPath(t,new DOMMatrix(Q).preMultiplySelf(d).translate(V,W).scale(c,-c));U.clip(Z),U.beginPath(),delete this.pendingTextPaths}setCharSpacing(l){this.current.charSpacing=l}setWordSpacing(l){this.current.wordSpacing=l}setHScale(l){this.current.textHScale=l/100}setLeading(l){this.current.leading=-l}setFont(l,U){var R;const Z=this.commonObjs.get(l),d=this.current;if(!Z)throw new Error(`Can't find font for ${l}`);if(d.fontMatrix=Z.fontMatrix||at,(d.fontMatrix[0]===0||d.fontMatrix[3]===0)&&P("Invalid font matrix for font "+l),U<0?(U=-U,d.fontDirection=-1):d.fontDirection=1,this.current.font=Z,this.current.fontSize=U,Z.isType3Font)return;const Q=Z.loadedName||"sans-serif",V=((R=Z.systemFontInfo)==null?void 0:R.css)||`"${Q}", ${Z.fallbackName}`;let W="normal";Z.black?W="900":Z.bold&&(W="bold");const c=Z.italic?"italic":"normal";let t=U;U<XN?t=XN:U>YN&&(t=YN),this.current.fontSizeScale=U/t,this.ctx.font=`${c} ${W} ${t}px ${V}`}setTextRenderingMode(l){this.current.textRenderingMode=l}setTextRise(l){this.current.textRise=l}moveText(l,U){this.current.x=this.current.lineX+=l,this.current.y=this.current.lineY+=U}setLeadingMoveText(l,U){this.setLeading(-U),this.moveText(l,U)}setTextMatrix(l,U,Z,d,Q,V){this.current.textMatrix=[l,U,Z,d,Q,V],this.current.textMatrixScale=Math.hypot(l,U),this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}nextLine(){this.moveText(0,this.current.leading)}paintChar(l,U,Z,d,Q){const V=this.ctx,W=this.current,c=W.font,t=W.textRenderingMode,R=W.fontSize/W.fontSizeScale,s=t&QU.FILL_STROKE_MASK,n=!!(t&QU.ADD_TO_PATH_FLAG),a=W.patternFill&&!c.missingFile,i=W.patternStroke&&!c.missingFile;let M;if((c.disableFontFace||n||a||i)&&(M=c.getPathGenerator(this.commonObjs,l)),c.disableFontFace||a||i){if(V.save(),V.translate(U,Z),V.scale(R,-R),s===QU.FILL||s===QU.FILL_STROKE)if(d){const G=V.getTransform();V.setTransform(...d),V.fill(m(this,hZ,zR).call(this,M,G,d))}else V.fill(M);if(s===QU.STROKE||s===QU.FILL_STROKE)if(Q){const G=V.getTransform();V.setTransform(...Q),V.stroke(m(this,hZ,zR).call(this,M,G,Q))}else V.lineWidth/=R,V.stroke(M);V.restore()}else(s===QU.FILL||s===QU.FILL_STROKE)&&V.fillText(l,U,Z),(s===QU.STROKE||s===QU.FILL_STROKE)&&V.strokeText(l,U,Z);n&&(this.pendingTextPaths||(this.pendingTextPaths=[])).push({transform:Jl(V),x:U,y:Z,fontSize:R,path:M})}get isFontSubpixelAAEnabled(){const{context:l}=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10);l.scale(1.5,1),l.fillText("I",0,10);const U=l.getImageData(0,0,10,10).data;let Z=!1;for(let d=3;d<U.length;d+=4)if(U[d]>0&&U[d]<255){Z=!0;break}return _(this,"isFontSubpixelAAEnabled",Z)}showText(l){const U=this.current,Z=U.font;if(Z.isType3Font)return this.showType3Text(l);const d=U.fontSize;if(d===0)return;const Q=this.ctx,V=U.fontSizeScale,W=U.charSpacing,c=U.wordSpacing,t=U.fontDirection,R=U.textHScale*t,s=l.length,n=Z.vertical,a=n?1:-1,i=Z.defaultVMetrics,M=d*U.fontMatrix[0],G=U.textRenderingMode===QU.FILL&&!Z.disableFontFace&&!U.patternFill;Q.save(),Q.transform(...U.textMatrix),Q.translate(U.x,U.y+U.textRise),t>0?Q.scale(R,-1):Q.scale(R,1);let J,S;if(U.patternFill){Q.save();const e=U.fillColor.getPattern(Q,this,eZ(Q),VU.FILL);J=Jl(Q),Q.restore(),Q.fillStyle=e}if(U.patternStroke){Q.save();const e=U.strokeColor.getPattern(Q,this,eZ(Q),VU.STROKE);S=Jl(Q),Q.restore(),Q.strokeStyle=e}let X=U.lineWidth;const Y=U.textMatrixScale;if(Y===0||X===0){const e=U.textRenderingMode&QU.FILL_STROKE_MASK;(e===QU.STROKE||e===QU.FILL_STROKE)&&(X=this.getSinglePixelWidth())}else X/=Y;if(V!==1&&(Q.scale(V,V),X/=V),Q.lineWidth=X,Z.isInvalidPDFjsFont){const e=[];let o=0;for(const w of l)e.push(w.unicode),o+=w.width;Q.fillText(e.join(""),0,0),U.x+=o*M*R,Q.restore(),this.compose();return}let B=0,p;for(p=0;p<s;++p){const e=l[p];if(typeof e=="number"){B+=a*e*d/1e3;continue}let o=!1;const w=(e.isSpace?c:0)+W,f=e.fontChar,r=e.accent;let hl,cl,$=e.width;if(n){const k=e.vmetric||i,x=-(e.vmetric?k[1]:$*.5)*M,sU=k[2]*M;$=k?-k[0]:$,hl=x/V,cl=(B+sU)/V}else hl=B/V,cl=0;if(Z.remeasure&&$>0){const k=Q.measureText(f).width*1e3/d*V;if($<k&&this.isFontSubpixelAAEnabled){const x=$/k;o=!0,Q.save(),Q.scale(x,1),hl/=x}else $!==k&&(hl+=($-k)/2e3*d/V)}if(this.contentVisible&&(e.isInFont||Z.missingFile)){if(G&&!r)Q.fillText(f,hl,cl);else if(this.paintChar(f,hl,cl,J,S),r){const k=hl+d*r.offset.x/V,x=cl-d*r.offset.y/V;this.paintChar(r.fontChar,k,x,J,S)}}const ol=n?$*M-w*t:$*M+w*t;B+=ol,o&&Q.restore()}n?U.y-=B:U.x+=B*R,Q.restore(),this.compose()}showType3Text(l){const U=this.ctx,Z=this.current,d=Z.font,Q=Z.fontSize,V=Z.fontDirection,W=d.vertical?1:-1,c=Z.charSpacing,t=Z.wordSpacing,R=Z.textHScale*V,s=Z.fontMatrix||at,n=l.length,a=Z.textRenderingMode===QU.INVISIBLE;let i,M,G,J;if(!(a||Q===0)){for(this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null,U.save(),U.transform(...Z.textMatrix),U.translate(Z.x,Z.y),U.scale(R,V),i=0;i<n;++i){if(M=l[i],typeof M=="number"){J=W*M*Q/1e3,this.ctx.translate(J,0),Z.x+=J*R;continue}const S=(M.isSpace?t:0)+c,X=d.charProcOperatorList[M.operatorListId];if(!X){P(`Type3 character "${M.operatorListId}" is not available.`);continue}this.contentVisible&&(this.processingType3=M,this.save(),U.scale(Q,Q),U.transform(...s),this.executeOperatorList(X),this.restore()),G=C.applyTransform([M.width,0],s)[0]*Q+S,U.translate(G,0),Z.x+=G*R}U.restore(),this.processingType3=null}}setCharWidth(l,U){}setCharWidthAndBounds(l,U,Z,d,Q,V){this.ctx.rect(Z,d,Q-Z,V-d),this.ctx.clip(),this.endPath()}getColorN_Pattern(l){let U;if(l[0]==="TilingPattern"){const Z=l[1],d=this.baseTransform||Jl(this.ctx),Q={createCanvasGraphics:V=>new UR(V,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:this.optionalContentConfig,markedContentStack:this.markedContentStack})};U=new It(l,Z,this.ctx,Q,d)}else U=this._getPattern(l[1],l[2]);return U}setStrokeColorN(){this.current.strokeColor=this.getColorN_Pattern(arguments),this.current.patternStroke=!0}setFillColorN(){this.current.fillColor=this.getColorN_Pattern(arguments),this.current.patternFill=!0}setStrokeRGBColor(l,U,Z){this.ctx.strokeStyle=this.current.strokeColor=C.makeHexColor(l,U,Z),this.current.patternStroke=!1}setStrokeTransparent(){this.ctx.strokeStyle=this.current.strokeColor="transparent",this.current.patternStroke=!1}setFillRGBColor(l,U,Z){this.ctx.fillStyle=this.current.fillColor=C.makeHexColor(l,U,Z),this.current.patternFill=!1}setFillTransparent(){this.ctx.fillStyle=this.current.fillColor="transparent",this.current.patternFill=!1}_getPattern(l,U=null){let Z;return this.cachedPatterns.has(l)?Z=this.cachedPatterns.get(l):(Z=pb(this.getObject(l)),this.cachedPatterns.set(l,Z)),U&&(Z.matrix=U),Z}shadingFill(l){if(!this.contentVisible)return;const U=this.ctx;this.save();const Z=this._getPattern(l);U.fillStyle=Z.getPattern(U,this,eZ(U),VU.SHADING);const d=eZ(U);{const{width:Q,height:V}=U.canvas,[W,c,t,R]=C.getAxialAlignedBoundingBox([0,0,Q,V],d);this.ctx.fillRect(W,c,t-W,R-c)}this.compose(this.current.getClippedPathBoundingBox()),this.restore()}beginInlineImage(){al("Should not call beginInlineImage")}beginImageData(){al("Should not call beginImageData")}paintFormXObjectBegin(l,U){if(this.contentVisible&&(this.save(),this.baseTransformStack.push(this.baseTransform),l&&this.transform(...l),this.baseTransform=Jl(this.ctx),U)){const Z=U[2]-U[0],d=U[3]-U[1];this.ctx.rect(U[0],U[1],Z,d),this.current.updateRectMinMax(Jl(this.ctx),U),this.clip(),this.endPath()}}paintFormXObjectEnd(){this.contentVisible&&(this.restore(),this.baseTransform=this.baseTransformStack.pop())}beginGroup(l){if(!this.contentVisible)return;this.save(),this.inSMaskMode&&(this.endSMaskMode(),this.current.activeSMask=null);const U=this.ctx;l.isolated||Uc("TODO: Support non-isolated groups."),l.knockout&&P("Knockout groups not supported.");const Z=Jl(U);if(l.matrix&&U.transform(...l.matrix),!l.bbox)throw new Error("Bounding box is required.");let d=C.getAxialAlignedBoundingBox(l.bbox,Jl(U));const Q=[0,0,U.canvas.width,U.canvas.height];d=C.intersect(d,Q)||[0,0,0,0];const V=Math.floor(d[0]),W=Math.floor(d[1]),c=Math.max(Math.ceil(d[2])-V,1),t=Math.max(Math.ceil(d[3])-W,1);this.current.startNewPathAndClipBox([0,0,c,t]);let R="groupAt"+this.groupLevel;l.smask&&(R+="_smask_"+this.smaskCounter++%2);const s=this.cachedCanvases.getCanvas(R,c,t),n=s.context;n.translate(-V,-W),n.transform(...Z),l.smask?this.smaskStack.push({canvas:s.canvas,context:n,offsetX:V,offsetY:W,subtype:l.smask.subtype,backdrop:l.smask.backdrop,transferMap:l.smask.transferMap||null,startTransformInverse:null}):(U.setTransform(1,0,0,1,0,0),U.translate(V,W),U.save()),QV(U,n),this.ctx=n,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(U),this.groupLevel++}endGroup(l){if(!this.contentVisible)return;this.groupLevel--;const U=this.ctx,Z=this.groupStack.pop();if(this.ctx=Z,this.ctx.imageSmoothingEnabled=!1,l.smask)this.tempSMask=this.smaskStack.pop(),this.restore();else{this.ctx.restore();const d=Jl(this.ctx);this.restore(),this.ctx.save(),this.ctx.setTransform(...d);const Q=C.getAxialAlignedBoundingBox([0,0,U.canvas.width,U.canvas.height],d);this.ctx.drawImage(U.canvas,0,0),this.ctx.restore(),this.compose(Q)}}beginAnnotation(l,U,Z,d,Q){if(m(this,hZ,uR).call(this),Nc(this.ctx),this.ctx.save(),this.save(),this.baseTransform&&this.ctx.setTransform(...this.baseTransform),U){const V=U[2]-U[0],W=U[3]-U[1];if(Q&&this.annotationCanvasMap){Z=Z.slice(),Z[4]-=U[0],Z[5]-=U[1],U=U.slice(),U[0]=U[1]=0,U[2]=V,U[3]=W;const[c,t]=C.singularValueDecompose2dScale(Jl(this.ctx)),{viewportScale:R}=this,s=Math.ceil(V*this.outputScaleX*R),n=Math.ceil(W*this.outputScaleY*R);this.annotationCanvas=this.canvasFactory.create(s,n);const{canvas:a,context:i}=this.annotationCanvas;this.annotationCanvasMap.set(l,a),this.annotationCanvas.savedCtx=this.ctx,this.ctx=i,this.ctx.save(),this.ctx.setTransform(c,0,0,-t,0,W*t),Nc(this.ctx)}else Nc(this.ctx),this.endPath(),this.ctx.rect(U[0],U[1],V,W),this.ctx.clip(),this.ctx.beginPath()}this.current=new pN(this.ctx.canvas.width,this.ctx.canvas.height),this.transform(...Z),this.transform(...d)}endAnnotation(){this.annotationCanvas&&(this.ctx.restore(),m(this,hZ,yR).call(this),this.ctx=this.annotationCanvas.savedCtx,delete this.annotationCanvas.savedCtx,delete this.annotationCanvas)}paintImageMaskXObject(l){if(!this.contentVisible)return;const U=l.count;l=this.getObject(l.data,l),l.count=U;const Z=this.ctx,d=this.processingType3;if(d&&(d.compiled===void 0&&(d.compiled=ob(l)),d.compiled)){d.compiled(Z);return}const Q=this._createMaskCanvas(l),V=Q.canvas;Z.save(),Z.setTransform(1,0,0,1,0,0),Z.drawImage(V,Q.offsetX,Q.offsetY),Z.restore(),this.compose()}paintImageMaskXObjectRepeat(l,U,Z=0,d=0,Q,V){if(!this.contentVisible)return;l=this.getObject(l.data,l);const W=this.ctx;W.save();const c=Jl(W);W.transform(U,Z,d,Q,0,0);const t=this._createMaskCanvas(l);W.setTransform(1,0,0,1,t.offsetX-c[4],t.offsetY-c[5]);for(let R=0,s=V.length;R<s;R+=2){const n=C.transform(c,[U,Z,d,Q,V[R],V[R+1]]),[a,i]=C.applyTransform([0,0],n);W.drawImage(t.canvas,a,i)}W.restore(),this.compose()}paintImageMaskXObjectGroup(l){if(!this.contentVisible)return;const U=this.ctx,Z=this.current.fillColor,d=this.current.patternFill;for(const Q of l){const{data:V,width:W,height:c,transform:t}=Q,R=this.cachedCanvases.getCanvas("maskCanvas",W,c),s=R.context;s.save();const n=this.getObject(V,Q);yN(s,n),s.globalCompositeOperation="source-in",s.fillStyle=d?Z.getPattern(s,this,eZ(U),VU.FILL):Z,s.fillRect(0,0,W,c),s.restore(),U.save(),U.transform(...t),U.scale(1,-1),Rc(U,R.canvas,0,0,W,c,0,-1,1,1),U.restore()}this.compose()}paintImageXObject(l){if(!this.contentVisible)return;const U=this.getObject(l);if(!U){P("Dependent image isn't ready yet");return}this.paintInlineImageXObject(U)}paintImageXObjectRepeat(l,U,Z,d){if(!this.contentVisible)return;const Q=this.getObject(l);if(!Q){P("Dependent image isn't ready yet");return}const V=Q.width,W=Q.height,c=[];for(let t=0,R=d.length;t<R;t+=2)c.push({transform:[U,0,0,Z,d[t],d[t+1]],x:0,y:0,w:V,h:W});this.paintInlineImageXObjectGroup(Q,c)}applyTransferMapsToCanvas(l){return this.current.transferMaps!=="none"&&(l.filter=this.current.transferMaps,l.drawImage(l.canvas,0,0),l.filter="none"),l.canvas}applyTransferMapsToBitmap(l){if(this.current.transferMaps==="none")return l.bitmap;const{bitmap:U,width:Z,height:d}=l,Q=this.cachedCanvases.getCanvas("inlineImage",Z,d),V=Q.context;return V.filter=this.current.transferMaps,V.drawImage(U,0,0),V.filter="none",Q.canvas}paintInlineImageXObject(l){if(!this.contentVisible)return;const U=l.width,Z=l.height,d=this.ctx;if(this.save(),!FU){const{filter:W}=d;W!=="none"&&W!==""&&(d.filter="none")}d.scale(1/U,-1/Z);let Q;if(l.bitmap)Q=this.applyTransferMapsToBitmap(l);else if(typeof HTMLElement=="function"&&l instanceof HTMLElement||!l.data)Q=l;else{const c=this.cachedCanvases.getCanvas("inlineImage",U,Z).context;uN(c,l),Q=this.applyTransferMapsToCanvas(c)}const V=this._scaleImage(Q,eZ(d));d.imageSmoothingEnabled=zN(Jl(d),l.interpolate),Rc(d,V.img,0,0,V.paintWidth,V.paintHeight,0,-Z,U,Z),this.compose(),this.restore()}paintInlineImageXObjectGroup(l,U){if(!this.contentVisible)return;const Z=this.ctx;let d;if(l.bitmap)d=l.bitmap;else{const Q=l.width,V=l.height,c=this.cachedCanvases.getCanvas("inlineImage",Q,V).context;uN(c,l),d=this.applyTransferMapsToCanvas(c)}for(const Q of U)Z.save(),Z.transform(...Q.transform),Z.scale(1,-1),Rc(Z,d,Q.x,Q.y,Q.w,Q.h,0,-1,1,1),Z.restore();this.compose()}paintSolidColorImageMask(){this.contentVisible&&(this.ctx.fillRect(0,0,1,1),this.compose())}markPoint(l){}markPointProps(l,U){}beginMarkedContent(l){this.markedContentStack.push({visible:!0})}beginMarkedContentProps(l,U){l==="OC"?this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(U)}):this.markedContentStack.push({visible:!0}),this.contentVisible=this.isContentVisible()}endMarkedContent(){this.markedContentStack.pop(),this.contentVisible=this.isContentVisible()}beginCompat(){}endCompat(){}consumePath(l){const U=this.current.isEmptyClip();this.pendingClip&&this.current.updateClipFromPath(),this.pendingClip||this.compose(l);const Z=this.ctx;this.pendingClip&&(U||(this.pendingClip===LN?Z.clip("evenodd"):Z.clip()),this.pendingClip=null),this.current.startNewPathAndClipBox(this.current.clipBox),Z.beginPath()}getSinglePixelWidth(){if(!this._cachedGetSinglePixelWidth){const l=Jl(this.ctx);if(l[1]===0&&l[2]===0)this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(l[0]),Math.abs(l[3]));else{const U=Math.abs(l[0]*l[3]-l[2]*l[1]),Z=Math.hypot(l[0],l[2]),d=Math.hypot(l[1],l[3]);this._cachedGetSinglePixelWidth=Math.max(Z,d)/U}}return this._cachedGetSinglePixelWidth}getScaleForStroking(){if(this._cachedScaleForStroking[0]===-1){const{lineWidth:l}=this.current,{a:U,b:Z,c:d,d:Q}=this.ctx.getTransform();let V,W;if(Z===0&&d===0){const c=Math.abs(U),t=Math.abs(Q);if(c===t)if(l===0)V=W=1/c;else{const R=c*l;V=W=R<1?1/R:1}else if(l===0)V=1/c,W=1/t;else{const R=c*l,s=t*l;V=R<1?1/R:1,W=s<1?1/s:1}}else{const c=Math.abs(U*Q-Z*d),t=Math.hypot(U,Z),R=Math.hypot(d,Q);if(l===0)V=R/c,W=t/c;else{const s=l*c;V=R>s?R/s:1,W=t>s?t/s:1}}this._cachedScaleForStroking[0]=V,this._cachedScaleForStroking[1]=W}return this._cachedScaleForStroking}rescaleAndStroke(l){const{ctx:U}=this,{lineWidth:Z}=this.current,[d,Q]=this.getScaleForStroking();if(U.lineWidth=Z||1,d===1&&Q===1){U.stroke();return}const V=U.getLineDash();if(l&&U.save(),U.scale(d,Q),V.length>0){const W=Math.max(d,Q);U.setLineDash(V.map(c=>c/W)),U.lineDashOffset/=W}U.stroke(),l&&U.restore()}isContentVisible(){for(let l=this.markedContentStack.length-1;l>=0;l--)if(!this.markedContentStack[l].visible)return!1;return!0}};hZ=new WeakSet,uR=function(){for(;this.stateStack.length||this.inSMaskMode;)this.restore();this.current.activeSMask=null,this.ctx.restore(),this.transparentCanvas&&(this.ctx=this.compositeCtx,this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.drawImage(this.transparentCanvas,0,0),this.ctx.restore(),this.transparentCanvas=null)},yR=function(){if(this.pageColors){const l=this.filterFactory.addHCMFilter(this.pageColors.foreground,this.pageColors.background);if(l!=="none"){const U=this.ctx.filter;this.ctx.filter=l,this.ctx.drawImage(this.ctx.canvas,0,0),this.ctx.filter=U}}},zR=function(l,U,Z){const d=new Path2D;return d.addPath(l,new DOMMatrix(Z).invertSelf().multiplySelf(U)),d};let z0=UR;for(const N in tZ)z0.prototype[N]!==void 0&&(z0.prototype[tZ[N]]=z0.prototype[N]);class AZ{static get workerPort(){return F(this,wV)}static set workerPort(l){if(!(typeof Worker<"u"&&l instanceof Worker)&&l!==null)throw new Error("Invalid `workerPort` type.");b(this,wV,l)}static get workerSrc(){return F(this,xV)}static set workerSrc(l){if(typeof l!="string")throw new Error("Invalid `workerSrc` type.");b(this,xV,l)}}wV=new WeakMap,xV=new WeakMap,h(AZ,wV,null),h(AZ,xV,"");class Eb{constructor({parsedData:l,rawData:U}){h(this,rF);h(this,jV);b(this,rF,l),b(this,jV,U)}getRaw(){return F(this,jV)}get(l){return F(this,rF).get(l)??null}getAll(){return Mt(F(this,rF))}has(l){return F(this,rF).has(l)}}rF=new WeakMap,jV=new WeakMap;const L0=Symbol("INTERNAL");class Cb{constructor(l,{name:U,intent:Z,usage:d,rbGroups:Q}){h(this,OV,!1);h(this,rV,!1);h(this,gV,!1);h(this,q0,!0);b(this,OV,!!(l&oU.DISPLAY)),b(this,rV,!!(l&oU.PRINT)),this.name=U,this.intent=Z,this.usage=d,this.rbGroups=Q}get visible(){if(F(this,gV))return F(this,q0);if(!F(this,q0))return!1;const{print:l,view:U}=this.usage;return F(this,OV)?(U==null?void 0:U.viewState)!=="OFF":F(this,rV)?(l==null?void 0:l.printState)!=="OFF":!0}_setVisible(l,U,Z=!1){l!==L0&&al("Internal method `_setVisible` called."),b(this,gV,Z),b(this,q0,U)}}OV=new WeakMap,rV=new WeakMap,gV=new WeakMap,q0=new WeakMap;class wb{constructor(l,U=oU.DISPLAY){h(this,KV);h(this,Pd,null);h(this,Nl,new Map);h(this,$0,null);h(this,lQ,null);if(this.renderingIntent=U,this.name=null,this.creator=null,l!==null){this.name=l.name,this.creator=l.creator,b(this,lQ,l.order);for(const Z of l.groups)F(this,Nl).set(Z.id,new Cb(U,Z));if(l.baseState==="OFF")for(const Z of F(this,Nl).values())Z._setVisible(L0,!1);for(const Z of l.on)F(this,Nl).get(Z)._setVisible(L0,!0);for(const Z of l.off)F(this,Nl).get(Z)._setVisible(L0,!1);b(this,$0,this.getHash())}}isVisible(l){if(F(this,Nl).size===0)return!0;if(!l)return Uc("Optional content group not defined."),!0;if(l.type==="OCG")return F(this,Nl).has(l.id)?F(this,Nl).get(l.id).visible:(P(`Optional content group not found: ${l.id}`),!0);if(l.type==="OCMD"){if(l.expression)return m(this,KV,LR).call(this,l.expression);if(!l.policy||l.policy==="AnyOn"){for(const U of l.ids){if(!F(this,Nl).has(U))return P(`Optional content group not found: ${U}`),!0;if(F(this,Nl).get(U).visible)return!0}return!1}else if(l.policy==="AllOn"){for(const U of l.ids){if(!F(this,Nl).has(U))return P(`Optional content group not found: ${U}`),!0;if(!F(this,Nl).get(U).visible)return!1}return!0}else if(l.policy==="AnyOff"){for(const U of l.ids){if(!F(this,Nl).has(U))return P(`Optional content group not found: ${U}`),!0;if(!F(this,Nl).get(U).visible)return!0}return!1}else if(l.policy==="AllOff"){for(const U of l.ids){if(!F(this,Nl).has(U))return P(`Optional content group not found: ${U}`),!0;if(F(this,Nl).get(U).visible)return!1}return!0}return P(`Unknown optional content policy ${l.policy}.`),!0}return P(`Unknown group type ${l.type}.`),!0}setVisibility(l,U=!0,Z=!0){var Q;const d=F(this,Nl).get(l);if(!d){P(`Optional content group not found: ${l}`);return}if(Z&&U&&d.rbGroups.length)for(const V of d.rbGroups)for(const W of V)W!==l&&((Q=F(this,Nl).get(W))==null||Q._setVisible(L0,!1,!0));d._setVisible(L0,!!U,!0),b(this,Pd,null)}setOCGState({state:l,preserveRB:U}){let Z;for(const d of l){switch(d){case"ON":case"OFF":case"Toggle":Z=d;continue}const Q=F(this,Nl).get(d);if(Q)switch(Z){case"ON":this.setVisibility(d,!0,U);break;case"OFF":this.setVisibility(d,!1,U);break;case"Toggle":this.setVisibility(d,!Q.visible,U);break}}b(this,Pd,null)}get hasInitialVisibility(){return F(this,$0)===null||this.getHash()===F(this,$0)}getOrder(){return F(this,Nl).size?F(this,lQ)?F(this,lQ).slice():[...F(this,Nl).keys()]:null}getGroups(){return F(this,Nl).size>0?Mt(F(this,Nl)):null}getGroup(l){return F(this,Nl).get(l)||null}getHash(){if(F(this,Pd)!==null)return F(this,Pd);const l=new nN;for(const[U,Z]of F(this,Nl))l.update(`${U}:${Z.visible}`);return b(this,Pd,l.hexdigest())}}Pd=new WeakMap,Nl=new WeakMap,$0=new WeakMap,lQ=new WeakMap,KV=new WeakSet,LR=function(l){const U=l.length;if(U<2)return!0;const Z=l[0];for(let d=1;d<U;d++){const Q=l[d];let V;if(Array.isArray(Q))V=m(this,KV,LR).call(this,Q);else if(F(this,Nl).has(Q))V=F(this,Nl).get(Q).visible;else return P(`Optional content group not found: ${Q}`),!0;switch(Z){case"And":if(!V)return!1;break;case"Or":if(V)return!0;break;case"Not":return!V;default:return!0}}return Z==="And"};class xb{constructor(l,{disableRange:U=!1,disableStream:Z=!1}){Dl(l,'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.');const{length:d,initialData:Q,progressiveDone:V,contentDispositionFilename:W}=l;if(this._queuedChunks=[],this._progressiveDone=V,this._contentDispositionFilename=W,(Q==null?void 0:Q.length)>0){const c=Q instanceof Uint8Array&&Q.byteLength===Q.buffer.byteLength?Q.buffer:new Uint8Array(Q).buffer;this._queuedChunks.push(c)}this._pdfDataRangeTransport=l,this._isStreamingSupported=!Z,this._isRangeSupported=!U,this._contentLength=d,this._fullRequestReader=null,this._rangeReaders=[],l.addRangeListener((c,t)=>{this._onReceiveData({begin:c,chunk:t})}),l.addProgressListener((c,t)=>{this._onProgress({loaded:c,total:t})}),l.addProgressiveReadListener(c=>{this._onReceiveData({chunk:c})}),l.addProgressiveDoneListener(()=>{this._onProgressiveDone()}),l.transportReady()}_onReceiveData({begin:l,chunk:U}){const Z=U instanceof Uint8Array&&U.byteLength===U.buffer.byteLength?U.buffer:new Uint8Array(U).buffer;if(l===void 0)this._fullRequestReader?this._fullRequestReader._enqueue(Z):this._queuedChunks.push(Z);else{const d=this._rangeReaders.some(function(Q){return Q._begin!==l?!1:(Q._enqueue(Z),!0)});Dl(d,"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.")}}get _progressiveDataLength(){var l;return((l=this._fullRequestReader)==null?void 0:l._loaded)??0}_onProgress(l){var U,Z,d,Q;l.total===void 0?(Z=(U=this._rangeReaders[0])==null?void 0:U.onProgress)==null||Z.call(U,{loaded:l.loaded}):(Q=(d=this._fullRequestReader)==null?void 0:d.onProgress)==null||Q.call(d,{loaded:l.loaded,total:l.total})}_onProgressiveDone(){var l;(l=this._fullRequestReader)==null||l.progressiveDone(),this._progressiveDone=!0}_removeRangeReader(l){const U=this._rangeReaders.indexOf(l);U>=0&&this._rangeReaders.splice(U,1)}getFullReader(){Dl(!this._fullRequestReader,"PDFDataTransportStream.getFullReader can only be called once.");const l=this._queuedChunks;return this._queuedChunks=null,new jb(this,l,this._progressiveDone,this._contentDispositionFilename)}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const Z=new Ob(this,l,U);return this._pdfDataRangeTransport.requestDataRange(l,U),this._rangeReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeReaders.slice(0))Z.cancel(l);this._pdfDataRangeTransport.abort()}}class jb{constructor(l,U,Z=!1,d=null){this._stream=l,this._done=Z||!1,this._filename=Xt(d)?d:null,this._queuedChunks=U||[],this._loaded=0;for(const Q of this._queuedChunks)this._loaded+=Q.byteLength;this._requests=[],this._headersReady=Promise.resolve(),l._fullRequestReader=this,this.onProgress=null}_enqueue(l){this._done||(this._requests.length>0?this._requests.shift().resolve({value:l,done:!1}):this._queuedChunks.push(l),this._loaded+=l.byteLength)}get headersReady(){return this._headersReady}get filename(){return this._filename}get isRangeSupported(){return this._stream._isRangeSupported}get isStreamingSupported(){return this._stream._isStreamingSupported}get contentLength(){return this._stream._contentLength}async read(){if(this._queuedChunks.length>0)return{value:this._queuedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0}progressiveDone(){this._done||(this._done=!0)}}class Ob{constructor(l,U,Z){this._stream=l,this._begin=U,this._end=Z,this._queuedChunk=null,this._requests=[],this._done=!1,this.onProgress=null}_enqueue(l){if(!this._done){if(this._requests.length===0)this._queuedChunk=l;else{this._requests.shift().resolve({value:l,done:!1});for(const Z of this._requests)Z.resolve({value:void 0,done:!0});this._requests.length=0}this._done=!0,this._stream._removeRangeReader(this)}}get isStreamingSupported(){return!1}async read(){if(this._queuedChunk){const U=this._queuedChunk;return this._queuedChunk=null,{value:U,done:!1}}if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._stream._removeRangeReader(this)}}function rb(N){let l=!0,U=Z("filename\\*","i").exec(N);if(U){U=U[1];let R=W(U);return R=unescape(R),R=c(R),R=t(R),Q(R)}if(U=V(N),U){const R=t(U);return Q(R)}if(U=Z("filename","i").exec(N),U){U=U[1];let R=W(U);return R=t(R),Q(R)}function Z(R,s){return new RegExp("(?:^|;)\\s*"+R+'\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',s)}function d(R,s){if(R){if(!/^[\x00-\xFF]+$/.test(s))return s;try{const n=new TextDecoder(R,{fatal:!0}),a=dc(s);s=n.decode(a),l=!1}catch{}}return s}function Q(R){return l&&/[\x80-\xff]/.test(R)&&(R=d("utf-8",R),l&&(R=d("iso-8859-1",R))),R}function V(R){const s=[];let n;const a=Z("filename\\*((?!0\\d)\\d+)(\\*?)","ig");for(;(n=a.exec(R))!==null;){let[,M,G,J]=n;if(M=parseInt(M,10),M in s){if(M===0)break;continue}s[M]=[G,J]}const i=[];for(let M=0;M<s.length&&M in s;++M){let[G,J]=s[M];J=W(J),G&&(J=unescape(J),M===0&&(J=c(J))),i.push(J)}return i.join("")}function W(R){if(R.startsWith('"')){const s=R.slice(1).split('\\"');for(let n=0;n<s.length;++n){const a=s[n].indexOf('"');a!==-1&&(s[n]=s[n].slice(0,a),s.length=n+1),s[n]=s[n].replaceAll(/\\(.)/g,"$1")}R=s.join('"')}return R}function c(R){const s=R.indexOf("'");if(s===-1)return R;const n=R.slice(0,s),i=R.slice(s+1).replace(/^[^']*'/,"");return d(n,i)}function t(R){return!R.startsWith("=?")||/[\x00-\x19\x80-\xff]/.test(R)?R:R.replaceAll(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,function(s,n,a,i){if(a==="q"||a==="Q")return i=i.replaceAll("_"," "),i=i.replaceAll(/=([0-9a-fA-F]{2})/g,function(M,G){return String.fromCharCode(parseInt(G,16))}),d(n,i);try{i=atob(i)}catch{}return d(n,i)})}return""}function oN(N,l){const U=new Headers;if(!N||!l||typeof l!="object")return U;for(const Z in l){const d=l[Z];d!==void 0&&U.append(Z,d)}return U}function sc(N){try{return new URL(N).origin}catch{}return null}function kN({responseHeaders:N,isHttp:l,rangeChunkSize:U,disableRange:Z}){const d={allowRangeRequests:!1,suggestedLength:void 0},Q=parseInt(N.get("Content-Length"),10);return!Number.isInteger(Q)||(d.suggestedLength=Q,Q<=2*U)||Z||!l||N.get("Accept-Ranges")!=="bytes"||(N.get("Content-Encoding")||"identity")!=="identity"||(d.allowRangeRequests=!0),d}function DN(N){const l=N.get("Content-Disposition");if(l){let U=rb(l);if(U.includes("%"))try{U=decodeURIComponent(U)}catch{}if(Xt(U))return U}return null}function nc(N,l){return N===404||N===0&&l.startsWith("file:")?new lV('Missing PDF "'+l+'".'):new Zc(`Unexpected server response (${N}) while retrieving PDF "${l}".`,N)}function IN(N){return N===200||N===206}function EN(N,l,U){return{method:"GET",headers:N,signal:U.signal,mode:"cors",credentials:l?"include":"same-origin",redirect:"follow"}}function CN(N){return N instanceof Uint8Array?N.buffer:N instanceof ArrayBuffer?N:(P(`getArrayBuffer - unexpected data format: ${N}`),new Uint8Array(N).buffer)}class wN{constructor(l){O(this,"_responseOrigin",null);this.source=l,this.isHttp=/^https?:/i.test(l.url),this.headers=oN(this.isHttp,l.httpHeaders),this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){var l;return((l=this._fullRequestReader)==null?void 0:l._loaded)??0}getFullReader(){return Dl(!this._fullRequestReader,"PDFFetchStream.getFullReader can only be called once."),this._fullRequestReader=new gb(this),this._fullRequestReader}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const Z=new Kb(this,l,U);return this._rangeRequestReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeRequestReaders.slice(0))Z.cancel(l)}}class gb{constructor(l){this._stream=l,this._reader=null,this._loaded=0,this._filename=null;const U=l.source;this._withCredentials=U.withCredentials||!1,this._contentLength=U.length,this._headersCapability=Promise.withResolvers(),this._disableRange=U.disableRange||!1,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._abortController=new AbortController,this._isStreamingSupported=!U.disableStream,this._isRangeSupported=!U.disableRange;const Z=new Headers(l.headers),d=U.url;fetch(d,EN(Z,this._withCredentials,this._abortController)).then(Q=>{if(l._responseOrigin=sc(Q.url),!IN(Q.status))throw nc(Q.status,d);this._reader=Q.body.getReader(),this._headersCapability.resolve();const V=Q.headers,{allowRangeRequests:W,suggestedLength:c}=kN({responseHeaders:V,isHttp:l.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=W,this._contentLength=c||this._contentLength,this._filename=DN(V),!this._isStreamingSupported&&this._isRangeSupported&&this.cancel(new Ld("Streaming is disabled."))}).catch(this._headersCapability.reject),this.onProgress=null}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;await this._headersCapability.promise;const{value:l,done:U}=await this._reader.read();return U?{value:l,done:U}:(this._loaded+=l.byteLength,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded,total:this._contentLength}),{value:CN(l),done:!1})}cancel(l){var U;(U=this._reader)==null||U.cancel(l),this._abortController.abort()}}class Kb{constructor(l,U,Z){this._stream=l,this._reader=null,this._loaded=0;const d=l.source;this._withCredentials=d.withCredentials||!1,this._readCapability=Promise.withResolvers(),this._isStreamingSupported=!d.disableStream,this._abortController=new AbortController;const Q=new Headers(l.headers);Q.append("Range",`bytes=${U}-${Z-1}`);const V=d.url;fetch(V,EN(Q,this._withCredentials,this._abortController)).then(W=>{const c=sc(W.url);if(c!==l._responseOrigin)throw new Error(`Expected range response-origin "${c}" to match "${l._responseOrigin}".`);if(!IN(W.status))throw nc(W.status,V);this._readCapability.resolve(),this._reader=W.body.getReader()}).catch(this._readCapability.reject),this.onProgress=null}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;await this._readCapability.promise;const{value:l,done:U}=await this._reader.read();return U?{value:l,done:U}:(this._loaded+=l.byteLength,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded}),{value:CN(l),done:!1})}cancel(l){var U;(U=this._reader)==null||U.cancel(l),this._abortController.abort()}}const Et=200,Ct=206;function Hb(N){const l=N.response;return typeof l!="string"?l:dc(l).buffer}class vb{constructor({url:l,httpHeaders:U,withCredentials:Z}){O(this,"_responseOrigin",null);this.url=l,this.isHttp=/^https?:/i.test(l),this.headers=oN(this.isHttp,U),this.withCredentials=Z||!1,this.currXhrId=0,this.pendingRequests=Object.create(null)}request(l){const U=new XMLHttpRequest,Z=this.currXhrId++,d=this.pendingRequests[Z]={xhr:U};U.open("GET",this.url),U.withCredentials=this.withCredentials;for(const[Q,V]of this.headers)U.setRequestHeader(Q,V);return this.isHttp&&"begin"in l&&"end"in l?(U.setRequestHeader("Range",`bytes=${l.begin}-${l.end-1}`),d.expectedStatus=Ct):d.expectedStatus=Et,U.responseType="arraybuffer",Dl(l.onError,"Expected `onError` callback to be provided."),U.onerror=()=>{l.onError(U.status)},U.onreadystatechange=this.onStateChange.bind(this,Z),U.onprogress=this.onProgress.bind(this,Z),d.onHeadersReceived=l.onHeadersReceived,d.onDone=l.onDone,d.onError=l.onError,d.onProgress=l.onProgress,U.send(null),Z}onProgress(l,U){var d;const Z=this.pendingRequests[l];Z&&((d=Z.onProgress)==null||d.call(Z,U))}onStateChange(l,U){const Z=this.pendingRequests[l];if(!Z)return;const d=Z.xhr;if(d.readyState>=2&&Z.onHeadersReceived&&(Z.onHeadersReceived(),delete Z.onHeadersReceived),d.readyState!==4||!(l in this.pendingRequests))return;if(delete this.pendingRequests[l],d.status===0&&this.isHttp){Z.onError(d.status);return}const Q=d.status||Et;if(!(Q===Et&&Z.expectedStatus===Ct)&&Q!==Z.expectedStatus){Z.onError(d.status);return}const W=Hb(d);if(Q===Ct){const c=d.getResponseHeader("Content-Range"),t=/bytes (\d+)-(\d+)\/(\d+)/.exec(c);t?Z.onDone({begin:parseInt(t[1],10),chunk:W}):(P('Missing or invalid "Content-Range" header.'),Z.onError(0))}else W?Z.onDone({begin:0,chunk:W}):Z.onError(d.status)}getRequestXhr(l){return this.pendingRequests[l].xhr}isPendingRequest(l){return l in this.pendingRequests}abortRequest(l){const U=this.pendingRequests[l].xhr;delete this.pendingRequests[l],U.abort()}}class Pb{constructor(l){this._source=l,this._manager=new vb(l),this._rangeChunkSize=l.rangeChunkSize,this._fullRequestReader=null,this._rangeRequestReaders=[]}_onRangeRequestReaderClosed(l){const U=this._rangeRequestReaders.indexOf(l);U>=0&&this._rangeRequestReaders.splice(U,1)}getFullReader(){return Dl(!this._fullRequestReader,"PDFNetworkStream.getFullReader can only be called once."),this._fullRequestReader=new fb(this._manager,this._source),this._fullRequestReader}getRangeReader(l,U){const Z=new Ab(this._manager,l,U);return Z.onClosed=this._onRangeRequestReaderClosed.bind(this),this._rangeRequestReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeRequestReaders.slice(0))Z.cancel(l)}}class fb{constructor(l,U){this._manager=l,this._url=U.url,this._fullRequestId=l.request({onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)}),this._headersCapability=Promise.withResolvers(),this._disableRange=U.disableRange||!1,this._contentLength=U.length,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._isStreamingSupported=!1,this._isRangeSupported=!1,this._cachedChunks=[],this._requests=[],this._done=!1,this._storedError=void 0,this._filename=null,this.onProgress=null}_onHeadersReceived(){const l=this._fullRequestId,U=this._manager.getRequestXhr(l);this._manager._responseOrigin=sc(U.responseURL);const Z=U.getAllResponseHeaders(),d=new Headers(Z?Z.trimStart().replace(/[^\S ]+$/,"").split(/[\r\n]+/).map(W=>{const[c,...t]=W.split(": ");return[c,t.join(": ")]}):[]),{allowRangeRequests:Q,suggestedLength:V}=kN({responseHeaders:d,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});Q&&(this._isRangeSupported=!0),this._contentLength=V||this._contentLength,this._filename=DN(d),this._isRangeSupported&&this._manager.abortRequest(l),this._headersCapability.resolve()}_onDone(l){if(l&&(this._requests.length>0?this._requests.shift().resolve({value:l.chunk,done:!1}):this._cachedChunks.push(l.chunk)),this._done=!0,!(this._cachedChunks.length>0)){for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0}}_onError(l){this._storedError=nc(l,this._url),this._headersCapability.reject(this._storedError);for(const U of this._requests)U.reject(this._storedError);this._requests.length=0,this._cachedChunks.length=0}_onProgress(l){var U;(U=this.onProgress)==null||U.call(this,{loaded:l.loaded,total:l.lengthComputable?l.total:this._contentLength})}get filename(){return this._filename}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}get contentLength(){return this._contentLength}get headersReady(){return this._headersCapability.promise}async read(){if(await this._headersCapability.promise,this._storedError)throw this._storedError;if(this._cachedChunks.length>0)return{value:this._cachedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0,this._headersCapability.reject(l);for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId),this._fullRequestReader=null}}class Ab{constructor(l,U,Z){this._manager=l,this._url=l.url,this._requestId=l.request({begin:U,end:Z,onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)}),this._requests=[],this._queuedChunk=null,this._done=!1,this._storedError=void 0,this.onProgress=null,this.onClosed=null}_onHeadersReceived(){var U;const l=sc((U=this._manager.getRequestXhr(this._requestId))==null?void 0:U.responseURL);l!==this._manager._responseOrigin&&(this._storedError=new Error(`Expected range response-origin "${l}" to match "${this._manager._responseOrigin}".`),this._onError(0))}_close(){var l;(l=this.onClosed)==null||l.call(this,this)}_onDone(l){const U=l.chunk;this._requests.length>0?this._requests.shift().resolve({value:U,done:!1}):this._queuedChunk=U,this._done=!0;for(const Z of this._requests)Z.resolve({value:void 0,done:!0});this._requests.length=0,this._close()}_onError(l){this._storedError??(this._storedError=nc(l,this._url));for(const U of this._requests)U.reject(this._storedError);this._requests.length=0,this._queuedChunk=null}_onProgress(l){var U;this.isStreamingSupported||(U=this.onProgress)==null||U.call(this,{loaded:l.loaded})}get isStreamingSupported(){return!1}async read(){if(this._storedError)throw this._storedError;if(this._queuedChunk!==null){const U=this._queuedChunk;return this._queuedChunk=null,{value:U,done:!1}}if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId),this._close()}}const _b=/^[a-z][a-z0-9\-+.]+:/i;function qb(N){if(_b.test(N))return new URL(N);const l=process.getBuiltinModule("url");return new URL(l.pathToFileURL(N))}class $b{constructor(l){this.source=l,this.url=qb(l.url),Dl(this.url.protocol==="file:","PDFNodeStream only supports file:// URLs."),this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){var l;return((l=this._fullRequestReader)==null?void 0:l._loaded)??0}getFullReader(){return Dl(!this._fullRequestReader,"PDFNodeStream.getFullReader can only be called once."),this._fullRequestReader=new la(this),this._fullRequestReader}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const Z=new Ua(this,l,U);return this._rangeRequestReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeRequestReaders.slice(0))Z.cancel(l)}}class la{constructor(l){this._url=l.url,this._done=!1,this._storedError=null,this.onProgress=null;const U=l.source;this._contentLength=U.length,this._loaded=0,this._filename=null,this._disableRange=U.disableRange||!1,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._isStreamingSupported=!U.disableStream,this._isRangeSupported=!U.disableRange,this._readableStream=null,this._readCapability=Promise.withResolvers(),this._headersCapability=Promise.withResolvers();const Z=process.getBuiltinModule("fs");Z.promises.lstat(this._url).then(d=>{this._contentLength=d.size,this._setReadableStream(Z.createReadStream(this._url)),this._headersCapability.resolve()},d=>{d.code==="ENOENT"&&(d=new lV(`Missing PDF "${this._url}".`)),this._storedError=d,this._headersCapability.reject(d)})}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const l=this._readableStream.read();return l===null?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=l.length,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded,total:this._contentLength}),{value:new Uint8Array(l).buffer,done:!1})}cancel(l){if(!this._readableStream){this._error(l);return}this._readableStream.destroy(l)}_error(l){this._storedError=l,this._readCapability.resolve()}_setReadableStream(l){this._readableStream=l,l.on("readable",()=>{this._readCapability.resolve()}),l.on("end",()=>{l.destroy(),this._done=!0,this._readCapability.resolve()}),l.on("error",U=>{this._error(U)}),!this._isStreamingSupported&&this._isRangeSupported&&this._error(new Ld("streaming is disabled")),this._storedError&&this._readableStream.destroy(this._storedError)}}class Ua{constructor(l,U,Z){this._url=l.url,this._done=!1,this._storedError=null,this.onProgress=null,this._loaded=0,this._readableStream=null,this._readCapability=Promise.withResolvers();const d=l.source;this._isStreamingSupported=!d.disableStream;const Q=process.getBuiltinModule("fs");this._setReadableStream(Q.createReadStream(this._url,{start:U,end:Z-1}))}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const l=this._readableStream.read();return l===null?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=l.length,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded}),{value:new Uint8Array(l).buffer,done:!1})}cancel(l){if(!this._readableStream){this._error(l);return}this._readableStream.destroy(l)}_error(l){this._storedError=l,this._readCapability.resolve()}_setReadableStream(l){this._readableStream=l,l.on("readable",()=>{this._readCapability.resolve()}),l.on("end",()=>{l.destroy(),this._done=!0,this._readCapability.resolve()}),l.on("error",U=>{this._error(U)}),this._storedError&&this._readableStream.destroy(this._storedError)}}const Za=1e5,eU=30,da=.8,jl=class jl{constructor({textContentSource:l,container:U,viewport:Z}){h(this,Rd);h(this,fd,Promise.withResolvers());h(this,uU,null);h(this,HV,!1);h(this,vV,!!((ls=globalThis.FontInspector)!=null&&ls.enabled));h(this,gF,null);h(this,td,null);h(this,PV,0);h(this,fV,0);h(this,KF,null);h(this,UQ,null);h(this,ZQ,0);h(this,Ad,0);h(this,dQ,Object.create(null));h(this,AV,[]);h(this,FQ,null);h(this,HF,[]);h(this,_V,new WeakMap);h(this,qV,null);var c;if(l instanceof ReadableStream)b(this,FQ,l);else if(typeof l=="object")b(this,FQ,new ReadableStream({start(t){t.enqueue(l),t.close()}}));else throw new Error('No "textContentSource" parameter specified.');b(this,uU,b(this,UQ,U)),b(this,Ad,Z.scale*(globalThis.devicePixelRatio||1)),b(this,ZQ,Z.rotation),b(this,td,{div:null,properties:null,ctx:null});const{pageWidth:d,pageHeight:Q,pageX:V,pageY:W}=Z.rawDims;b(this,qV,[1,0,0,-1,-V,W+Q]),b(this,fV,d),b(this,PV,Q),m(c=jl,CU,$s).call(c),aF(U,Z),F(this,fd).promise.finally(()=>{F(jl,QQ).delete(this),b(this,td,null),b(this,dQ,null)}).catch(()=>{})}static get fontFamilyMap(){const{isWindows:l,isFirefox:U}=bU.platform;return _(this,"fontFamilyMap",new Map([["sans-serif",`${l&&U?"Calibri, ":""}sans-serif`],["monospace",`${l&&U?"Lucida Console, ":""}monospace`]]))}render(){const l=()=>{F(this,KF).read().then(({value:U,done:Z})=>{if(Z){F(this,fd).resolve();return}F(this,gF)??b(this,gF,U.lang),Object.assign(F(this,dQ),U.styles),m(this,Rd,_s).call(this,U.items),l()},F(this,fd).reject)};return b(this,KF,F(this,FQ).getReader()),F(jl,QQ).add(this),l(),F(this,fd).promise}update({viewport:l,onBefore:U=null}){var Q;const Z=l.scale*(globalThis.devicePixelRatio||1),d=l.rotation;if(d!==F(this,ZQ)&&(U==null||U(),b(this,ZQ,d),aF(F(this,UQ),{rotation:d})),Z!==F(this,Ad)){U==null||U(),b(this,Ad,Z);const V={div:null,properties:null,ctx:m(Q=jl,CU,Ac).call(Q,F(this,gF))};for(const W of F(this,HF))V.properties=F(this,_V).get(W),V.div=W,m(this,Rd,oR).call(this,V)}}cancel(){var U;const l=new Ld("TextLayer task cancelled.");(U=F(this,KF))==null||U.cancel(l).catch(()=>{}),b(this,KF,null),F(this,fd).reject(l)}get textDivs(){return F(this,HF)}get textContentItemsStr(){return F(this,AV)}static cleanup(){if(!(F(this,QQ).size>0)){F(this,vF).clear();for(const{canvas:l}of F(this,PF).values())l.remove();F(this,PF).clear()}}};fd=new WeakMap,uU=new WeakMap,HV=new WeakMap,vV=new WeakMap,gF=new WeakMap,td=new WeakMap,PV=new WeakMap,fV=new WeakMap,KF=new WeakMap,UQ=new WeakMap,ZQ=new WeakMap,Ad=new WeakMap,dQ=new WeakMap,AV=new WeakMap,FQ=new WeakMap,HF=new WeakMap,_V=new WeakMap,qV=new WeakMap,vF=new WeakMap,PF=new WeakMap,$V=new WeakMap,_d=new WeakMap,QQ=new WeakMap,Rd=new WeakSet,_s=function(l){var d,Q;if(F(this,HV))return;(Q=F(this,td)).ctx??(Q.ctx=m(d=jl,CU,Ac).call(d,F(this,gF)));const U=F(this,HF),Z=F(this,AV);for(const V of l){if(U.length>Za){P("Ignoring additional textDivs for performance reasons."),b(this,HV,!0);return}if(V.str===void 0){if(V.type==="beginMarkedContentProps"||V.type==="beginMarkedContent"){const W=F(this,uU);b(this,uU,document.createElement("span")),F(this,uU).classList.add("markedContent"),V.id!==null&&F(this,uU).setAttribute("id",`${V.id}`),W.append(F(this,uU))}else V.type==="endMarkedContent"&&b(this,uU,F(this,uU).parentNode);continue}Z.push(V.str),m(this,Rd,qs).call(this,V)}},qs=function(l){var M;const U=document.createElement("span"),Z={angle:0,canvasWidth:0,hasText:l.str!=="",hasEOL:l.hasEOL,fontSize:0};F(this,HF).push(U);const d=C.transform(F(this,qV),l.transform);let Q=Math.atan2(d[1],d[0]);const V=F(this,dQ)[l.fontName];V.vertical&&(Q+=Math.PI/2);let W=F(this,vV)&&V.fontSubstitution||V.fontFamily;W=jl.fontFamilyMap.get(W)||W;const c=Math.hypot(d[2],d[3]),t=c*m(M=jl,CU,ln).call(M,W,F(this,gF));let R,s;Q===0?(R=d[4],s=d[5]-t):(R=d[4]+t*Math.sin(Q),s=d[5]-t*Math.cos(Q));const n="calc(var(--scale-factor)*",a=U.style;F(this,uU)===F(this,UQ)?(a.left=`${(100*R/F(this,fV)).toFixed(2)}%`,a.top=`${(100*s/F(this,PV)).toFixed(2)}%`):(a.left=`${n}${R.toFixed(2)}px)`,a.top=`${n}${s.toFixed(2)}px)`),a.fontSize=`${n}${(F(jl,_d)*c).toFixed(2)}px)`,a.fontFamily=W,Z.fontSize=c,U.setAttribute("role","presentation"),U.textContent=l.str,U.dir=l.dir,F(this,vV)&&(U.dataset.fontName=V.fontSubstitutionLoadedName||l.fontName),Q!==0&&(Z.angle=Q*(180/Math.PI));let i=!1;if(l.str.length>1)i=!0;else if(l.str!==" "&&l.transform[0]!==l.transform[3]){const G=Math.abs(l.transform[0]),J=Math.abs(l.transform[3]);G!==J&&Math.max(G,J)/Math.min(G,J)>1.5&&(i=!0)}if(i&&(Z.canvasWidth=V.vertical?l.height:l.width),F(this,_V).set(U,Z),F(this,td).div=U,F(this,td).properties=Z,m(this,Rd,oR).call(this,F(this,td)),Z.hasText&&F(this,uU).append(U),Z.hasEOL){const G=document.createElement("br");G.setAttribute("role","presentation"),F(this,uU).append(G)}},oR=function(l){var W;const{div:U,properties:Z,ctx:d}=l,{style:Q}=U;let V="";if(F(jl,_d)>1&&(V=`scale(${1/F(jl,_d)})`),Z.canvasWidth!==0&&Z.hasText){const{fontFamily:c}=Q,{canvasWidth:t,fontSize:R}=Z;m(W=jl,CU,kR).call(W,d,R*F(this,Ad),c);const{width:s}=d.measureText(U.textContent);s>0&&(V=`scaleX(${t*F(this,Ad)/s}) ${V}`)}Z.angle!==0&&(V=`rotate(${Z.angle}deg) ${V}`),V.length>0&&(Q.transform=V)},CU=new WeakSet,Ac=function(l=null){let U=F(this,PF).get(l||(l=""));if(!U){const Z=document.createElement("canvas");Z.className="hiddenCanvasElement",Z.lang=l,document.body.append(Z),U=Z.getContext("2d",{alpha:!1,willReadFrequently:!0}),F(this,PF).set(l,U),F(this,$V).set(U,{size:0,family:""})}return U},kR=function(l,U,Z){const d=F(this,$V).get(l);U===d.size&&Z===d.family||(l.font=`${U}px ${Z}`,d.size=U,d.family=Z)},$s=function(){if(F(this,_d)!==null)return;const l=document.createElement("div");l.style.opacity=0,l.style.lineHeight=1,l.style.fontSize="1px",l.style.position="absolute",l.textContent="X",document.body.append(l),b(this,_d,l.getBoundingClientRect().height),l.remove()},ln=function(l,U){const Z=F(this,vF).get(l);if(Z)return Z;const d=m(this,CU,Ac).call(this,U);d.canvas.width=d.canvas.height=eU,m(this,CU,kR).call(this,d,eU,l);const Q=d.measureText("");let V=Q.fontBoundingBoxAscent,W=Math.abs(Q.fontBoundingBoxDescent);if(V){const R=V/(V+W);return F(this,vF).set(l,R),d.canvas.width=d.canvas.height=0,R}d.strokeStyle="red",d.clearRect(0,0,eU,eU),d.strokeText("g",0,0);let c=d.getImageData(0,0,eU,eU).data;W=0;for(let R=c.length-1-3;R>=0;R-=4)if(c[R]>0){W=Math.ceil(R/4/eU);break}d.clearRect(0,0,eU,eU),d.strokeText("A",0,eU),c=d.getImageData(0,0,eU,eU).data,V=0;for(let R=0,s=c.length;R<s;R+=4)if(c[R]>0){V=eU-Math.floor(R/4/eU);break}d.canvas.width=d.canvas.height=0;const t=V?V/(V+W):da;return F(this,vF).set(l,t),t},h(jl,CU),h(jl,vF,new Map),h(jl,PF,new Map),h(jl,$V,new WeakMap),h(jl,_d,null),h(jl,QQ,new Set);let VV=jl;class WV{static textContent(l){const U=[],Z={items:U,styles:Object.create(null)};function d(Q){var c;if(!Q)return;let V=null;const W=Q.name;if(W==="#text")V=Q.value;else if(WV.shouldBuildText(W))(c=Q==null?void 0:Q.attributes)!=null&&c.textContent?V=Q.attributes.textContent:Q.value&&(V=Q.value);else return;if(V!==null&&U.push({str:V}),!!Q.children)for(const t of Q.children)d(t)}return d(l),Z}static shouldBuildText(l){return!(l==="textarea"||l==="input"||l==="option"||l==="select")}}const Fa=65536,Qa=100,Va=5e3,Wa=FU?Gb:ib,ca=FU?Tb:iN,ta=FU?Jb:Mb,Ra=FU?Sb:GN;function Na(N={}){typeof N=="string"||N instanceof URL?N={url:N}:(N instanceof ArrayBuffer||ArrayBuffer.isView(N))&&(N={data:N});const l=new wt,{docId:U}=l,Z=N.url?sa(N.url):null,d=N.data?na(N.data):null,Q=N.httpHeaders||null,V=N.withCredentials===!0,W=N.password??null,c=N.range instanceof jN?N.range:null,t=Number.isInteger(N.rangeChunkSize)&&N.rangeChunkSize>0?N.rangeChunkSize:Fa;let R=N.worker instanceof o0?N.worker:null;const s=N.verbosity,n=typeof N.docBaseUrl=="string"&&!Qc(N.docBaseUrl)?N.docBaseUrl:null,a=typeof N.cMapUrl=="string"?N.cMapUrl:null,i=N.cMapPacked!==!1,M=N.CMapReaderFactory||ca,G=typeof N.standardFontDataUrl=="string"?N.standardFontDataUrl:null,J=N.StandardFontDataFactory||Ra,S=N.stopAtErrors!==!0,X=Number.isInteger(N.maxImageSize)&&N.maxImageSize>-1?N.maxImageSize:-1,Y=N.isEvalSupported!==!1,B=typeof N.isOffscreenCanvasSupported=="boolean"?N.isOffscreenCanvasSupported:!FU,p=typeof N.isImageDecoderSupported=="boolean"?N.isImageDecoderSupported:!FU&&(bU.platform.isFirefox||!globalThis.chrome),e=Number.isInteger(N.canvasMaxAreaInBytes)?N.canvasMaxAreaInBytes:-1,o=typeof N.disableFontFace=="boolean"?N.disableFontFace:FU,w=N.fontExtraProperties===!0,f=N.enableXfa===!0,r=N.ownerDocument||globalThis.document,hl=N.disableRange===!0,cl=N.disableStream===!0,$=N.disableAutoFetch===!0,ol=N.pdfBug===!0,k=N.CanvasFactory||Wa,x=N.FilterFactory||ta,sU=N.enableHWA===!0,fU=c?c.length:N.length??NaN,WZ=typeof N.useSystemFonts=="boolean"?N.useSystemFonts:!FU&&!o,GU=typeof N.useWorkerFetch=="boolean"?N.useWorkerFetch:M===iN&&J===GN&&a&&G&&ZV(a,document.baseURI)&&ZV(G,document.baseURI),gl=null;An(s);const ul={canvasFactory:new k({ownerDocument:r,enableHWA:sU}),filterFactory:new x({docId:U,ownerDocument:r}),cMapReaderFactory:GU?null:new M({baseUrl:a,isCompressed:i}),standardFontDataFactory:GU?null:new J({baseUrl:G})};if(!R){const _l={verbosity:s,port:AZ.workerPort};R=_l.port?o0.fromPort(_l):new o0(_l),l._worker=R}const sF={docId:U,apiVersion:"4.10.38",data:d,password:W,disableAutoFetch:$,rangeChunkSize:t,length:fU,docBaseUrl:n,enableXfa:f,evaluatorOptions:{maxImageSize:X,disableFontFace:o,ignoreErrors:S,isEvalSupported:Y,isOffscreenCanvasSupported:B,isImageDecoderSupported:p,canvasMaxAreaInBytes:e,fontExtraProperties:w,useSystemFonts:WZ,cMapUrl:GU?a:null,standardFontDataUrl:GU?G:null}},B0={disableFontFace:o,fontExtraProperties:w,ownerDocument:r,pdfBug:ol,styleElement:gl,loadingParams:{disableAutoFetch:$,enableXfa:f}};return R.promise.then(function(){if(l.destroyed)throw new Error("Loading aborted");if(R.destroyed)throw new Error("Worker was destroyed");const _l=R.messageHandler.sendWithPromise("GetDocRequest",sF,d?[d.buffer]:null);let bl;if(c)bl=new xb(c,{disableRange:hl,disableStream:cl});else if(!d){if(!Z)throw new Error("getDocument - no `url` parameter provided.");let BZ;if(FU)if(ZV(Z)){if(typeof fetch>"u"||typeof Response>"u"||!("body"in Response.prototype))throw new Error("getDocument - the Fetch API was disabled in Node.js, see `--no-experimental-fetch`.");BZ=wN}else BZ=$b;else BZ=ZV(Z)?wN:Pb;bl=new BZ({url:Z,length:fU,httpHeaders:Q,withCredentials:V,rangeChunkSize:t,disableRange:hl,disableStream:cl})}return _l.then(BZ=>{if(l.destroyed)throw new Error("Loading aborted");if(R.destroyed)throw new Error("Worker was destroyed");const jQ=new FV(U,BZ,R.port),OQ=new ma(jQ,l,bl,B0,ul);l._transport=OQ,jQ.send("Ready",null)})}).catch(l._capability.reject),l}function sa(N){if(N instanceof URL)return N.href;try{return new URL(N,window.location).href}catch{if(FU&&typeof N=="string")return N}throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.")}function na(N){if(FU&&typeof Buffer<"u"&&N instanceof Buffer)throw new Error("Please provide binary data as `Uint8Array`, rather than `Buffer`.");if(N instanceof Uint8Array&&N.byteLength===N.buffer.byteLength)return N;if(typeof N=="string")return dc(N);if(N instanceof ArrayBuffer||ArrayBuffer.isView(N)||typeof N=="object"&&!isNaN(N==null?void 0:N.length))return new Uint8Array(N);throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.")}function xN(N){return typeof N=="object"&&Number.isInteger(N==null?void 0:N.num)&&N.num>=0&&Number.isInteger(N==null?void 0:N.gen)&&N.gen>=0}const pc=class pc{constructor(){this._capability=Promise.withResolvers(),this._transport=null,this._worker=null,this.docId=`d${SU(pc,ec)._++}`,this.destroyed=!1,this.onPassword=null,this.onProgress=null}get promise(){return this._capability.promise}async destroy(){var l,U,Z,d;this.destroyed=!0;try{(l=this._worker)!=null&&l.port&&(this._worker._pendingDestroy=!0),await((U=this._transport)==null?void 0:U.destroy())}catch(Q){throw(Z=this._worker)!=null&&Z.port&&delete this._worker._pendingDestroy,Q}this._transport=null,(d=this._worker)==null||d.destroy(),this._worker=null}};ec=new WeakMap,h(pc,ec,0);let wt=pc;class jN{constructor(l,U,Z=!1,d=null){this.length=l,this.initialData=U,this.progressiveDone=Z,this.contentDispositionFilename=d,this._rangeListeners=[],this._progressListeners=[],this._progressiveReadListeners=[],this._progressiveDoneListeners=[],this._readyCapability=Promise.withResolvers()}addRangeListener(l){this._rangeListeners.push(l)}addProgressListener(l){this._progressListeners.push(l)}addProgressiveReadListener(l){this._progressiveReadListeners.push(l)}addProgressiveDoneListener(l){this._progressiveDoneListeners.push(l)}onDataRange(l,U){for(const Z of this._rangeListeners)Z(l,U)}onDataProgress(l,U){this._readyCapability.promise.then(()=>{for(const Z of this._progressListeners)Z(l,U)})}onDataProgressiveRead(l){this._readyCapability.promise.then(()=>{for(const U of this._progressiveReadListeners)U(l)})}onDataProgressiveDone(){this._readyCapability.promise.then(()=>{for(const l of this._progressiveDoneListeners)l()})}transportReady(){this._readyCapability.resolve()}requestDataRange(l,U){al("Abstract method PDFDataRangeTransport.requestDataRange")}abort(){}}class ba{constructor(l,U){this._pdfInfo=l,this._transport=U}get annotationStorage(){return this._transport.annotationStorage}get canvasFactory(){return this._transport.canvasFactory}get filterFactory(){return this._transport.filterFactory}get numPages(){return this._pdfInfo.numPages}get fingerprints(){return this._pdfInfo.fingerprints}get isPureXfa(){return _(this,"isPureXfa",!!this._transport._htmlForXfa)}get allXfaHtml(){return this._transport._htmlForXfa}getPage(l){return this._transport.getPage(l)}getPageIndex(l){return this._transport.getPageIndex(l)}getDestinations(){return this._transport.getDestinations()}getDestination(l){return this._transport.getDestination(l)}getPageLabels(){return this._transport.getPageLabels()}getPageLayout(){return this._transport.getPageLayout()}getPageMode(){return this._transport.getPageMode()}getViewerPreferences(){return this._transport.getViewerPreferences()}getOpenAction(){return this._transport.getOpenAction()}getAttachments(){return this._transport.getAttachments()}getJSActions(){return this._transport.getDocJSActions()}getOutline(){return this._transport.getOutline()}getOptionalContentConfig({intent:l="display"}={}){const{renderingIntent:U}=this._transport.getRenderingIntent(l);return this._transport.getOptionalContentConfig(U)}getPermissions(){return this._transport.getPermissions()}getMetadata(){return this._transport.getMetadata()}getMarkInfo(){return this._transport.getMarkInfo()}getData(){return this._transport.getData()}saveDocument(){return this._transport.saveDocument()}getDownloadInfo(){return this._transport.downloadInfoCapability.promise}cleanup(l=!1){return this._transport.startCleanup(l||this.isPureXfa)}destroy(){return this.loadingTask.destroy()}cachedPageNumber(l){return this._transport.cachedPageNumber(l)}get loadingParams(){return this._transport.loadingParams}get loadingTask(){return this._transport.loadingTask}getFieldObjects(){return this._transport.getFieldObjects()}hasJSActions(){return this._transport.hasJSActions()}getCalculationOrderIds(){return this._transport.getCalculationOrderIds()}}class aa{constructor(l,U,Z,d=!1){h(this,UZ);h(this,qd,null);h(this,Nd,!1);this._pageIndex=l,this._pageInfo=U,this._transport=Z,this._stats=d?new NN:null,this._pdfBug=d,this.commonObjs=Z.commonObjs,this.objs=new ON,this._maybeCleanupAfterRender=!1,this._intentStates=new Map,this.destroyed=!1}get pageNumber(){return this._pageIndex+1}get rotate(){return this._pageInfo.rotate}get ref(){return this._pageInfo.ref}get userUnit(){return this._pageInfo.userUnit}get view(){return this._pageInfo.view}getViewport({scale:l,rotation:U=this.rotate,offsetX:Z=0,offsetY:d=0,dontFlip:Q=!1}={}){return new UV({viewBox:this.view,userUnit:this.userUnit,scale:l,rotation:U,offsetX:Z,offsetY:d,dontFlip:Q})}getAnnotations({intent:l="display"}={}){const{renderingIntent:U}=this._transport.getRenderingIntent(l);return this._transport.getAnnotations(this._pageIndex,U)}getJSActions(){return this._transport.getPageJSActions(this._pageIndex)}get filterFactory(){return this._transport.filterFactory}get isPureXfa(){return _(this,"isPureXfa",!!this._transport._htmlForXfa)}async getXfa(){var l;return((l=this._transport._htmlForXfa)==null?void 0:l.children[this._pageIndex])||null}render({canvasContext:l,viewport:U,intent:Z="display",annotationMode:d=yd.ENABLE,transform:Q=null,background:V=null,optionalContentConfigPromise:W=null,annotationCanvasMap:c=null,pageColors:t=null,printAnnotationStorage:R=null,isEditing:s=!1}){var Y,B;(Y=this._stats)==null||Y.time("Overall");const n=this._transport.getRenderingIntent(Z,d,R,s),{renderingIntent:a,cacheKey:i}=n;b(this,Nd,!1),m(this,UZ,_c).call(this),W||(W=this._transport.getOptionalContentConfig(a));let M=this._intentStates.get(i);M||(M=Object.create(null),this._intentStates.set(i,M)),M.streamReaderCancelTimeout&&(clearTimeout(M.streamReaderCancelTimeout),M.streamReaderCancelTimeout=null);const G=!!(a&oU.PRINT);M.displayReadyCapability||(M.displayReadyCapability=Promise.withResolvers(),M.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},(B=this._stats)==null||B.time("Page Request"),this._pumpOperatorList(n));const J=p=>{var e;M.renderTasks.delete(S),(this._maybeCleanupAfterRender||G)&&b(this,Nd,!0),m(this,UZ,PQ).call(this,!G),p?(S.capability.reject(p),this._abortOperatorList({intentState:M,reason:p instanceof Error?p:new Error(p)})):S.capability.resolve(),this._stats&&(this._stats.timeEnd("Rendering"),this._stats.timeEnd("Overall"),(e=globalThis.Stats)!=null&&e.enabled&&globalThis.Stats.add(this.pageNumber,this._stats))},S=new xt({callback:J,params:{canvasContext:l,viewport:U,transform:Q,background:V},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:c,operatorList:M.operatorList,pageIndex:this._pageIndex,canvasFactory:this._transport.canvasFactory,filterFactory:this._transport.filterFactory,useRequestAnimationFrame:!G,pdfBug:this._pdfBug,pageColors:t});(M.renderTasks||(M.renderTasks=new Set)).add(S);const X=S.task;return Promise.all([M.displayReadyCapability.promise,W]).then(([p,e])=>{var o;if(this.destroyed){J();return}if((o=this._stats)==null||o.time("Rendering"),!(e.renderingIntent&a))throw new Error("Must use the same `intent`-argument when calling the `PDFPageProxy.render` and `PDFDocumentProxy.getOptionalContentConfig` methods.");S.initializeGraphics({transparency:p,optionalContentConfig:e}),S.operatorListChanged()}).catch(J),X}getOperatorList({intent:l="display",annotationMode:U=yd.ENABLE,printAnnotationStorage:Z=null,isEditing:d=!1}={}){var t;function Q(){W.operatorList.lastChunk&&(W.opListReadCapability.resolve(W.operatorList),W.renderTasks.delete(c))}const V=this._transport.getRenderingIntent(l,U,Z,d,!0);let W=this._intentStates.get(V.cacheKey);W||(W=Object.create(null),this._intentStates.set(V.cacheKey,W));let c;return W.opListReadCapability||(c=Object.create(null),c.operatorListChanged=Q,W.opListReadCapability=Promise.withResolvers(),(W.renderTasks||(W.renderTasks=new Set)).add(c),W.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},(t=this._stats)==null||t.time("Page Request"),this._pumpOperatorList(V)),W.opListReadCapability.promise}streamTextContent({includeMarkedContent:l=!1,disableNormalization:U=!1}={}){return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,includeMarkedContent:l===!0,disableNormalization:U===!0},{highWaterMark:100,size(d){return d.items.length}})}getTextContent(l={}){if(this._transport._htmlForXfa)return this.getXfa().then(Z=>WV.textContent(Z));const U=this.streamTextContent(l);return new Promise(function(Z,d){function Q(){V.read().then(function({value:c,done:t}){if(t){Z(W);return}W.lang??(W.lang=c.lang),Object.assign(W.styles,c.styles),W.items.push(...c.items),Q()},d)}const V=U.getReader(),W={items:[],styles:Object.create(null),lang:null};Q()})}getStructTree(){return this._transport.getStructTree(this._pageIndex)}_destroy(){this.destroyed=!0;const l=[];for(const U of this._intentStates.values())if(this._abortOperatorList({intentState:U,reason:new Error("Page was destroyed."),force:!0}),!U.opListReadCapability)for(const Z of U.renderTasks)l.push(Z.completed),Z.cancel();return this.objs.clear(),b(this,Nd,!1),m(this,UZ,_c).call(this),Promise.all(l)}cleanup(l=!1){b(this,Nd,!0);const U=m(this,UZ,PQ).call(this,!1);return l&&U&&this._stats&&(this._stats=new NN),U}_startRenderPage(l,U){var d,Q;const Z=this._intentStates.get(U);Z&&((d=this._stats)==null||d.timeEnd("Page Request"),(Q=Z.displayReadyCapability)==null||Q.resolve(l))}_renderPageChunk(l,U){for(let Z=0,d=l.length;Z<d;Z++)U.operatorList.fnArray.push(l.fnArray[Z]),U.operatorList.argsArray.push(l.argsArray[Z]);U.operatorList.lastChunk=l.lastChunk,U.operatorList.separateAnnots=l.separateAnnots;for(const Z of U.renderTasks)Z.operatorListChanged();l.lastChunk&&m(this,UZ,PQ).call(this,!0)}_pumpOperatorList({renderingIntent:l,cacheKey:U,annotationStorageSerializable:Z,modifiedIds:d}){const{map:Q,transfer:V}=Z,c=this._transport.messageHandler.sendWithStream("GetOperatorList",{pageIndex:this._pageIndex,intent:l,cacheKey:U,annotationStorage:Q,modifiedIds:d},V).getReader(),t=this._intentStates.get(U);t.streamReader=c;const R=()=>{c.read().then(({value:s,done:n})=>{if(n){t.streamReader=null;return}this._transport.destroyed||(this._renderPageChunk(s,t),R())},s=>{if(t.streamReader=null,!this._transport.destroyed){if(t.operatorList){t.operatorList.lastChunk=!0;for(const n of t.renderTasks)n.operatorListChanged();m(this,UZ,PQ).call(this,!0)}if(t.displayReadyCapability)t.displayReadyCapability.reject(s);else if(t.opListReadCapability)t.opListReadCapability.reject(s);else throw s}})};R()}_abortOperatorList({intentState:l,reason:U,force:Z=!1}){if(l.streamReader){if(l.streamReaderCancelTimeout&&(clearTimeout(l.streamReaderCancelTimeout),l.streamReaderCancelTimeout=null),!Z){if(l.renderTasks.size>0)return;if(U instanceof St){let d=Qa;U.extraDelay>0&&U.extraDelay<1e3&&(d+=U.extraDelay),l.streamReaderCancelTimeout=setTimeout(()=>{l.streamReaderCancelTimeout=null,this._abortOperatorList({intentState:l,reason:U,force:!0})},d);return}}if(l.streamReader.cancel(new Ld(U.message)).catch(()=>{}),l.streamReader=null,!this._transport.destroyed){for(const[d,Q]of this._intentStates)if(Q===l){this._intentStates.delete(d);break}this.cleanup()}}}get stats(){return this._stats}}qd=new WeakMap,Nd=new WeakMap,UZ=new WeakSet,PQ=function(l=!1){if(m(this,UZ,_c).call(this),!F(this,Nd)||this.destroyed)return!1;if(l)return b(this,qd,setTimeout(()=>{b(this,qd,null),m(this,UZ,PQ).call(this,!1)},Va)),!1;for(const{renderTasks:U,operatorList:Z}of this._intentStates.values())if(U.size>0||!Z.lastChunk)return!1;return this._intentStates.clear(),this.objs.clear(),b(this,Nd,!1),!0},_c=function(){F(this,qd)&&(clearTimeout(F(this,qd)),b(this,qd,null))};class ha{constructor(){h(this,sd,new Map);h(this,uc,Promise.resolve())}postMessage(l,U){const Z={data:structuredClone(l,U?{transfer:U}:null)};F(this,uc).then(()=>{for(const[d]of F(this,sd))d.call(this,Z)})}addEventListener(l,U,Z=null){let d=null;if((Z==null?void 0:Z.signal)instanceof AbortSignal){const{signal:Q}=Z;if(Q.aborted){P("LoopbackPort - cannot use an `aborted` signal.");return}const V=()=>this.removeEventListener(l,U);d=()=>Q.removeEventListener("abort",V),Q.addEventListener("abort",V)}F(this,sd).set(U,d)}removeEventListener(l,U){const Z=F(this,sd).get(U);Z==null||Z(),F(this,sd).delete(U)}terminate(){for(const[,l]of F(this,sd))l==null||l();F(this,sd).clear()}}sd=new WeakMap,uc=new WeakMap;const Gl=class Gl{constructor({name:l=null,port:U=null,verbosity:Z=_n()}={}){h(this,VQ);var d;if(this.name=l,this.destroyed=!1,this.verbosity=Z,this._readyCapability=Promise.withResolvers(),this._port=null,this._webWorker=null,this._messageHandler=null,U){if((d=F(Gl,AF))!=null&&d.has(U))throw new Error("Cannot use more than one PDFWorker per port.");(F(Gl,AF)||b(Gl,AF,new WeakMap)).set(U,this),this._initializeFromPort(U);return}this._initialize()}get promise(){return this._readyCapability.promise}get port(){return this._port}get messageHandler(){return this._messageHandler}_initializeFromPort(l){this._port=l,this._messageHandler=new FV("main","worker",l),this._messageHandler.on("ready",function(){}),m(this,VQ,qc).call(this)}_initialize(){if(F(Gl,fF)||F(Gl,WQ,$c)){this._setupFakeWorker();return}let{workerSrc:l}=Gl;try{Gl._isSameOrigin(window.location.href,l)||(l=Gl._createCDNWrapper(new URL(l,window.location).href));const U=new Worker(l,{type:"module"}),Z=new FV("main","worker",U),d=()=>{Q.abort(),Z.destroy(),U.terminate(),this.destroyed?this._readyCapability.reject(new Error("Worker was destroyed")):this._setupFakeWorker()},Q=new AbortController;U.addEventListener("error",()=>{this._webWorker||d()},{signal:Q.signal}),Z.on("test",W=>{if(Q.abort(),this.destroyed||!W){d();return}this._messageHandler=Z,this._port=U,this._webWorker=U,m(this,VQ,qc).call(this)}),Z.on("ready",W=>{if(Q.abort(),this.destroyed){d();return}try{V()}catch{this._setupFakeWorker()}});const V=()=>{const W=new Uint8Array;Z.send("test",W,[W.buffer])};V();return}catch{Uc("The worker has been disabled.")}this._setupFakeWorker()}_setupFakeWorker(){F(Gl,fF)||(P("Setting up fake worker."),b(Gl,fF,!0)),Gl._setupFakeWorkerGlobal.then(l=>{if(this.destroyed){this._readyCapability.reject(new Error("Worker was destroyed"));return}const U=new ha;this._port=U;const Z=`fake${SU(Gl,yc)._++}`,d=new FV(Z+"_worker",Z,U);l.setup(d,U),this._messageHandler=new FV(Z,Z+"_worker",U),m(this,VQ,qc).call(this)}).catch(l=>{this._readyCapability.reject(new Error(`Setting up fake worker failed: "${l.message}".`))})}destroy(){var l,U,Z;this.destroyed=!0,(l=this._webWorker)==null||l.terminate(),this._webWorker=null,(U=F(Gl,AF))==null||U.delete(this._port),this._port=null,(Z=this._messageHandler)==null||Z.destroy(),this._messageHandler=null}static fromPort(l){var Z;if(!(l!=null&&l.port))throw new Error("PDFWorker.fromPort - invalid method signature.");const U=(Z=F(this,AF))==null?void 0:Z.get(l.port);if(U){if(U._pendingDestroy)throw new Error("PDFWorker.fromPort - the worker is being destroyed.\nPlease remember to await `PDFDocumentLoadingTask.destroy()`-calls.");return U}return new Gl(l)}static get workerSrc(){if(AZ.workerSrc)return AZ.workerSrc;throw new Error('No "GlobalWorkerOptions.workerSrc" specified.')}static get _setupFakeWorkerGlobal(){return _(this,"_setupFakeWorkerGlobal",(async()=>F(this,WQ,$c)?F(this,WQ,$c):(await import(this.workerSrc)).WorkerMessageHandler)())}};yc=new WeakMap,fF=new WeakMap,AF=new WeakMap,VQ=new WeakSet,qc=function(){this._readyCapability.resolve(),this._messageHandler.send("configure",{verbosity:this.verbosity})},WQ=new WeakSet,$c=function(){var l;try{return((l=globalThis.pdfjsWorker)==null?void 0:l.WorkerMessageHandler)||null}catch{return null}},h(Gl,WQ),h(Gl,yc,0),h(Gl,fF,!1),h(Gl,AF),FU&&(b(Gl,fF,!0),AZ.workerSrc||(AZ.workerSrc="./pdf.worker.mjs")),Gl._isSameOrigin=(l,U)=>{let Z;try{if(Z=new URL(l),!Z.origin||Z.origin==="null")return!1}catch{return!1}const d=new URL(U,Z);return Z.origin===d.origin},Gl._createCDNWrapper=l=>{const U=`await import("${l}");`;return URL.createObjectURL(new Blob([U],{type:"text/javascript"}))};let o0=Gl;class ma{constructor(l,U,Z,d,Q){h(this,_F);h(this,nd,new Map);h(this,CZ,new Map);h(this,cQ,new Map);h(this,tQ,new Map);h(this,bd,null);this.messageHandler=l,this.loadingTask=U,this.commonObjs=new ON,this.fontLoader=new hb({ownerDocument:d.ownerDocument,styleElement:d.styleElement}),this.loadingParams=d.loadingParams,this._params=d,this.canvasFactory=Q.canvasFactory,this.filterFactory=Q.filterFactory,this.cMapReaderFactory=Q.cMapReaderFactory,this.standardFontDataFactory=Q.standardFontDataFactory,this.destroyed=!1,this.destroyCapability=null,this._networkStream=Z,this._fullReader=null,this._lastProgress=null,this.downloadInfoCapability=Promise.withResolvers(),this.setupMessageHandler()}get annotationStorage(){return _(this,"annotationStorage",new Lt)}getRenderingIntent(l,U=yd.ENABLE,Z=null,d=!1,Q=!1){let V=oU.DISPLAY,W=zt;switch(l){case"any":V=oU.ANY;break;case"display":break;case"print":V=oU.PRINT;break;default:P(`getRenderingIntent - invalid intent: ${l}`)}const c=V&oU.PRINT&&Z instanceof bN?Z:this.annotationStorage;switch(U){case yd.DISABLE:V+=oU.ANNOTATIONS_DISABLE;break;case yd.ENABLE:break;case yd.ENABLE_FORMS:V+=oU.ANNOTATIONS_FORMS;break;case yd.ENABLE_STORAGE:V+=oU.ANNOTATIONS_STORAGE,W=c.serializable;break;default:P(`getRenderingIntent - invalid annotationMode: ${U}`)}d&&(V+=oU.IS_EDITING),Q&&(V+=oU.OPLIST);const{ids:t,hash:R}=c.modifiedIds,s=[V,W.hash,R];return{renderingIntent:V,cacheKey:s.join("_"),annotationStorageSerializable:W,modifiedIds:t}}destroy(){var Z;if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0,this.destroyCapability=Promise.withResolvers(),(Z=F(this,bd))==null||Z.reject(new Error("Worker was destroyed during onPassword callback"));const l=[];for(const d of F(this,CZ).values())l.push(d._destroy());F(this,CZ).clear(),F(this,cQ).clear(),F(this,tQ).clear(),this.hasOwnProperty("annotationStorage")&&this.annotationStorage.resetModified();const U=this.messageHandler.sendWithPromise("Terminate",null);return l.push(U),Promise.all(l).then(()=>{var d,Q;this.commonObjs.clear(),this.fontLoader.clear(),F(this,nd).clear(),this.filterFactory.destroy(),VV.cleanup(),(d=this._networkStream)==null||d.cancelAllRequests(new Ld("Worker was terminated.")),(Q=this.messageHandler)==null||Q.destroy(),this.messageHandler=null,this.destroyCapability.resolve()},this.destroyCapability.reject),this.destroyCapability.promise}setupMessageHandler(){const{messageHandler:l,loadingTask:U}=this;l.on("GetReader",(Z,d)=>{Dl(this._networkStream,"GetReader - no `IPDFStream` instance available."),this._fullReader=this._networkStream.getFullReader(),this._fullReader.onProgress=Q=>{this._lastProgress={loaded:Q.loaded,total:Q.total}},d.onPull=()=>{this._fullReader.read().then(function({value:Q,done:V}){if(V){d.close();return}Dl(Q instanceof ArrayBuffer,"GetReader - expected an ArrayBuffer."),d.enqueue(new Uint8Array(Q),1,[Q])}).catch(Q=>{d.error(Q)})},d.onCancel=Q=>{this._fullReader.cancel(Q),d.ready.catch(V=>{if(!this.destroyed)throw V})}}),l.on("ReaderHeadersReady",async Z=>{var W;await this._fullReader.headersReady;const{isStreamingSupported:d,isRangeSupported:Q,contentLength:V}=this._fullReader;return(!d||!Q)&&(this._lastProgress&&((W=U.onProgress)==null||W.call(U,this._lastProgress)),this._fullReader.onProgress=c=>{var t;(t=U.onProgress)==null||t.call(U,{loaded:c.loaded,total:c.total})}),{isStreamingSupported:d,isRangeSupported:Q,contentLength:V}}),l.on("GetRangeReader",(Z,d)=>{Dl(this._networkStream,"GetRangeReader - no `IPDFStream` instance available.");const Q=this._networkStream.getRangeReader(Z.begin,Z.end);if(!Q){d.close();return}d.onPull=()=>{Q.read().then(function({value:V,done:W}){if(W){d.close();return}Dl(V instanceof ArrayBuffer,"GetRangeReader - expected an ArrayBuffer."),d.enqueue(new Uint8Array(V),1,[V])}).catch(V=>{d.error(V)})},d.onCancel=V=>{Q.cancel(V),d.ready.catch(W=>{if(!this.destroyed)throw W})}}),l.on("GetDoc",({pdfInfo:Z})=>{this._numPages=Z.numPages,this._htmlForXfa=Z.htmlForXfa,delete Z.htmlForXfa,U._capability.resolve(new ba(Z,this))}),l.on("DocException",Z=>{U._capability.reject(YU(Z))}),l.on("PasswordRequest",Z=>{b(this,bd,Promise.withResolvers());try{if(!U.onPassword)throw YU(Z);const d=Q=>{Q instanceof Error?F(this,bd).reject(Q):F(this,bd).resolve({password:Q})};U.onPassword(d,Z.code)}catch(d){F(this,bd).reject(d)}return F(this,bd).promise}),l.on("DataLoaded",Z=>{var d;(d=U.onProgress)==null||d.call(U,{loaded:Z.length,total:Z.length}),this.downloadInfoCapability.resolve(Z)}),l.on("StartRenderPage",Z=>{if(this.destroyed)return;F(this,CZ).get(Z.pageIndex)._startRenderPage(Z.transparency,Z.cacheKey)}),l.on("commonobj",([Z,d,Q])=>{var V;if(this.destroyed||this.commonObjs.has(Z))return null;switch(d){case"Font":const{disableFontFace:W,fontExtraProperties:c,pdfBug:t}=this._params;if("error"in Q){const a=Q.error;P(`Error during font loading: ${a}`),this.commonObjs.resolve(Z,a);break}const R=t&&((V=globalThis.FontInspector)!=null&&V.enabled)?(a,i)=>globalThis.FontInspector.fontAdded(a,i):null,s=new mb(Q,{disableFontFace:W,fontExtraProperties:c,inspectFont:R});this.fontLoader.bind(s).catch(()=>l.sendWithPromise("FontFallback",{id:Z})).finally(()=>{!c&&s.data&&(s.data=null),this.commonObjs.resolve(Z,s)});break;case"CopyLocalImage":const{imageRef:n}=Q;Dl(n,"The imageRef must be defined.");for(const a of F(this,CZ).values())for(const[,i]of a.objs)if((i==null?void 0:i.ref)===n)return i.dataLen?(this.commonObjs.resolve(Z,structuredClone(i)),i.dataLen):null;break;case"FontPath":case"Image":case"Pattern":this.commonObjs.resolve(Z,Q);break;default:throw new Error(`Got unknown common object type ${d}`)}return null}),l.on("obj",([Z,d,Q,V])=>{var c;if(this.destroyed)return;const W=F(this,CZ).get(d);if(!W.objs.has(Z)){if(W._intentStates.size===0){(c=V==null?void 0:V.bitmap)==null||c.close();return}switch(Q){case"Image":W.objs.resolve(Z,V),(V==null?void 0:V.dataLen)>Hn&&(W._maybeCleanupAfterRender=!0);break;case"Pattern":W.objs.resolve(Z,V);break;default:throw new Error(`Got unknown object type ${Q}`)}}}),l.on("DocProgress",Z=>{var d;this.destroyed||(d=U.onProgress)==null||d.call(U,{loaded:Z.loaded,total:Z.total})}),l.on("FetchBuiltInCMap",async Z=>{if(this.destroyed)throw new Error("Worker was destroyed.");if(!this.cMapReaderFactory)throw new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.");return this.cMapReaderFactory.fetch(Z)}),l.on("FetchStandardFontData",async Z=>{if(this.destroyed)throw new Error("Worker was destroyed.");if(!this.standardFontDataFactory)throw new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.");return this.standardFontDataFactory.fetch(Z)})}getData(){return this.messageHandler.sendWithPromise("GetData",null)}saveDocument(){var Z;this.annotationStorage.size<=0&&P("saveDocument called while `annotationStorage` is empty, please use the getData-method instead.");const{map:l,transfer:U}=this.annotationStorage.serializable;return this.messageHandler.sendWithPromise("SaveDocument",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:l,filename:((Z=this._fullReader)==null?void 0:Z.filename)??null},U).finally(()=>{this.annotationStorage.resetModified()})}getPage(l){if(!Number.isInteger(l)||l<=0||l>this._numPages)return Promise.reject(new Error("Invalid page request."));const U=l-1,Z=F(this,cQ).get(U);if(Z)return Z;const d=this.messageHandler.sendWithPromise("GetPage",{pageIndex:U}).then(Q=>{if(this.destroyed)throw new Error("Transport destroyed");Q.refStr&&F(this,tQ).set(Q.refStr,l);const V=new aa(U,Q,this,this._params.pdfBug);return F(this,CZ).set(U,V),V});return F(this,cQ).set(U,d),d}getPageIndex(l){return xN(l)?this.messageHandler.sendWithPromise("GetPageIndex",{num:l.num,gen:l.gen}):Promise.reject(new Error("Invalid pageIndex request."))}getAnnotations(l,U){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:l,intent:U})}getFieldObjects(){return m(this,_F,KW).call(this,"GetFieldObjects")}hasJSActions(){return m(this,_F,KW).call(this,"HasJSActions")}getCalculationOrderIds(){return this.messageHandler.sendWithPromise("GetCalculationOrderIds",null)}getDestinations(){return this.messageHandler.sendWithPromise("GetDestinations",null)}getDestination(l){return typeof l!="string"?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:l})}getPageLabels(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}getPageLayout(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}getPageMode(){return this.messageHandler.sendWithPromise("GetPageMode",null)}getViewerPreferences(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}getOpenAction(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}getAttachments(){return this.messageHandler.sendWithPromise("GetAttachments",null)}getDocJSActions(){return m(this,_F,KW).call(this,"GetDocJSActions")}getPageJSActions(l){return this.messageHandler.sendWithPromise("GetPageJSActions",{pageIndex:l})}getStructTree(l){return this.messageHandler.sendWithPromise("GetStructTree",{pageIndex:l})}getOutline(){return this.messageHandler.sendWithPromise("GetOutline",null)}getOptionalContentConfig(l){return m(this,_F,KW).call(this,"GetOptionalContentConfig").then(U=>new wb(U,l))}getPermissions(){return this.messageHandler.sendWithPromise("GetPermissions",null)}getMetadata(){const l="GetMetadata",U=F(this,nd).get(l);if(U)return U;const Z=this.messageHandler.sendWithPromise(l,null).then(d=>{var Q,V;return{info:d[0],metadata:d[1]?new Eb(d[1]):null,contentDispositionFilename:((Q=this._fullReader)==null?void 0:Q.filename)??null,contentLength:((V=this._fullReader)==null?void 0:V.contentLength)??null}});return F(this,nd).set(l,Z),Z}getMarkInfo(){return this.messageHandler.sendWithPromise("GetMarkInfo",null)}async startCleanup(l=!1){if(!this.destroyed){await this.messageHandler.sendWithPromise("Cleanup",null);for(const U of F(this,CZ).values())if(!U.cleanup())throw new Error(`startCleanup: Page ${U.pageNumber} is currently rendering.`);this.commonObjs.clear(),l||this.fontLoader.clear(),F(this,nd).clear(),this.filterFactory.destroy(!0),VV.cleanup()}}cachedPageNumber(l){if(!xN(l))return null;const U=l.gen===0?`${l.num}R`:`${l.num}R${l.gen}`;return F(this,tQ).get(U)??null}}nd=new WeakMap,CZ=new WeakMap,cQ=new WeakMap,tQ=new WeakMap,bd=new WeakMap,_F=new WeakSet,KW=function(l,U=null){const Z=F(this,nd).get(l);if(Z)return Z;const d=this.messageHandler.sendWithPromise(l,U);return F(this,nd).set(l,d),d};const cV=Symbol("INITIAL_DATA");class ON{constructor(){h(this,lW);h(this,wU,Object.create(null))}get(l,U=null){if(U){const d=m(this,lW,DR).call(this,l);return d.promise.then(()=>U(d.data)),null}const Z=F(this,wU)[l];if(!Z||Z.data===cV)throw new Error(`Requesting object that isn't resolved yet ${l}.`);return Z.data}has(l){const U=F(this,wU)[l];return!!U&&U.data!==cV}delete(l){const U=F(this,wU)[l];return!U||U.data===cV?!1:(delete F(this,wU)[l],!0)}resolve(l,U=null){const Z=m(this,lW,DR).call(this,l);Z.data=U,Z.resolve()}clear(){var l;for(const U in F(this,wU)){const{data:Z}=F(this,wU)[U];(l=Z==null?void 0:Z.bitmap)==null||l.close()}b(this,wU,Object.create(null))}*[Symbol.iterator](){for(const l in F(this,wU)){const{data:U}=F(this,wU)[l];U!==cV&&(yield[l,U])}}}wU=new WeakMap,lW=new WeakSet,DR=function(l){var U;return(U=F(this,wU))[l]||(U[l]={...Promise.withResolvers(),data:cV})};class ia{constructor(l){h(this,$d,null);b(this,$d,l),this.onContinue=null}get promise(){return F(this,$d).capability.promise}cancel(l=0){F(this,$d).cancel(null,l)}get separateAnnots(){const{separateAnnots:l}=F(this,$d).operatorList;if(!l)return!1;const{annotationCanvasMap:U}=F(this,$d);return l.form||l.canvas&&(U==null?void 0:U.size)>0}}$d=new WeakMap;const $F=class $F{constructor({callback:l,params:U,objs:Z,commonObjs:d,annotationCanvasMap:Q,operatorList:V,pageIndex:W,canvasFactory:c,filterFactory:t,useRequestAnimationFrame:R=!1,pdfBug:s=!1,pageColors:n=null}){h(this,lF,null);this.callback=l,this.params=U,this.objs=Z,this.commonObjs=d,this.annotationCanvasMap=Q,this.operatorListIdx=null,this.operatorList=V,this._pageIndex=W,this.canvasFactory=c,this.filterFactory=t,this._pdfBug=s,this.pageColors=n,this.running=!1,this.graphicsReadyCallback=null,this.graphicsReady=!1,this._useRequestAnimationFrame=R===!0&&typeof window<"u",this.cancelled=!1,this.capability=Promise.withResolvers(),this.task=new ia(this),this._cancelBound=this.cancel.bind(this),this._continueBound=this._continue.bind(this),this._scheduleNextBound=this._scheduleNext.bind(this),this._nextBound=this._next.bind(this),this._canvas=U.canvasContext.canvas}get completed(){return this.capability.promise.catch(function(){})}initializeGraphics({transparency:l=!1,optionalContentConfig:U}){var W,c;if(this.cancelled)return;if(this._canvas){if(F($F,qF).has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");F($F,qF).add(this._canvas)}this._pdfBug&&((W=globalThis.StepperManager)!=null&&W.enabled)&&(this.stepper=globalThis.StepperManager.create(this._pageIndex),this.stepper.init(this.operatorList),this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint());const{canvasContext:Z,viewport:d,transform:Q,background:V}=this.params;this.gfx=new z0(Z,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:U},this.annotationCanvasMap,this.pageColors),this.gfx.beginDrawing({transform:Q,viewport:d,transparency:l,background:V}),this.operatorListIdx=0,this.graphicsReady=!0,(c=this.graphicsReadyCallback)==null||c.call(this)}cancel(l=null,U=0){var Z;this.running=!1,this.cancelled=!0,(Z=this.gfx)==null||Z.endDrawing(),F(this,lF)&&(window.cancelAnimationFrame(F(this,lF)),b(this,lF,null)),F($F,qF).delete(this._canvas),this.callback(l||new St(`Rendering cancelled, page ${this._pageIndex+1}`,U))}operatorListChanged(){var l;if(!this.graphicsReady){this.graphicsReadyCallback||(this.graphicsReadyCallback=this._continueBound);return}(l=this.stepper)==null||l.updateOperatorList(this.operatorList),!this.running&&this._continue()}_continue(){this.running=!0,!this.cancelled&&(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}_scheduleNext(){this._useRequestAnimationFrame?b(this,lF,window.requestAnimationFrame(()=>{b(this,lF,null),this._nextBound().catch(this._cancelBound)})):Promise.resolve().then(this._nextBound).catch(this._cancelBound)}async _next(){this.cancelled||(this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper),this.operatorListIdx===this.operatorList.argsArray.length&&(this.running=!1,this.operatorList.lastChunk&&(this.gfx.endDrawing(),F($F,qF).delete(this._canvas),this.callback())))}};lF=new WeakMap,qF=new WeakMap,h($F,qF,new WeakSet);let xt=$F;const Ma="4.10.38",Ja="f9bea397f";function rN(N){return Math.floor(Math.max(0,Math.min(1,N))*255).toString(16).padStart(2,"0")}function tV(N){return Math.max(0,Math.min(255,255*N))}class gN{static CMYK_G([l,U,Z,d]){return["G",1-Math.min(1,.3*l+.59*Z+.11*U+d)]}static G_CMYK([l]){return["CMYK",0,0,0,1-l]}static G_RGB([l]){return["RGB",l,l,l]}static G_rgb([l]){return l=tV(l),[l,l,l]}static G_HTML([l]){const U=rN(l);return`#${U}${U}${U}`}static RGB_G([l,U,Z]){return["G",.3*l+.59*U+.11*Z]}static RGB_rgb(l){return l.map(tV)}static RGB_HTML(l){return`#${l.map(rN).join("")}`}static T_HTML(){return"#00000000"}static T_rgb(){return[null]}static CMYK_RGB([l,U,Z,d]){return["RGB",1-Math.min(1,l+d),1-Math.min(1,Z+d),1-Math.min(1,U+d)]}static CMYK_rgb([l,U,Z,d]){return[tV(1-Math.min(1,l+d)),tV(1-Math.min(1,Z+d)),tV(1-Math.min(1,U+d))]}static CMYK_HTML(l){const U=this.CMYK_RGB(l).slice(1);return this.RGB_HTML(U)}static RGB_CMYK([l,U,Z]){const d=1-l,Q=1-U,V=1-Z,W=Math.min(d,Q,V);return["CMYK",d,Q,V,W]}}class Ga{create(l,U,Z=!1){if(l<=0||U<=0)throw new Error("Invalid SVG dimensions");const d=this._createSVG("svg:svg");return d.setAttribute("version","1.1"),Z||(d.setAttribute("width",`${l}px`),d.setAttribute("height",`${U}px`)),d.setAttribute("preserveAspectRatio","none"),d.setAttribute("viewBox",`0 0 ${l} ${U}`),d}createElement(l){if(typeof l!="string")throw new Error("Invalid SVG element type");return this._createSVG(l)}_createSVG(l){al("Abstract method `_createSVG` called.")}}class jt extends Ga{_createSVG(l){return document.createElementNS(fZ,l)}}class KN{static setupStorage(l,U,Z,d,Q){const V=d.getValue(U,{value:null});switch(Z.name){case"textarea":if(V.value!==null&&(l.textContent=V.value),Q==="print")break;l.addEventListener("input",W=>{d.setValue(U,{value:W.target.value})});break;case"input":if(Z.attributes.type==="radio"||Z.attributes.type==="checkbox"){if(V.value===Z.attributes.xfaOn?l.setAttribute("checked",!0):V.value===Z.attributes.xfaOff&&l.removeAttribute("checked"),Q==="print")break;l.addEventListener("change",W=>{d.setValue(U,{value:W.target.checked?W.target.getAttribute("xfaOn"):W.target.getAttribute("xfaOff")})})}else{if(V.value!==null&&l.setAttribute("value",V.value),Q==="print")break;l.addEventListener("input",W=>{d.setValue(U,{value:W.target.value})})}break;case"select":if(V.value!==null){l.setAttribute("value",V.value);for(const W of Z.children)W.attributes.value===V.value?W.attributes.selected=!0:W.attributes.hasOwnProperty("selected")&&delete W.attributes.selected}l.addEventListener("input",W=>{const c=W.target.options,t=c.selectedIndex===-1?"":c[c.selectedIndex].value;d.setValue(U,{value:t})});break}}static setAttributes({html:l,element:U,storage:Z=null,intent:d,linkService:Q}){const{attributes:V}=U,W=l instanceof HTMLAnchorElement;V.type==="radio"&&(V.name=`${V.name}-${d}`);for(const[c,t]of Object.entries(V))if(t!=null)switch(c){case"class":t.length&&l.setAttribute(c,t.join(" "));break;case"dataId":break;case"id":l.setAttribute("data-element-id",t);break;case"style":Object.assign(l.style,t);break;case"textContent":l.textContent=t;break;default:(!W||c!=="href"&&c!=="newWindow")&&l.setAttribute(c,t)}W&&Q.addLinkAttributes(l,V.href,V.newWindow),Z&&V.dataId&&this.setupStorage(l,V.dataId,U,Z)}static render(l){var s,n;const U=l.annotationStorage,Z=l.linkService,d=l.xfaHtml,Q=l.intent||"display",V=document.createElement(d.name);d.attributes&&this.setAttributes({html:V,element:d,intent:Q,linkService:Z});const W=Q!=="richText",c=l.div;if(c.append(V),l.viewport){const a=`matrix(${l.viewport.transform.join(",")})`;c.style.transform=a}W&&c.setAttribute("class","xfaLayer xfaFont");const t=[];if(d.children.length===0){if(d.value){const a=document.createTextNode(d.value);V.append(a),W&&WV.shouldBuildText(d.name)&&t.push(a)}return{textDivs:t}}const R=[[d,-1,V]];for(;R.length>0;){const[a,i,M]=R.at(-1);if(i+1===a.children.length){R.pop();continue}const G=a.children[++R.at(-1)[1]];if(G===null)continue;const{name:J}=G;if(J==="#text"){const X=document.createTextNode(G.value);t.push(X),M.append(X);continue}const S=(s=G==null?void 0:G.attributes)!=null&&s.xmlns?document.createElementNS(G.attributes.xmlns,J):document.createElement(J);if(M.append(S),G.attributes&&this.setAttributes({html:S,element:G,storage:U,intent:Q,linkService:Z}),((n=G.children)==null?void 0:n.length)>0)R.push([G,-1,S]);else if(G.value){const X=document.createTextNode(G.value);W&&WV.shouldBuildText(J)&&t.push(X),S.append(X)}}for(const a of c.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea"))a.setAttribute("readOnly",!0);return{textDivs:t}}static update(l){const U=`matrix(${l.viewport.transform.join(",")})`;l.div.style.transform=U,l.div.hidden=!1}}const RV=1e3,Ta=9,mF=new WeakSet;function kd(N){return{width:N[2]-N[0],height:N[3]-N[1]}}class Sa{static create(l){switch(l.data.annotationType){case wl.LINK:return new HN(l);case wl.TEXT:return new Xa(l);case wl.WIDGET:switch(l.data.fieldType){case"Tx":return new Ya(l);case"Btn":return l.data.radioButton?new vN(l):l.data.checkBox?new ea(l):new pa(l);case"Ch":return new ua(l);case"Sig":return new Ba(l)}return new iF(l);case wl.POPUP:return new Ot(l);case wl.FREETEXT:return new PN(l);case wl.LINE:return new za(l);case wl.SQUARE:return new La(l);case wl.CIRCLE:return new oa(l);case wl.POLYLINE:return new fN(l);case wl.CARET:return new Da(l);case wl.INK:return new rt(l);case wl.POLYGON:return new ka(l);case wl.HIGHLIGHT:return new AN(l);case wl.UNDERLINE:return new Ia(l);case wl.SQUIGGLY:return new Ea(l);case wl.STRIKEOUT:return new Ca(l);case wl.STAMP:return new _N(l);case wl.FILEATTACHMENT:return new wa(l);default:return new yl(l)}}}const ZR=class ZR{constructor(l,{isRenderable:U=!1,ignoreBorder:Z=!1,createQuadrilaterals:d=!1}={}){h(this,UW);h(this,l0,null);h(this,RQ,!1);h(this,NQ,null);this.isRenderable=U,this.data=l.data,this.layer=l.layer,this.linkService=l.linkService,this.downloadManager=l.downloadManager,this.imageResourcesPath=l.imageResourcesPath,this.renderForms=l.renderForms,this.svgFactory=l.svgFactory,this.annotationStorage=l.annotationStorage,this.enableScripting=l.enableScripting,this.hasJSActions=l.hasJSActions,this._fieldObjects=l.fieldObjects,this.parent=l.parent,U&&(this.container=this._createContainer(Z)),d&&this._createQuadrilaterals()}static _hasPopupData({titleObj:l,contentsObj:U,richText:Z}){return!!(l!=null&&l.str||U!=null&&U.str||Z!=null&&Z.str)}get _isEditable(){return this.data.isEditable}get hasPopupData(){return ZR._hasPopupData(this.data)}updateEdited(l){var Z;if(!this.container)return;F(this,l0)||b(this,l0,{rect:this.data.rect.slice(0)});const{rect:U}=l;U&&m(this,UW,IR).call(this,U),(Z=F(this,NQ))==null||Z.popup.updateEdited(l)}resetEdited(){var l;F(this,l0)&&(m(this,UW,IR).call(this,F(this,l0).rect),(l=F(this,NQ))==null||l.popup.resetEdited(),b(this,l0,null))}_createContainer(l){const{data:U,parent:{page:Z,viewport:d}}=this,Q=document.createElement("section");Q.setAttribute("data-annotation-id",U.id),this instanceof iF||(Q.tabIndex=RV);const{style:V}=Q;if(V.zIndex=this.parent.zIndex++,U.alternativeText&&(Q.title=U.alternativeText),U.noRotate&&Q.classList.add("norotate"),!U.rect||this instanceof Ot){const{rotation:M}=U;return!U.hasOwnCanvas&&M!==0&&this.setRotation(M,Q),Q}const{width:W,height:c}=kd(U.rect);if(!l&&U.borderStyle.width>0){V.borderWidth=`${U.borderStyle.width}px`;const M=U.borderStyle.horizontalCornerRadius,G=U.borderStyle.verticalCornerRadius;if(M>0||G>0){const S=`calc(${M}px * var(--scale-factor)) / calc(${G}px * var(--scale-factor))`;V.borderRadius=S}else if(this instanceof vN){const S=`calc(${W}px * var(--scale-factor)) / calc(${c}px * var(--scale-factor))`;V.borderRadius=S}switch(U.borderStyle.style){case $Q.SOLID:V.borderStyle="solid";break;case $Q.DASHED:V.borderStyle="dashed";break;case $Q.BEVELED:P("Unimplemented border style: beveled");break;case $Q.INSET:P("Unimplemented border style: inset");break;case $Q.UNDERLINE:V.borderBottomStyle="solid";break}const J=U.borderColor||null;J?(b(this,RQ,!0),V.borderColor=C.makeHexColor(J[0]|0,J[1]|0,J[2]|0)):V.borderWidth=0}const t=C.normalizeRect([U.rect[0],Z.view[3]-U.rect[1]+Z.view[1],U.rect[2],Z.view[3]-U.rect[3]+Z.view[1]]),{pageWidth:R,pageHeight:s,pageX:n,pageY:a}=d.rawDims;V.left=`${100*(t[0]-n)/R}%`,V.top=`${100*(t[1]-a)/s}%`;const{rotation:i}=U;return U.hasOwnCanvas||i===0?(V.width=`${100*W/R}%`,V.height=`${100*c/s}%`):this.setRotation(i,Q),Q}setRotation(l,U=this.container){if(!this.data.rect)return;const{pageWidth:Z,pageHeight:d}=this.parent.viewport.rawDims,{width:Q,height:V}=kd(this.data.rect);let W,c;l%180===0?(W=100*Q/Z,c=100*V/d):(W=100*V/Z,c=100*Q/d),U.style.width=`${W}%`,U.style.height=`${c}%`,U.setAttribute("data-main-rotation",(360-l)%360)}get _commonActions(){const l=(U,Z,d)=>{const Q=d.detail[U],V=Q[0],W=Q.slice(1);d.target.style[Z]=gN[`${V}_HTML`](W),this.annotationStorage.setValue(this.data.id,{[Z]:gN[`${V}_rgb`](W)})};return _(this,"_commonActions",{display:U=>{const{display:Z}=U.detail,d=Z%2===1;this.container.style.visibility=d?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noView:d,noPrint:Z===1||Z===2})},print:U=>{this.annotationStorage.setValue(this.data.id,{noPrint:!U.detail.print})},hidden:U=>{const{hidden:Z}=U.detail;this.container.style.visibility=Z?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noPrint:Z,noView:Z})},focus:U=>{setTimeout(()=>U.target.focus({preventScroll:!1}),0)},userName:U=>{U.target.title=U.detail.userName},readonly:U=>{U.target.disabled=U.detail.readonly},required:U=>{this._setRequired(U.target,U.detail.required)},bgColor:U=>{l("bgColor","backgroundColor",U)},fillColor:U=>{l("fillColor","backgroundColor",U)},fgColor:U=>{l("fgColor","color",U)},textColor:U=>{l("textColor","color",U)},borderColor:U=>{l("borderColor","borderColor",U)},strokeColor:U=>{l("strokeColor","borderColor",U)},rotation:U=>{const Z=U.detail.rotation;this.setRotation(Z),this.annotationStorage.setValue(this.data.id,{rotation:Z})}})}_dispatchEventFromSandbox(l,U){const Z=this._commonActions;for(const d of Object.keys(U.detail)){const Q=l[d]||Z[d];Q==null||Q(U)}}_setDefaultPropertiesFromJS(l){if(!this.enableScripting)return;const U=this.annotationStorage.getRawValue(this.data.id);if(!U)return;const Z=this._commonActions;for(const[d,Q]of Object.entries(U)){const V=Z[d];if(V){const W={detail:{[d]:Q},target:l};V(W),delete U[d]}}}_createQuadrilaterals(){if(!this.container)return;const{quadPoints:l}=this.data;if(!l)return;const[U,Z,d,Q]=this.data.rect.map(M=>Math.fround(M));if(l.length===8){const[M,G,J,S]=l.subarray(2,6);if(d===M&&Q===G&&U===J&&Z===S)return}const{style:V}=this.container;let W;if(F(this,RQ)){const{borderColor:M,borderWidth:G}=V;V.borderWidth=0,W=["url('data:image/svg+xml;utf8,",'<svg xmlns="http://www.w3.org/2000/svg"',' preserveAspectRatio="none" viewBox="0 0 1 1">',`<g fill="transparent" stroke="${M}" stroke-width="${G}">`],this.container.classList.add("hasBorder")}const c=d-U,t=Q-Z,{svgFactory:R}=this,s=R.createElement("svg");s.classList.add("quadrilateralsContainer"),s.setAttribute("width",0),s.setAttribute("height",0);const n=R.createElement("defs");s.append(n);const a=R.createElement("clipPath"),i=`clippath_${this.data.id}`;a.setAttribute("id",i),a.setAttribute("clipPathUnits","objectBoundingBox"),n.append(a);for(let M=2,G=l.length;M<G;M+=8){const J=l[M],S=l[M+1],X=l[M+2],Y=l[M+3],B=R.createElement("rect"),p=(X-U)/c,e=(Q-S)/t,o=(J-X)/c,w=(S-Y)/t;B.setAttribute("x",p),B.setAttribute("y",e),B.setAttribute("width",o),B.setAttribute("height",w),a.append(B),W==null||W.push(`<rect vector-effect="non-scaling-stroke" x="${p}" y="${e}" width="${o}" height="${w}"/>`)}F(this,RQ)&&(W.push("</g></svg>')"),V.backgroundImage=W.join("")),this.container.append(s),this.container.style.clipPath=`url(#${i})`}_createPopup(){const{data:l}=this,U=b(this,NQ,new Ot({data:{color:l.color,titleObj:l.titleObj,modificationDate:l.modificationDate,contentsObj:l.contentsObj,richText:l.richText,parentRect:l.rect,borderStyle:0,id:`popup_${l.id}`,rotation:l.rotation},parent:this.parent,elements:[this]}));this.parent.div.append(U.render())}render(){al("Abstract method `AnnotationElement.render` called")}_getElementsByName(l,U=null){const Z=[];if(this._fieldObjects){const d=this._fieldObjects[l];if(d)for(const{page:Q,id:V,exportValues:W}of d){if(Q===-1||V===U)continue;const c=typeof W=="string"?W:null,t=document.querySelector(`[data-element-id="${V}"]`);if(t&&!mF.has(t)){P(`_getElementsByName - element not allowed: ${V}`);continue}Z.push({id:V,exportValue:c,domElement:t})}return Z}for(const d of document.getElementsByName(l)){const{exportValue:Q}=d,V=d.getAttribute("data-element-id");V!==U&&mF.has(d)&&Z.push({id:V,exportValue:Q,domElement:d})}return Z}show(){var l;this.container&&(this.container.hidden=!1),(l=this.popup)==null||l.maybeShow()}hide(){var l;this.container&&(this.container.hidden=!0),(l=this.popup)==null||l.forceHide()}getElementsToTriggerPopup(){return this.container}addHighlightArea(){const l=this.getElementsToTriggerPopup();if(Array.isArray(l))for(const U of l)U.classList.add("highlightArea");else l.classList.add("highlightArea")}_editOnDoubleClick(){if(!this._isEditable)return;const{annotationEditorType:l,data:{id:U}}=this;this.container.addEventListener("dblclick",()=>{var Z;(Z=this.linkService.eventBus)==null||Z.dispatch("switchannotationeditormode",{source:this,mode:l,editId:U})})}};l0=new WeakMap,RQ=new WeakMap,NQ=new WeakMap,UW=new WeakSet,IR=function(l){const{container:{style:U},data:{rect:Z,rotation:d},parent:{viewport:{rawDims:{pageWidth:Q,pageHeight:V,pageX:W,pageY:c}}}}=this;Z==null||Z.splice(0,4,...l);const{width:t,height:R}=kd(l);U.left=`${100*(l[0]-W)/Q}%`,U.top=`${100*(V-l[3]+c)/V}%`,d===0?(U.width=`${100*t/Q}%`,U.height=`${100*R/V}%`):this.setRotation(d)};let yl=ZR;class HN extends yl{constructor(U,Z=null){super(U,{isRenderable:!0,ignoreBorder:!!(Z!=null&&Z.ignoreBorder),createQuadrilaterals:!0});h(this,xU);this.isTooltipOnly=U.data.isTooltipOnly}render(){const{data:U,linkService:Z}=this,d=document.createElement("a");d.setAttribute("data-element-id",U.id);let Q=!1;return U.url?(Z.addLinkAttributes(d,U.url,U.newWindow),Q=!0):U.action?(this._bindNamedAction(d,U.action),Q=!0):U.attachment?(m(this,xU,Un).call(this,d,U.attachment,U.attachmentDest),Q=!0):U.setOCGState?(m(this,xU,Zn).call(this,d,U.setOCGState),Q=!0):U.dest?(this._bindLink(d,U.dest),Q=!0):(U.actions&&(U.actions.Action||U.actions["Mouse Up"]||U.actions["Mouse Down"])&&this.enableScripting&&this.hasJSActions&&(this._bindJSAction(d,U),Q=!0),U.resetForm?(this._bindResetFormAction(d,U.resetForm),Q=!0):this.isTooltipOnly&&!Q&&(this._bindLink(d,""),Q=!0)),this.container.classList.add("linkAnnotation"),Q&&this.container.append(d),this.container}_bindLink(U,Z){U.href=this.linkService.getDestinationHash(Z),U.onclick=()=>(Z&&this.linkService.goToDestination(Z),!1),(Z||Z==="")&&m(this,xU,p0).call(this)}_bindNamedAction(U,Z){U.href=this.linkService.getAnchorUrl(""),U.onclick=()=>(this.linkService.executeNamedAction(Z),!1),m(this,xU,p0).call(this)}_bindJSAction(U,Z){U.href=this.linkService.getAnchorUrl("");const d=new Map([["Action","onclick"],["Mouse Up","onmouseup"],["Mouse Down","onmousedown"]]);for(const Q of Object.keys(Z.actions)){const V=d.get(Q);V&&(U[V]=()=>{var W;return(W=this.linkService.eventBus)==null||W.dispatch("dispatcheventinsandbox",{source:this,detail:{id:Z.id,name:Q}}),!1})}U.onclick||(U.onclick=()=>!1),m(this,xU,p0).call(this)}_bindResetFormAction(U,Z){const d=U.onclick;if(d||(U.href=this.linkService.getAnchorUrl("")),m(this,xU,p0).call(this),!this._fieldObjects){P('_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.'),d||(U.onclick=()=>!1);return}U.onclick=()=>{var s;d==null||d();const{fields:Q,refs:V,include:W}=Z,c=[];if(Q.length!==0||V.length!==0){const n=new Set(V);for(const a of Q){const i=this._fieldObjects[a]||[];for(const{id:M}of i)n.add(M)}for(const a of Object.values(this._fieldObjects))for(const i of a)n.has(i.id)===W&&c.push(i)}else for(const n of Object.values(this._fieldObjects))c.push(...n);const t=this.annotationStorage,R=[];for(const n of c){const{id:a}=n;switch(R.push(a),n.type){case"text":{const M=n.defaultValue||"";t.setValue(a,{value:M});break}case"checkbox":case"radiobutton":{const M=n.defaultValue===n.exportValues;t.setValue(a,{value:M});break}case"combobox":case"listbox":{const M=n.defaultValue||"";t.setValue(a,{value:M});break}default:continue}const i=document.querySelector(`[data-element-id="${a}"]`);if(i){if(!mF.has(i)){P(`_bindResetFormAction - element not allowed: ${a}`);continue}}else continue;i.dispatchEvent(new Event("resetform"))}return this.enableScripting&&((s=this.linkService.eventBus)==null||s.dispatch("dispatcheventinsandbox",{source:this,detail:{id:"app",ids:R,name:"ResetForm"}})),!1}}}xU=new WeakSet,p0=function(){this.container.setAttribute("data-internal-link","")},Un=function(U,Z,d=null){U.href=this.linkService.getAnchorUrl(""),Z.description&&(U.title=Z.description),U.onclick=()=>{var Q;return(Q=this.downloadManager)==null||Q.openOrDownloadData(Z.content,Z.filename,d),!1},m(this,xU,p0).call(this)},Zn=function(U,Z){U.href=this.linkService.getAnchorUrl(""),U.onclick=()=>(this.linkService.executeSetOCGState(Z),!1),m(this,xU,p0).call(this)};class Xa extends yl{constructor(l){super(l,{isRenderable:!0})}render(){this.container.classList.add("textAnnotation");const l=document.createElement("img");return l.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg",l.setAttribute("data-l10n-id","pdfjs-text-annotation-type"),l.setAttribute("data-l10n-args",JSON.stringify({type:this.data.name})),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.append(l),this.container}}class iF extends yl{render(){return this.container}showElementAndHideCanvas(l){var U;this.data.hasOwnCanvas&&(((U=l.previousSibling)==null?void 0:U.nodeName)==="CANVAS"&&(l.previousSibling.hidden=!0),l.hidden=!1)}_getKeyModifier(l){return bU.platform.isMac?l.metaKey:l.ctrlKey}_setEventListener(l,U,Z,d,Q){Z.includes("mouse")?l.addEventListener(Z,V=>{var W;(W=this.linkService.eventBus)==null||W.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:d,value:Q(V),shift:V.shiftKey,modifier:this._getKeyModifier(V)}})}):l.addEventListener(Z,V=>{var W;if(Z==="blur"){if(!U.focused||!V.relatedTarget)return;U.focused=!1}else if(Z==="focus"){if(U.focused)return;U.focused=!0}Q&&((W=this.linkService.eventBus)==null||W.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:d,value:Q(V)}}))})}_setEventListeners(l,U,Z,d){var Q,V,W;for(const[c,t]of Z)(t==="Action"||(Q=this.data.actions)!=null&&Q[t])&&((t==="Focus"||t==="Blur")&&(U||(U={focused:!1})),this._setEventListener(l,U,c,t,d),t==="Focus"&&!((V=this.data.actions)!=null&&V.Blur)?this._setEventListener(l,U,"blur","Blur",null):t==="Blur"&&!((W=this.data.actions)!=null&&W.Focus)&&this._setEventListener(l,U,"focus","Focus",null))}_setBackgroundColor(l){const U=this.data.backgroundColor||null;l.style.backgroundColor=U===null?"transparent":C.makeHexColor(U[0],U[1],U[2])}_setTextStyle(l){const U=["left","center","right"],{fontColor:Z}=this.data.defaultAppearanceData,d=this.data.defaultAppearanceData.fontSize||Ta,Q=l.style;let V;const W=2,c=t=>Math.round(10*t)/10;if(this.data.multiLine){const t=Math.abs(this.data.rect[3]-this.data.rect[1]-W),R=Math.round(t/(ht*d))||1,s=t/R;V=Math.min(d,c(s/ht))}else{const t=Math.abs(this.data.rect[3]-this.data.rect[1]-W);V=Math.min(d,c(t/ht))}Q.fontSize=`calc(${V}px * var(--scale-factor))`,Q.color=C.makeHexColor(Z[0],Z[1],Z[2]),this.data.textAlignment!==null&&(Q.textAlign=U[this.data.textAlignment])}_setRequired(l,U){U?l.setAttribute("required",!0):l.removeAttribute("required"),l.setAttribute("aria-required",U)}}class Ya extends iF{constructor(l){const U=l.renderForms||l.data.hasOwnCanvas||!l.data.hasAppearance&&!!l.data.fieldValue;super(l,{isRenderable:U})}setPropertyOnSiblings(l,U,Z,d){const Q=this.annotationStorage;for(const V of this._getElementsByName(l.name,l.id))V.domElement&&(V.domElement[U]=Z),Q.setValue(V.id,{[d]:Z})}render(){var d,Q;const l=this.annotationStorage,U=this.data.id;this.container.classList.add("textWidgetAnnotation");let Z=null;if(this.renderForms){const V=l.getValue(U,{value:this.data.fieldValue});let W=V.value||"";const c=l.getValue(U,{charLimit:this.data.maxLen}).charLimit;c&&W.length>c&&(W=W.slice(0,c));let t=V.formattedValue||((d=this.data.textContent)==null?void 0:d.join(`
`))||null;t&&this.data.comb&&(t=t.replaceAll(/\s+/g,""));const R={userValue:W,formattedValue:t,lastCommittedValue:null,commitKey:1,focused:!1};this.data.multiLine?(Z=document.createElement("textarea"),Z.textContent=t??W,this.data.doNotScroll&&(Z.style.overflowY="hidden")):(Z=document.createElement("input"),Z.type="text",Z.setAttribute("value",t??W),this.data.doNotScroll&&(Z.style.overflowX="hidden")),this.data.hasOwnCanvas&&(Z.hidden=!0),mF.add(Z),Z.setAttribute("data-element-id",U),Z.disabled=this.data.readOnly,Z.name=this.data.fieldName,Z.tabIndex=RV,this._setRequired(Z,this.data.required),c&&(Z.maxLength=c),Z.addEventListener("input",n=>{l.setValue(U,{value:n.target.value}),this.setPropertyOnSiblings(Z,"value",n.target.value,"value"),R.formattedValue=null}),Z.addEventListener("resetform",n=>{const a=this.data.defaultFieldValue??"";Z.value=R.userValue=a,R.formattedValue=null});let s=n=>{const{formattedValue:a}=R;a!=null&&(n.target.value=a),n.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){Z.addEventListener("focus",a=>{var M;if(R.focused)return;const{target:i}=a;R.userValue&&(i.value=R.userValue),R.lastCommittedValue=i.value,R.commitKey=1,(M=this.data.actions)!=null&&M.Focus||(R.focused=!0)}),Z.addEventListener("updatefromsandbox",a=>{this.showElementAndHideCanvas(a.target);const i={value(M){R.userValue=M.detail.value??"",l.setValue(U,{value:R.userValue.toString()}),M.target.value=R.userValue},formattedValue(M){const{formattedValue:G}=M.detail;R.formattedValue=G,G!=null&&M.target!==document.activeElement&&(M.target.value=G),l.setValue(U,{formattedValue:G})},selRange(M){M.target.setSelectionRange(...M.detail.selRange)},charLimit:M=>{var X;const{charLimit:G}=M.detail,{target:J}=M;if(G===0){J.removeAttribute("maxLength");return}J.setAttribute("maxLength",G);let S=R.userValue;!S||S.length<=G||(S=S.slice(0,G),J.value=R.userValue=S,l.setValue(U,{value:S}),(X=this.linkService.eventBus)==null||X.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:S,willCommit:!0,commitKey:1,selStart:J.selectionStart,selEnd:J.selectionEnd}}))}};this._dispatchEventFromSandbox(i,a)}),Z.addEventListener("keydown",a=>{var G;R.commitKey=1;let i=-1;if(a.key==="Escape"?i=0:a.key==="Enter"&&!this.data.multiLine?i=2:a.key==="Tab"&&(R.commitKey=3),i===-1)return;const{value:M}=a.target;R.lastCommittedValue!==M&&(R.lastCommittedValue=M,R.userValue=M,(G=this.linkService.eventBus)==null||G.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:M,willCommit:!0,commitKey:i,selStart:a.target.selectionStart,selEnd:a.target.selectionEnd}}))});const n=s;s=null,Z.addEventListener("blur",a=>{var M,G;if(!R.focused||!a.relatedTarget)return;(M=this.data.actions)!=null&&M.Blur||(R.focused=!1);const{value:i}=a.target;R.userValue=i,R.lastCommittedValue!==i&&((G=this.linkService.eventBus)==null||G.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:i,willCommit:!0,commitKey:R.commitKey,selStart:a.target.selectionStart,selEnd:a.target.selectionEnd}})),n(a)}),(Q=this.data.actions)!=null&&Q.Keystroke&&Z.addEventListener("beforeinput",a=>{var B;R.lastCommittedValue=null;const{data:i,target:M}=a,{value:G,selectionStart:J,selectionEnd:S}=M;let X=J,Y=S;switch(a.inputType){case"deleteWordBackward":{const p=G.substring(0,J).match(/\w*[^\w]*$/);p&&(X-=p[0].length);break}case"deleteWordForward":{const p=G.substring(J).match(/^[^\w]*\w*/);p&&(Y+=p[0].length);break}case"deleteContentBackward":J===S&&(X-=1);break;case"deleteContentForward":J===S&&(Y+=1);break}a.preventDefault(),(B=this.linkService.eventBus)==null||B.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:G,change:i||"",willCommit:!1,selStart:X,selEnd:Y}})}),this._setEventListeners(Z,R,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],a=>a.target.value)}if(s&&Z.addEventListener("blur",s),this.data.comb){const a=(this.data.rect[2]-this.data.rect[0])/c;Z.classList.add("comb"),Z.style.letterSpacing=`calc(${a}px * var(--scale-factor) - 1ch)`}}else Z=document.createElement("div"),Z.textContent=this.data.fieldValue,Z.style.verticalAlign="middle",Z.style.display="table-cell",this.data.hasOwnCanvas&&(Z.hidden=!0);return this._setTextStyle(Z),this._setBackgroundColor(Z),this._setDefaultPropertiesFromJS(Z),this.container.append(Z),this.container}}class Ba extends iF{constructor(l){super(l,{isRenderable:!!l.data.hasOwnCanvas})}}class ea extends iF{constructor(l){super(l,{isRenderable:l.renderForms})}render(){const l=this.annotationStorage,U=this.data,Z=U.id;let d=l.getValue(Z,{value:U.exportValue===U.fieldValue}).value;typeof d=="string"&&(d=d!=="Off",l.setValue(Z,{value:d})),this.container.classList.add("buttonWidgetAnnotation","checkBox");const Q=document.createElement("input");return mF.add(Q),Q.setAttribute("data-element-id",Z),Q.disabled=U.readOnly,this._setRequired(Q,this.data.required),Q.type="checkbox",Q.name=U.fieldName,d&&Q.setAttribute("checked",!0),Q.setAttribute("exportValue",U.exportValue),Q.tabIndex=RV,Q.addEventListener("change",V=>{const{name:W,checked:c}=V.target;for(const t of this._getElementsByName(W,Z)){const R=c&&t.exportValue===U.exportValue;t.domElement&&(t.domElement.checked=R),l.setValue(t.id,{value:R})}l.setValue(Z,{value:c})}),Q.addEventListener("resetform",V=>{const W=U.defaultFieldValue||"Off";V.target.checked=W===U.exportValue}),this.enableScripting&&this.hasJSActions&&(Q.addEventListener("updatefromsandbox",V=>{const W={value(c){c.target.checked=c.detail.value!=="Off",l.setValue(Z,{value:c.target.checked})}};this._dispatchEventFromSandbox(W,V)}),this._setEventListeners(Q,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],V=>V.target.checked)),this._setBackgroundColor(Q),this._setDefaultPropertiesFromJS(Q),this.container.append(Q),this.container}}class vN extends iF{constructor(l){super(l,{isRenderable:l.renderForms})}render(){this.container.classList.add("buttonWidgetAnnotation","radioButton");const l=this.annotationStorage,U=this.data,Z=U.id;let d=l.getValue(Z,{value:U.fieldValue===U.buttonValue}).value;if(typeof d=="string"&&(d=d!==U.buttonValue,l.setValue(Z,{value:d})),d)for(const V of this._getElementsByName(U.fieldName,Z))l.setValue(V.id,{value:!1});const Q=document.createElement("input");if(mF.add(Q),Q.setAttribute("data-element-id",Z),Q.disabled=U.readOnly,this._setRequired(Q,this.data.required),Q.type="radio",Q.name=U.fieldName,d&&Q.setAttribute("checked",!0),Q.tabIndex=RV,Q.addEventListener("change",V=>{const{name:W,checked:c}=V.target;for(const t of this._getElementsByName(W,Z))l.setValue(t.id,{value:!1});l.setValue(Z,{value:c})}),Q.addEventListener("resetform",V=>{const W=U.defaultFieldValue;V.target.checked=W!=null&&W===U.buttonValue}),this.enableScripting&&this.hasJSActions){const V=U.buttonValue;Q.addEventListener("updatefromsandbox",W=>{const c={value:t=>{const R=V===t.detail.value;for(const s of this._getElementsByName(t.target.name)){const n=R&&s.id===Z;s.domElement&&(s.domElement.checked=n),l.setValue(s.id,{value:n})}}};this._dispatchEventFromSandbox(c,W)}),this._setEventListeners(Q,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],W=>W.target.checked)}return this._setBackgroundColor(Q),this._setDefaultPropertiesFromJS(Q),this.container.append(Q),this.container}}class pa extends HN{constructor(l){super(l,{ignoreBorder:l.data.hasAppearance})}render(){const l=super.render();l.classList.add("buttonWidgetAnnotation","pushButton");const U=l.lastChild;return this.enableScripting&&this.hasJSActions&&U&&(this._setDefaultPropertiesFromJS(U),U.addEventListener("updatefromsandbox",Z=>{this._dispatchEventFromSandbox({},Z)})),l}}class ua extends iF{constructor(l){super(l,{isRenderable:l.renderForms})}render(){this.container.classList.add("choiceWidgetAnnotation");const l=this.annotationStorage,U=this.data.id,Z=l.getValue(U,{value:this.data.fieldValue}),d=document.createElement("select");mF.add(d),d.setAttribute("data-element-id",U),d.disabled=this.data.readOnly,this._setRequired(d,this.data.required),d.name=this.data.fieldName,d.tabIndex=RV;let Q=this.data.combo&&this.data.options.length>0;this.data.combo||(d.size=this.data.options.length,this.data.multiSelect&&(d.multiple=!0)),d.addEventListener("resetform",R=>{const s=this.data.defaultFieldValue;for(const n of d.options)n.selected=n.value===s});for(const R of this.data.options){const s=document.createElement("option");s.textContent=R.displayValue,s.value=R.exportValue,Z.value.includes(R.exportValue)&&(s.setAttribute("selected",!0),Q=!1),d.append(s)}let V=null;if(Q){const R=document.createElement("option");R.value=" ",R.setAttribute("hidden",!0),R.setAttribute("selected",!0),d.prepend(R),V=()=>{R.remove(),d.removeEventListener("input",V),V=null},d.addEventListener("input",V)}const W=R=>{const s=R?"value":"textContent",{options:n,multiple:a}=d;return a?Array.prototype.filter.call(n,i=>i.selected).map(i=>i[s]):n.selectedIndex===-1?null:n[n.selectedIndex][s]};let c=W(!1);const t=R=>{const s=R.target.options;return Array.prototype.map.call(s,n=>({displayValue:n.textContent,exportValue:n.value}))};return this.enableScripting&&this.hasJSActions?(d.addEventListener("updatefromsandbox",R=>{const s={value(n){V==null||V();const a=n.detail.value,i=new Set(Array.isArray(a)?a:[a]);for(const M of d.options)M.selected=i.has(M.value);l.setValue(U,{value:W(!0)}),c=W(!1)},multipleSelection(n){d.multiple=!0},remove(n){const a=d.options,i=n.detail.remove;a[i].selected=!1,d.remove(i),a.length>0&&Array.prototype.findIndex.call(a,G=>G.selected)===-1&&(a[0].selected=!0),l.setValue(U,{value:W(!0),items:t(n)}),c=W(!1)},clear(n){for(;d.length!==0;)d.remove(0);l.setValue(U,{value:null,items:[]}),c=W(!1)},insert(n){const{index:a,displayValue:i,exportValue:M}=n.detail.insert,G=d.children[a],J=document.createElement("option");J.textContent=i,J.value=M,G?G.before(J):d.append(J),l.setValue(U,{value:W(!0),items:t(n)}),c=W(!1)},items(n){const{items:a}=n.detail;for(;d.length!==0;)d.remove(0);for(const i of a){const{displayValue:M,exportValue:G}=i,J=document.createElement("option");J.textContent=M,J.value=G,d.append(J)}d.options.length>0&&(d.options[0].selected=!0),l.setValue(U,{value:W(!0),items:t(n)}),c=W(!1)},indices(n){const a=new Set(n.detail.indices);for(const i of n.target.options)i.selected=a.has(i.index);l.setValue(U,{value:W(!0)}),c=W(!1)},editable(n){n.target.disabled=!n.detail.editable}};this._dispatchEventFromSandbox(s,R)}),d.addEventListener("input",R=>{var a;const s=W(!0),n=W(!1);l.setValue(U,{value:s}),R.preventDefault(),(a=this.linkService.eventBus)==null||a.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:c,change:n,changeEx:s,willCommit:!1,commitKey:1,keyDown:!1}})}),this._setEventListeners(d,null,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"],["input","Action"],["input","Validate"]],R=>R.target.value)):d.addEventListener("input",function(R){l.setValue(U,{value:W(!0)})}),this.data.combo&&this._setTextStyle(d),this._setBackgroundColor(d),this._setDefaultPropertiesFromJS(d),this.container.append(d),this.container}}class Ot extends yl{constructor(l){const{data:U,elements:Z}=l;super(l,{isRenderable:yl._hasPopupData(U)}),this.elements=Z,this.popup=null}render(){this.container.classList.add("popupAnnotation");const l=this.popup=new ya({container:this.container,color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText,rect:this.data.rect,parentRect:this.data.parentRect||null,parent:this.parent,elements:this.elements,open:this.data.open}),U=[];for(const Z of this.elements)Z.popup=l,Z.container.ariaHasPopup="dialog",U.push(Z.data.id),Z.addHighlightArea();return this.container.setAttribute("aria-controls",U.map(Z=>`${Tt}${Z}`).join(",")),this.container}}class ya{constructor({container:l,color:U,elements:Z,titleObj:d,modificationDate:Q,contentsObj:V,richText:W,parent:c,rect:t,parentRect:R,open:s}){h(this,sl);h(this,sQ,m(this,sl,Qn).bind(this));h(this,zc,m(this,sl,CR).bind(this));h(this,Lc,m(this,sl,Zt).bind(this));h(this,nQ,m(this,sl,Ut).bind(this));h(this,U0,null);h(this,pl,null);h(this,ad,null);h(this,bQ,null);h(this,ZW,null);h(this,dW,null);h(this,aQ,null);h(this,hd,!1);h(this,mZ,null);h(this,md,null);h(this,FW,null);h(this,id,null);h(this,QW,null);h(this,Z0,null);h(this,d0,!1);var n;b(this,pl,l),b(this,QW,d),b(this,ad,V),b(this,id,W),b(this,dW,c),b(this,U0,U),b(this,FW,t),b(this,aQ,R),b(this,ZW,Z),b(this,bQ,Yt.toDateObject(Q)),this.trigger=Z.flatMap(a=>a.getElementsToTriggerPopup());for(const a of this.trigger)a.addEventListener("click",F(this,nQ)),a.addEventListener("mouseenter",F(this,Lc)),a.addEventListener("mouseleave",F(this,zc)),a.classList.add("popupTriggerArea");for(const a of Z)(n=a.container)==null||n.addEventListener("keydown",F(this,sQ));F(this,pl).hidden=!0,s&&m(this,sl,Ut).call(this)}render(){if(F(this,mZ))return;const l=b(this,mZ,document.createElement("div"));if(l.className="popup",F(this,U0)){const Q=l.style.outlineColor=C.makeHexColor(...F(this,U0));CSS.supports("background-color","color-mix(in srgb, red 30%, white)")?l.style.backgroundColor=`color-mix(in srgb, ${Q} 30%, white)`:l.style.backgroundColor=C.makeHexColor(...F(this,U0).map(W=>Math.floor(.7*(255-W)+W)))}const U=document.createElement("span");U.className="header";const Z=document.createElement("h1");if(U.append(Z),{dir:Z.dir,str:Z.textContent}=F(this,QW),l.append(U),F(this,bQ)){const Q=document.createElement("span");Q.classList.add("popupDate"),Q.setAttribute("data-l10n-id","pdfjs-annotation-date-time-string"),Q.setAttribute("data-l10n-args",JSON.stringify({dateObj:F(this,bQ).valueOf()})),U.append(Q)}const d=F(this,sl,lt);if(d)KN.render({xfaHtml:d,intent:"richText",div:l}),l.lastChild.classList.add("richText","popupContent");else{const Q=this._formatContents(F(this,ad));l.append(Q)}F(this,pl).append(l)}_formatContents({str:l,dir:U}){const Z=document.createElement("p");Z.classList.add("popupContent"),Z.dir=U;const d=l.split(/(?:\r\n?|\n)/);for(let Q=0,V=d.length;Q<V;++Q){const W=d[Q];Z.append(document.createTextNode(W)),Q<V-1&&Z.append(document.createElement("br"))}return Z}updateEdited({rect:l,popupContent:U}){var Z;F(this,Z0)||b(this,Z0,{contentsObj:F(this,ad),richText:F(this,id)}),l&&b(this,md,null),U&&(b(this,id,m(this,sl,Fn).call(this,U)),b(this,ad,null)),(Z=F(this,mZ))==null||Z.remove(),b(this,mZ,null)}resetEdited(){var l;F(this,Z0)&&({contentsObj:SU(this,ad)._,richText:SU(this,id)._}=F(this,Z0),b(this,Z0,null),(l=F(this,mZ))==null||l.remove(),b(this,mZ,null),b(this,md,null))}forceHide(){b(this,d0,this.isVisible),F(this,d0)&&(F(this,pl).hidden=!0)}maybeShow(){F(this,d0)&&(F(this,mZ)||m(this,sl,Zt).call(this),b(this,d0,!1),F(this,pl).hidden=!1)}get isVisible(){return F(this,pl).hidden===!1}}sQ=new WeakMap,zc=new WeakMap,Lc=new WeakMap,nQ=new WeakMap,U0=new WeakMap,pl=new WeakMap,ad=new WeakMap,bQ=new WeakMap,ZW=new WeakMap,dW=new WeakMap,aQ=new WeakMap,hd=new WeakMap,mZ=new WeakMap,md=new WeakMap,FW=new WeakMap,id=new WeakMap,QW=new WeakMap,Z0=new WeakMap,d0=new WeakMap,sl=new WeakSet,lt=function(){const l=F(this,id),U=F(this,ad);return l!=null&&l.str&&(!(U!=null&&U.str)||U.str===l.str)&&F(this,id).html||null},ER=function(){var l,U,Z;return((Z=(U=(l=F(this,sl,lt))==null?void 0:l.attributes)==null?void 0:U.style)==null?void 0:Z.fontSize)||0},dn=function(){var l,U,Z;return((Z=(U=(l=F(this,sl,lt))==null?void 0:l.attributes)==null?void 0:U.style)==null?void 0:Z.color)||null},Fn=function(l){const U=[],Z={str:l,html:{name:"div",attributes:{dir:"auto"},children:[{name:"p",children:U}]}},d={style:{color:F(this,sl,dn),fontSize:F(this,sl,ER)?`calc(${F(this,sl,ER)}px * var(--scale-factor))`:""}};for(const Q of l.split(`
`))U.push({name:"span",value:Q,attributes:d});return Z},Qn=function(l){l.altKey||l.shiftKey||l.ctrlKey||l.metaKey||(l.key==="Enter"||l.key==="Escape"&&F(this,hd))&&m(this,sl,Ut).call(this)},Vn=function(){if(F(this,md)!==null)return;const{page:{view:l},viewport:{rawDims:{pageWidth:U,pageHeight:Z,pageX:d,pageY:Q}}}=F(this,dW);let V=!!F(this,aQ),W=V?F(this,aQ):F(this,FW);for(const i of F(this,ZW))if(!W||C.intersect(i.data.rect,W)!==null){W=i.data.rect,V=!0;break}const c=C.normalizeRect([W[0],l[3]-W[1]+l[1],W[2],l[3]-W[3]+l[1]]),R=V?W[2]-W[0]+5:0,s=c[0]+R,n=c[1];b(this,md,[100*(s-d)/U,100*(n-Q)/Z]);const{style:a}=F(this,pl);a.left=`${F(this,md)[0]}%`,a.top=`${F(this,md)[1]}%`},Ut=function(){b(this,hd,!F(this,hd)),F(this,hd)?(m(this,sl,Zt).call(this),F(this,pl).addEventListener("click",F(this,nQ)),F(this,pl).addEventListener("keydown",F(this,sQ))):(m(this,sl,CR).call(this),F(this,pl).removeEventListener("click",F(this,nQ)),F(this,pl).removeEventListener("keydown",F(this,sQ)))},Zt=function(){F(this,mZ)||this.render(),this.isVisible?F(this,hd)&&F(this,pl).classList.add("focused"):(m(this,sl,Vn).call(this),F(this,pl).hidden=!1,F(this,pl).style.zIndex=parseInt(F(this,pl).style.zIndex)+1e3)},CR=function(){F(this,pl).classList.remove("focused"),!(F(this,hd)||!this.isVisible)&&(F(this,pl).hidden=!0,F(this,pl).style.zIndex=parseInt(F(this,pl).style.zIndex)-1e3)};class PN extends yl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),this.textContent=l.data.textContent,this.textPosition=l.data.textPosition,this.annotationEditorType=v.FREETEXT}render(){if(this.container.classList.add("freeTextAnnotation"),this.textContent){const l=document.createElement("div");l.classList.add("annotationTextContent"),l.setAttribute("role","comment");for(const U of this.textContent){const Z=document.createElement("span");Z.textContent=U,l.append(Z)}this.container.append(l)}return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this._editOnDoubleClick(),this.container}}class za extends yl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});h(this,VW,null)}render(){this.container.classList.add("lineAnnotation");const U=this.data,{width:Z,height:d}=kd(U.rect),Q=this.svgFactory.create(Z,d,!0),V=b(this,VW,this.svgFactory.createElement("svg:line"));return V.setAttribute("x1",U.rect[2]-U.lineCoordinates[0]),V.setAttribute("y1",U.rect[3]-U.lineCoordinates[1]),V.setAttribute("x2",U.rect[2]-U.lineCoordinates[2]),V.setAttribute("y2",U.rect[3]-U.lineCoordinates[3]),V.setAttribute("stroke-width",U.borderStyle.width||1),V.setAttribute("stroke","transparent"),V.setAttribute("fill","transparent"),Q.append(V),this.container.append(Q),!U.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return F(this,VW)}addHighlightArea(){this.container.classList.add("highlightArea")}}VW=new WeakMap;class La extends yl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});h(this,WW,null)}render(){this.container.classList.add("squareAnnotation");const U=this.data,{width:Z,height:d}=kd(U.rect),Q=this.svgFactory.create(Z,d,!0),V=U.borderStyle.width,W=b(this,WW,this.svgFactory.createElement("svg:rect"));return W.setAttribute("x",V/2),W.setAttribute("y",V/2),W.setAttribute("width",Z-V),W.setAttribute("height",d-V),W.setAttribute("stroke-width",V||1),W.setAttribute("stroke","transparent"),W.setAttribute("fill","transparent"),Q.append(W),this.container.append(Q),!U.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return F(this,WW)}addHighlightArea(){this.container.classList.add("highlightArea")}}WW=new WeakMap;class oa extends yl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});h(this,cW,null)}render(){this.container.classList.add("circleAnnotation");const U=this.data,{width:Z,height:d}=kd(U.rect),Q=this.svgFactory.create(Z,d,!0),V=U.borderStyle.width,W=b(this,cW,this.svgFactory.createElement("svg:ellipse"));return W.setAttribute("cx",Z/2),W.setAttribute("cy",d/2),W.setAttribute("rx",Z/2-V/2),W.setAttribute("ry",d/2-V/2),W.setAttribute("stroke-width",V||1),W.setAttribute("stroke","transparent"),W.setAttribute("fill","transparent"),Q.append(W),this.container.append(Q),!U.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return F(this,cW)}addHighlightArea(){this.container.classList.add("highlightArea")}}cW=new WeakMap;class fN extends yl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});h(this,tW,null);this.containerClassName="polylineAnnotation",this.svgElementName="svg:polyline"}render(){this.container.classList.add(this.containerClassName);const{data:{rect:U,vertices:Z,borderStyle:d,popupRef:Q}}=this;if(!Z)return this.container;const{width:V,height:W}=kd(U),c=this.svgFactory.create(V,W,!0);let t=[];for(let s=0,n=Z.length;s<n;s+=2){const a=Z[s]-U[0],i=U[3]-Z[s+1];t.push(`${a},${i}`)}t=t.join(" ");const R=b(this,tW,this.svgFactory.createElement(this.svgElementName));return R.setAttribute("points",t),R.setAttribute("stroke-width",d.width||1),R.setAttribute("stroke","transparent"),R.setAttribute("fill","transparent"),c.append(R),this.container.append(c),!Q&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return F(this,tW)}addHighlightArea(){this.container.classList.add("highlightArea")}}tW=new WeakMap;class ka extends fN{constructor(l){super(l),this.containerClassName="polygonAnnotation",this.svgElementName="svg:polygon"}}class Da extends yl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("caretAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}class rt extends yl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});h(this,NW);h(this,RW,null);h(this,F0,[]);this.containerClassName="inkAnnotation",this.svgElementName="svg:polyline",this.annotationEditorType=this.data.it==="InkHighlight"?v.HIGHLIGHT:v.INK}render(){this.container.classList.add(this.containerClassName);const{data:{rect:U,rotation:Z,inkLists:d,borderStyle:Q,popupRef:V}}=this,{transform:W,width:c,height:t}=m(this,NW,wR).call(this,Z,U),R=this.svgFactory.create(c,t,!0),s=b(this,RW,this.svgFactory.createElement("svg:g"));R.append(s),s.setAttribute("stroke-width",Q.width||1),s.setAttribute("stroke-linecap","round"),s.setAttribute("stroke-linejoin","round"),s.setAttribute("stroke-miterlimit",10),s.setAttribute("stroke","transparent"),s.setAttribute("fill","transparent"),s.setAttribute("transform",W);for(let n=0,a=d.length;n<a;n++){const i=this.svgFactory.createElement(this.svgElementName);F(this,F0).push(i),i.setAttribute("points",d[n].join(",")),s.append(i)}return!V&&this.hasPopupData&&this._createPopup(),this.container.append(R),this._editOnDoubleClick(),this.container}updateEdited(U){super.updateEdited(U);const{thickness:Z,points:d,rect:Q}=U,V=F(this,RW);if(Z>=0&&V.setAttribute("stroke-width",Z||1),d)for(let W=0,c=F(this,F0).length;W<c;W++)F(this,F0)[W].setAttribute("points",d[W].join(","));if(Q){const{transform:W,width:c,height:t}=m(this,NW,wR).call(this,this.data.rotation,Q);V.parentElement.setAttribute("viewBox",`0 0 ${c} ${t}`),V.setAttribute("transform",W)}}getElementsToTriggerPopup(){return F(this,F0)}addHighlightArea(){this.container.classList.add("highlightArea")}}RW=new WeakMap,F0=new WeakMap,NW=new WeakSet,wR=function(U,Z){switch(U){case 90:return{transform:`rotate(90) translate(${-Z[0]},${Z[1]}) scale(1,-1)`,width:Z[3]-Z[1],height:Z[2]-Z[0]};case 180:return{transform:`rotate(180) translate(${-Z[2]},${Z[1]}) scale(1,-1)`,width:Z[2]-Z[0],height:Z[3]-Z[1]};case 270:return{transform:`rotate(270) translate(${-Z[2]},${Z[3]}) scale(1,-1)`,width:Z[3]-Z[1],height:Z[2]-Z[0]};default:return{transform:`translate(${-Z[0]},${Z[3]}) scale(1,-1)`,width:Z[2]-Z[0],height:Z[3]-Z[1]}}};class AN extends yl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0}),this.annotationEditorType=v.HIGHLIGHT}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("highlightAnnotation"),this._editOnDoubleClick(),this.container}}class Ia extends yl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("underlineAnnotation"),this.container}}class Ea extends yl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("squigglyAnnotation"),this.container}}class Ca extends yl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("strikeoutAnnotation"),this.container}}class _N extends yl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),this.annotationEditorType=v.STAMP}render(){return this.container.classList.add("stampAnnotation"),this.container.setAttribute("role","img"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this._editOnDoubleClick(),this.container}}class wa extends yl{constructor(U){var d;super(U,{isRenderable:!0});h(this,nW);h(this,sW,null);const{file:Z}=this.data;this.filename=Z.filename,this.content=Z.content,(d=this.linkService.eventBus)==null||d.dispatch("fileattachmentannotation",{source:this,...Z})}render(){this.container.classList.add("fileAttachmentAnnotation");const{container:U,data:Z}=this;let d;Z.hasAppearance||Z.fillAlpha===0?d=document.createElement("div"):(d=document.createElement("img"),d.src=`${this.imageResourcesPath}annotation-${/paperclip/i.test(Z.name)?"paperclip":"pushpin"}.svg`,Z.fillAlpha&&Z.fillAlpha<1&&(d.style=`filter: opacity(${Math.round(Z.fillAlpha*100)}%);`)),d.addEventListener("dblclick",m(this,nW,xR).bind(this)),b(this,sW,d);const{isMac:Q}=bU.platform;return U.addEventListener("keydown",V=>{V.key==="Enter"&&(Q?V.metaKey:V.ctrlKey)&&m(this,nW,xR).call(this)}),!Z.popupRef&&this.hasPopupData?this._createPopup():d.classList.add("popupTriggerArea"),U.append(d),U}getElementsToTriggerPopup(){return F(this,sW)}addHighlightArea(){this.container.classList.add("highlightArea")}}sW=new WeakMap,nW=new WeakSet,xR=function(){var U;(U=this.downloadManager)==null||U.openOrDownloadData(this.content,this.filename)};class xa{constructor({div:l,accessibilityManager:U,annotationCanvasMap:Z,annotationEditorUIManager:d,page:Q,viewport:V,structTreeLayer:W}){h(this,W0);h(this,bW,null);h(this,Q0,null);h(this,V0,new Map);h(this,aW,null);this.div=l,b(this,bW,U),b(this,Q0,Z),b(this,aW,W||null),this.page=Q,this.viewport=V,this.zIndex=0,this._annotationEditorUIManager=d}hasEditableAnnotations(){return F(this,V0).size>0}async render(l){var V;const{annotations:U}=l,Z=this.div;aF(Z,this.viewport);const d=new Map,Q={data:null,layer:Z,linkService:l.linkService,downloadManager:l.downloadManager,imageResourcesPath:l.imageResourcesPath||"",renderForms:l.renderForms!==!1,svgFactory:new jt,annotationStorage:l.annotationStorage||new Lt,enableScripting:l.enableScripting===!0,hasJSActions:l.hasJSActions,fieldObjects:l.fieldObjects,parent:this,elements:null};for(const W of U){if(W.noHTML)continue;const c=W.annotationType===wl.POPUP;if(c){const s=d.get(W.id);if(!s)continue;Q.elements=s}else{const{width:s,height:n}=kd(W.rect);if(s<=0||n<=0)continue}Q.data=W;const t=Sa.create(Q);if(!t.isRenderable)continue;if(!c&&W.popupRef){const s=d.get(W.popupRef);s?s.push(t):d.set(W.popupRef,[t])}const R=t.render();W.hidden&&(R.style.visibility="hidden"),await m(this,W0,Wn).call(this,R,W.id),t._isEditable&&(F(this,V0).set(t.data.id,t),(V=this._annotationEditorUIManager)==null||V.renderAnnotationElement(t))}m(this,W0,jR).call(this)}update({viewport:l}){const U=this.div;this.viewport=l,aF(U,{rotation:l.rotation}),m(this,W0,jR).call(this),U.hidden=!1}getEditableAnnotations(){return Array.from(F(this,V0).values())}getEditableAnnotation(l){return F(this,V0).get(l)}}bW=new WeakMap,Q0=new WeakMap,V0=new WeakMap,aW=new WeakMap,W0=new WeakSet,Wn=async function(l,U){var V,W;const Z=l.firstChild||l,d=Z.id=`${Tt}${U}`,Q=await((V=F(this,aW))==null?void 0:V.getAriaAttributes(d));if(Q)for(const[c,t]of Q)Z.setAttribute(c,t);this.div.append(l),(W=F(this,bW))==null||W.moveElementInDOM(this.div,l,Z,!1)},jR=function(){if(!F(this,Q0))return;const l=this.div;for(const[U,Z]of F(this,Q0)){const d=l.querySelector(`[data-annotation-id="${U}"]`);if(!d)continue;Z.className="annotationContent";const{firstChild:Q}=d;Q?Q.nodeName==="CANVAS"?Q.replaceWith(Z):Q.classList.contains("annotationContent")?Q.after(Z):Q.before(Z):d.append(Z)}F(this,Q0).clear()};const bc=/\r\n?|\n/g,il=class il extends Yl{constructor(U){super({...U,name:"freeTextEditor"});h(this,El);h(this,iZ);h(this,jU,"");h(this,hW,`${this.id}-editor`);h(this,c0,null);h(this,OU);b(this,iZ,U.color||il._defaultColor||Yl._defaultLineColor),b(this,OU,U.fontSize||il._defaultFontSize)}static get _keyboardManager(){const U=il.prototype,Z=V=>V.isEmpty(),d=hF.TRANSLATE_SMALL,Q=hF.TRANSLATE_BIG;return _(this,"_keyboardManager",new dV([[["ctrl+s","mac+meta+s","ctrl+p","mac+meta+p"],U.commitOrRemove,{bubbles:!0}],[["ctrl+Enter","mac+meta+Enter","Escape","mac+Escape"],U.commitOrRemove],[["ArrowLeft","mac+ArrowLeft"],U._translateEmpty,{args:[-d,0],checker:Z}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],U._translateEmpty,{args:[-Q,0],checker:Z}],[["ArrowRight","mac+ArrowRight"],U._translateEmpty,{args:[d,0],checker:Z}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],U._translateEmpty,{args:[Q,0],checker:Z}],[["ArrowUp","mac+ArrowUp"],U._translateEmpty,{args:[0,-d],checker:Z}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],U._translateEmpty,{args:[0,-Q],checker:Z}],[["ArrowDown","mac+ArrowDown"],U._translateEmpty,{args:[0,d],checker:Z}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],U._translateEmpty,{args:[0,Q],checker:Z}]]))}static initialize(U,Z){Yl.initialize(U,Z);const d=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(d.getPropertyValue("--freetext-padding"))}static updateDefaultParams(U,Z){switch(U){case Zl.FREETEXT_SIZE:il._defaultFontSize=Z;break;case Zl.FREETEXT_COLOR:il._defaultColor=Z;break}}updateParams(U,Z){switch(U){case Zl.FREETEXT_SIZE:m(this,El,cn).call(this,Z);break;case Zl.FREETEXT_COLOR:m(this,El,tn).call(this,Z);break}}static get defaultPropertiesToUpdate(){return[[Zl.FREETEXT_SIZE,il._defaultFontSize],[Zl.FREETEXT_COLOR,il._defaultColor||Yl._defaultLineColor]]}get propertiesToUpdate(){return[[Zl.FREETEXT_SIZE,F(this,OU)],[Zl.FREETEXT_COLOR,F(this,iZ)]]}_translateEmpty(U,Z){this._uiManager.translateSelectedEditors(U,Z,!0)}getInitialTranslation(){const U=this.parentScale;return[-il._internalPadding*U,-(il._internalPadding+F(this,OU))*U]}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(this.isAttachedToDOM||this.parent.add(this)))}enableEditMode(){if(this.isInEditMode())return;this.parent.setEditingState(!1),this.parent.updateToolbar(v.FREETEXT),super.enableEditMode(),this.overlayDiv.classList.remove("enabled"),this.editorDiv.contentEditable=!0,this._isDraggable=!1,this.div.removeAttribute("aria-activedescendant"),b(this,c0,new AbortController);const U=this._uiManager.combinedSignal(F(this,c0));this.editorDiv.addEventListener("keydown",this.editorDivKeydown.bind(this),{signal:U}),this.editorDiv.addEventListener("focus",this.editorDivFocus.bind(this),{signal:U}),this.editorDiv.addEventListener("blur",this.editorDivBlur.bind(this),{signal:U}),this.editorDiv.addEventListener("input",this.editorDivInput.bind(this),{signal:U}),this.editorDiv.addEventListener("paste",this.editorDivPaste.bind(this),{signal:U})}disableEditMode(){var U;this.isInEditMode()&&(this.parent.setEditingState(!0),super.disableEditMode(),this.overlayDiv.classList.add("enabled"),this.editorDiv.contentEditable=!1,this.div.setAttribute("aria-activedescendant",F(this,hW)),this._isDraggable=!0,(U=F(this,c0))==null||U.abort(),b(this,c0,null),this.div.focus({preventScroll:!0}),this.isEditing=!1,this.parent.div.classList.add("freetextEditing"))}focusin(U){this._focusEventsAllowed&&(super.focusin(U),U.target!==this.editorDiv&&this.editorDiv.focus())}onceAdded(U){var Z;this.width||(this.enableEditMode(),U&&this.editorDiv.focus(),(Z=this._initialOptions)!=null&&Z.isCentered&&this.center(),this._initialOptions=null)}isEmpty(){return!this.editorDiv||this.editorDiv.innerText.trim()===""}remove(){this.isEditing=!1,this.parent&&(this.parent.setEditingState(!0),this.parent.div.classList.add("freetextEditing")),super.remove()}commit(){if(!this.isInEditMode())return;super.commit(),this.disableEditMode();const U=F(this,jU),Z=b(this,jU,m(this,El,Rn).call(this).trimEnd());if(U===Z)return;const d=Q=>{if(b(this,jU,Q),!Q){this.remove();return}m(this,El,Qt).call(this),this._uiManager.rebuild(this),m(this,El,dt).call(this)};this.addCommands({cmd:()=>{d(Z)},undo:()=>{d(U)},mustExec:!1}),m(this,El,dt).call(this)}shouldGetKeyboardEvents(){return this.isInEditMode()}enterInEditMode(){this.enableEditMode(),this.editorDiv.focus()}dblclick(U){this.enterInEditMode()}keydown(U){U.target===this.div&&U.key==="Enter"&&(this.enterInEditMode(),U.preventDefault())}editorDivKeydown(U){il._keyboardManager.exec(this,U)}editorDivFocus(U){this.isEditing=!0}editorDivBlur(U){this.isEditing=!1}editorDivInput(U){this.parent.div.classList.toggle("freetextEditing",this.isEmpty())}disableEditing(){this.editorDiv.setAttribute("role","comment"),this.editorDiv.removeAttribute("aria-multiline")}enableEditing(){this.editorDiv.setAttribute("role","textbox"),this.editorDiv.setAttribute("aria-multiline",!0)}render(){if(this.div)return this.div;let U,Z;this.width&&(U=this.x,Z=this.y),super.render(),this.editorDiv=document.createElement("div"),this.editorDiv.className="internal",this.editorDiv.setAttribute("id",F(this,hW)),this.editorDiv.setAttribute("data-l10n-id","pdfjs-free-text2"),this.editorDiv.setAttribute("data-l10n-attrs","default-content"),this.enableEditing(),this.editorDiv.contentEditable=!0;const{style:d}=this.editorDiv;if(d.fontSize=`calc(${F(this,OU)}px * var(--scale-factor))`,d.color=F(this,iZ),this.div.append(this.editorDiv),this.overlayDiv=document.createElement("div"),this.overlayDiv.classList.add("overlay","enabled"),this.div.append(this.overlayDiv),Vc(this,this.div,["dblclick","keydown"]),this.width){const[Q,V]=this.parentDimensions;if(this.annotationElementId){const{position:W}=this._initialData;let[c,t]=this.getInitialTranslation();[c,t]=this.pageTranslationToScreen(c,t);const[R,s]=this.pageDimensions,[n,a]=this.pageTranslation;let i,M;switch(this.rotation){case 0:i=U+(W[0]-n)/R,M=Z+this.height-(W[1]-a)/s;break;case 90:i=U+(W[0]-n)/R,M=Z-(W[1]-a)/s,[c,t]=[t,-c];break;case 180:i=U-this.width+(W[0]-n)/R,M=Z-(W[1]-a)/s,[c,t]=[-c,-t];break;case 270:i=U+(W[0]-n-this.height*s)/R,M=Z+(W[1]-a-this.width*R)/s,[c,t]=[-t,c];break}this.setAt(i*Q,M*V,c,t)}else this.setAt(U*Q,Z*V,this.width*Q,this.height*V);m(this,El,Qt).call(this),this._isDraggable=!0,this.editorDiv.contentEditable=!1}else this._isDraggable=!1,this.editorDiv.contentEditable=!0;return this.div}editorDivPaste(U){var i,M,G;const Z=U.clipboardData||window.clipboardData,{types:d}=Z;if(d.length===1&&d[0]==="text/plain")return;U.preventDefault();const Q=m(i=il,Md,OR).call(i,Z.getData("text")||"").replaceAll(bc,`
`);if(!Q)return;const V=window.getSelection();if(!V.rangeCount)return;this.editorDiv.normalize(),V.deleteFromDocument();const W=V.getRangeAt(0);if(!Q.includes(`
`)){W.insertNode(document.createTextNode(Q)),this.editorDiv.normalize(),V.collapseToStart();return}const{startContainer:c,startOffset:t}=W,R=[],s=[];if(c.nodeType===Node.TEXT_NODE){const J=c.parentElement;if(s.push(c.nodeValue.slice(t).replaceAll(bc,"")),J!==this.editorDiv){let S=R;for(const X of this.editorDiv.childNodes){if(X===J){S=s;continue}S.push(m(M=il,Md,Ft).call(M,X))}}R.push(c.nodeValue.slice(0,t).replaceAll(bc,""))}else if(c===this.editorDiv){let J=R,S=0;for(const X of this.editorDiv.childNodes)S++===t&&(J=s),J.push(m(G=il,Md,Ft).call(G,X))}b(this,jU,`${R.join(`
`)}${Q}${s.join(`
`)}`),m(this,El,Qt).call(this);const n=new Range;let a=R.reduce((J,S)=>J+S.length,0);for(const{firstChild:J}of this.editorDiv.childNodes)if(J.nodeType===Node.TEXT_NODE){const S=J.nodeValue.length;if(a<=S){n.setStart(J,a),n.setEnd(J,a);break}a-=S}V.removeAllRanges(),V.addRange(n)}get contentDiv(){return this.editorDiv}static async deserialize(U,Z,d){var W;let Q=null;if(U instanceof PN){const{data:{defaultAppearanceData:{fontSize:c,fontColor:t},rect:R,rotation:s,id:n,popupRef:a},textContent:i,textPosition:M,parent:{page:{pageNumber:G}}}=U;if(!i||i.length===0)return null;Q=U={annotationType:v.FREETEXT,color:Array.from(t),fontSize:c,value:i.join(`
`),position:M,pageIndex:G-1,rect:R.slice(0),rotation:s,id:n,deleted:!1,popupRef:a}}const V=await super.deserialize(U,Z,d);return b(V,OU,U.fontSize),b(V,iZ,C.makeHexColor(...U.color)),b(V,jU,m(W=il,Md,OR).call(W,U.value)),V.annotationElementId=U.id||null,V._initialData=Q,V}serialize(U=!1){if(this.isEmpty())return null;if(this.deleted)return this.serializeDeleted();const Z=il._internalPadding*this.parentScale,d=this.getRect(Z,Z),Q=Yl._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:F(this,iZ)),V={annotationType:v.FREETEXT,color:Q,fontSize:F(this,OU),value:m(this,El,Nn).call(this),pageIndex:this.pageIndex,rect:d,rotation:this.rotation,structTreeParentId:this._structTreeParentId};return U?V:this.annotationElementId&&!m(this,El,sn).call(this,V)?null:(V.id=this.annotationElementId,V)}renderAnnotationElement(U){const Z=super.renderAnnotationElement(U);if(this.deleted)return Z;const{style:d}=Z;d.fontSize=`calc(${F(this,OU)}px * var(--scale-factor))`,d.color=F(this,iZ),Z.replaceChildren();for(const V of F(this,jU).split(`
`)){const W=document.createElement("div");W.append(V?document.createTextNode(V):document.createElement("br")),Z.append(W)}const Q=il._internalPadding*this.parentScale;return U.updateEdited({rect:this.getRect(Q,Q),popupContent:F(this,jU)}),Z}resetAnnotationElement(U){super.resetAnnotationElement(U),U.resetEdited()}};iZ=new WeakMap,jU=new WeakMap,hW=new WeakMap,c0=new WeakMap,OU=new WeakMap,El=new WeakSet,cn=function(U){const Z=Q=>{this.editorDiv.style.fontSize=`calc(${Q}px * var(--scale-factor))`,this.translate(0,-(Q-F(this,OU))*this.parentScale),b(this,OU,Q),m(this,El,dt).call(this)},d=F(this,OU);this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Zl.FREETEXT_SIZE,overwriteIfSameType:!0,keepUndo:!0})},tn=function(U){const Z=Q=>{b(this,iZ,this.editorDiv.style.color=Q)},d=F(this,iZ);this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Zl.FREETEXT_COLOR,overwriteIfSameType:!0,keepUndo:!0})},Rn=function(){var d;const U=[];this.editorDiv.normalize();let Z=null;for(const Q of this.editorDiv.childNodes)(Z==null?void 0:Z.nodeType)===Node.TEXT_NODE&&Q.nodeName==="BR"||(U.push(m(d=il,Md,Ft).call(d,Q)),Z=Q);return U.join(`
`)},dt=function(){const[U,Z]=this.parentDimensions;let d;if(this.isAttachedToDOM)d=this.div.getBoundingClientRect();else{const{currentLayer:Q,div:V}=this,W=V.style.display,c=V.classList.contains("hidden");V.classList.remove("hidden"),V.style.display="hidden",Q.div.append(this.div),d=V.getBoundingClientRect(),V.remove(),V.style.display=W,V.classList.toggle("hidden",c)}this.rotation%180===this.parentRotation%180?(this.width=d.width/U,this.height=d.height/Z):(this.width=d.height/U,this.height=d.width/Z),this.fixAndSetPosition()},Md=new WeakSet,Ft=function(U){return(U.nodeType===Node.TEXT_NODE?U.nodeValue:U.innerText).replaceAll(bc,"")},Qt=function(){if(this.editorDiv.replaceChildren(),!!F(this,jU))for(const U of F(this,jU).split(`
`)){const Z=document.createElement("div");Z.append(U?document.createTextNode(U):document.createElement("br")),this.editorDiv.append(Z)}},Nn=function(){return F(this,jU).replaceAll(" "," ")},OR=function(U){return U.replaceAll(" "," ")},sn=function(U){const{value:Z,fontSize:d,color:Q,pageIndex:V}=this._initialData;return this._hasBeenMoved||U.value!==Z||U.fontSize!==d||U.color.some((W,c)=>W!==Q[c])||U.pageIndex!==V},h(il,Md),O(il,"_freeTextDefaultContent",""),O(il,"_internalPadding",0),O(il,"_defaultColor",null),O(il,"_defaultFontSize",10),O(il,"_type","freetext"),O(il,"_editorType",v.FREETEXT);let gt=il;class D{toSVGPath(){al("Abstract method `toSVGPath` must be implemented.")}get box(){al("Abstract getter `box` must be implemented.")}serialize(l,U){al("Abstract method `serialize` must be implemented.")}static _rescale(l,U,Z,d,Q,V){V||(V=new Float32Array(l.length));for(let W=0,c=l.length;W<c;W+=2)V[W]=U+l[W]*d,V[W+1]=Z+l[W+1]*Q;return V}static _rescaleAndSwap(l,U,Z,d,Q,V){V||(V=new Float32Array(l.length));for(let W=0,c=l.length;W<c;W+=2)V[W]=U+l[W+1]*d,V[W+1]=Z+l[W]*Q;return V}static _translate(l,U,Z,d){d||(d=new Float32Array(l.length));for(let Q=0,V=l.length;Q<V;Q+=2)d[Q]=U+l[Q],d[Q+1]=Z+l[Q+1];return d}static svgRound(l){return Math.round(l*1e4)}static _normalizePoint(l,U,Z,d,Q){switch(Q){case 90:return[1-U/Z,l/d];case 180:return[1-l/Z,1-U/d];case 270:return[U/Z,1-l/d];default:return[l/Z,U/d]}}static _normalizePagePoint(l,U,Z){switch(Z){case 90:return[1-U,l];case 180:return[1-l,1-U];case 270:return[U,1-l];default:return[l,U]}}static createBezierPoints(l,U,Z,d,Q,V){return[(l+5*Z)/6,(U+5*d)/6,(5*Z+Q)/6,(5*d+V)/6,(Z+Q)/2,(d+V)/2]}}O(D,"PRECISION",1e-4);const Jd=class Jd{constructor({x:l,y:U},Z,d,Q,V,W=0){h(this,Ol);h(this,rU);h(this,MZ,[]);h(this,hQ);h(this,mQ);h(this,wZ,[]);h(this,q,new Float32Array(18));h(this,t0);h(this,R0);h(this,mW);h(this,iW);h(this,iQ);h(this,MQ);h(this,UF,[]);b(this,rU,Z),b(this,MQ,Q*d),b(this,mQ,V),F(this,q).set([NaN,NaN,NaN,NaN,l,U],6),b(this,hQ,W),b(this,iW,F(Jd,MW)*d),b(this,mW,F(Jd,kc)*d),b(this,iQ,d),F(this,UF).push(l,U)}isEmpty(){return isNaN(F(this,q)[8])}add({x:l,y:U}){var w;b(this,t0,l),b(this,R0,U);const[Z,d,Q,V]=F(this,rU);let[W,c,t,R]=F(this,q).subarray(8,12);const s=l-t,n=U-R,a=Math.hypot(s,n);if(a<F(this,mW))return!1;const i=a-F(this,iW),M=i/a,G=M*s,J=M*n;let S=W,X=c;W=t,c=R,t+=G,R+=J,(w=F(this,UF))==null||w.push(l,U);const Y=-J/i,B=G/i,p=Y*F(this,MQ),e=B*F(this,MQ);return F(this,q).set(F(this,q).subarray(2,8),0),F(this,q).set([t+p,R+e],4),F(this,q).set(F(this,q).subarray(14,18),12),F(this,q).set([t-p,R-e],16),isNaN(F(this,q)[6])?(F(this,wZ).length===0&&(F(this,q).set([W+p,c+e],2),F(this,wZ).push(NaN,NaN,NaN,NaN,(W+p-Z)/Q,(c+e-d)/V),F(this,q).set([W-p,c-e],14),F(this,MZ).push(NaN,NaN,NaN,NaN,(W-p-Z)/Q,(c-e-d)/V)),F(this,q).set([S,X,W,c,t,R],6),!this.isEmpty()):(F(this,q).set([S,X,W,c,t,R],6),Math.abs(Math.atan2(X-c,S-W)-Math.atan2(J,G))<Math.PI/2?([W,c,t,R]=F(this,q).subarray(2,6),F(this,wZ).push(NaN,NaN,NaN,NaN,((W+t)/2-Z)/Q,((c+R)/2-d)/V),[W,c,S,X]=F(this,q).subarray(14,18),F(this,MZ).push(NaN,NaN,NaN,NaN,((S+W)/2-Z)/Q,((X+c)/2-d)/V),!0):([S,X,W,c,t,R]=F(this,q).subarray(0,6),F(this,wZ).push(((S+5*W)/6-Z)/Q,((X+5*c)/6-d)/V,((5*W+t)/6-Z)/Q,((5*c+R)/6-d)/V,((W+t)/2-Z)/Q,((c+R)/2-d)/V),[t,R,W,c,S,X]=F(this,q).subarray(12,18),F(this,MZ).push(((S+5*W)/6-Z)/Q,((X+5*c)/6-d)/V,((5*W+t)/6-Z)/Q,((5*c+R)/6-d)/V,((W+t)/2-Z)/Q,((c+R)/2-d)/V),!0))}toSVGPath(){if(this.isEmpty())return"";const l=F(this,wZ),U=F(this,MZ);if(isNaN(F(this,q)[6])&&!this.isEmpty())return m(this,Ol,nn).call(this);const Z=[];Z.push(`M${l[4]} ${l[5]}`);for(let d=6;d<l.length;d+=6)isNaN(l[d])?Z.push(`L${l[d+4]} ${l[d+5]}`):Z.push(`C${l[d]} ${l[d+1]} ${l[d+2]} ${l[d+3]} ${l[d+4]} ${l[d+5]}`);m(this,Ol,an).call(this,Z);for(let d=U.length-6;d>=6;d-=6)isNaN(U[d])?Z.push(`L${U[d+4]} ${U[d+5]}`):Z.push(`C${U[d]} ${U[d+1]} ${U[d+2]} ${U[d+3]} ${U[d+4]} ${U[d+5]}`);return m(this,Ol,bn).call(this,Z),Z.join(" ")}newFreeDrawOutline(l,U,Z,d,Q,V){return new qN(l,U,Z,d,Q,V)}getOutlines(){var s;const l=F(this,wZ),U=F(this,MZ),Z=F(this,q),[d,Q,V,W]=F(this,rU),c=new Float32Array((((s=F(this,UF))==null?void 0:s.length)??0)+2);for(let n=0,a=c.length-2;n<a;n+=2)c[n]=(F(this,UF)[n]-d)/V,c[n+1]=(F(this,UF)[n+1]-Q)/W;if(c[c.length-2]=(F(this,t0)-d)/V,c[c.length-1]=(F(this,R0)-Q)/W,isNaN(Z[6])&&!this.isEmpty())return m(this,Ol,hn).call(this,c);const t=new Float32Array(F(this,wZ).length+24+F(this,MZ).length);let R=l.length;for(let n=0;n<R;n+=2){if(isNaN(l[n])){t[n]=t[n+1]=NaN;continue}t[n]=l[n],t[n+1]=l[n+1]}R=m(this,Ol,Mn).call(this,t,R);for(let n=U.length-6;n>=6;n-=6)for(let a=0;a<6;a+=2){if(isNaN(U[n+a])){t[R]=t[R+1]=NaN,R+=2;continue}t[R]=U[n+a],t[R+1]=U[n+a+1],R+=2}return m(this,Ol,mn).call(this,t,R),this.newFreeDrawOutline(t,c,F(this,rU),F(this,iQ),F(this,hQ),F(this,mQ))}};rU=new WeakMap,MZ=new WeakMap,hQ=new WeakMap,mQ=new WeakMap,wZ=new WeakMap,q=new WeakMap,t0=new WeakMap,R0=new WeakMap,mW=new WeakMap,iW=new WeakMap,iQ=new WeakMap,MQ=new WeakMap,UF=new WeakMap,MW=new WeakMap,oc=new WeakMap,kc=new WeakMap,Ol=new WeakSet,HW=function(){const l=F(this,q).subarray(4,6),U=F(this,q).subarray(16,18),[Z,d,Q,V]=F(this,rU);return[(F(this,t0)+(l[0]-U[0])/2-Z)/Q,(F(this,R0)+(l[1]-U[1])/2-d)/V,(F(this,t0)+(U[0]-l[0])/2-Z)/Q,(F(this,R0)+(U[1]-l[1])/2-d)/V]},nn=function(){const[l,U,Z,d]=F(this,rU),[Q,V,W,c]=m(this,Ol,HW).call(this);return`M${(F(this,q)[2]-l)/Z} ${(F(this,q)[3]-U)/d} L${(F(this,q)[4]-l)/Z} ${(F(this,q)[5]-U)/d} L${Q} ${V} L${W} ${c} L${(F(this,q)[16]-l)/Z} ${(F(this,q)[17]-U)/d} L${(F(this,q)[14]-l)/Z} ${(F(this,q)[15]-U)/d} Z`},bn=function(l){const U=F(this,MZ);l.push(`L${U[4]} ${U[5]} Z`)},an=function(l){const[U,Z,d,Q]=F(this,rU),V=F(this,q).subarray(4,6),W=F(this,q).subarray(16,18),[c,t,R,s]=m(this,Ol,HW).call(this);l.push(`L${(V[0]-U)/d} ${(V[1]-Z)/Q} L${c} ${t} L${R} ${s} L${(W[0]-U)/d} ${(W[1]-Z)/Q}`)},hn=function(l){const U=F(this,q),[Z,d,Q,V]=F(this,rU),[W,c,t,R]=m(this,Ol,HW).call(this),s=new Float32Array(36);return s.set([NaN,NaN,NaN,NaN,(U[2]-Z)/Q,(U[3]-d)/V,NaN,NaN,NaN,NaN,(U[4]-Z)/Q,(U[5]-d)/V,NaN,NaN,NaN,NaN,W,c,NaN,NaN,NaN,NaN,t,R,NaN,NaN,NaN,NaN,(U[16]-Z)/Q,(U[17]-d)/V,NaN,NaN,NaN,NaN,(U[14]-Z)/Q,(U[15]-d)/V],0),this.newFreeDrawOutline(s,l,F(this,rU),F(this,iQ),F(this,hQ),F(this,mQ))},mn=function(l,U){const Z=F(this,MZ);return l.set([NaN,NaN,NaN,NaN,Z[4],Z[5]],U),U+=6},Mn=function(l,U){const Z=F(this,q).subarray(4,6),d=F(this,q).subarray(16,18),[Q,V,W,c]=F(this,rU),[t,R,s,n]=m(this,Ol,HW).call(this);return l.set([NaN,NaN,NaN,NaN,(Z[0]-Q)/W,(Z[1]-V)/c,NaN,NaN,NaN,NaN,t,R,NaN,NaN,NaN,NaN,s,n,NaN,NaN,NaN,NaN,(d[0]-Q)/W,(d[1]-V)/c],U),U+=24},h(Jd,MW,8),h(Jd,oc,2),h(Jd,kc,F(Jd,MW)+F(Jd,oc));let ac=Jd;class qN extends D{constructor(U,Z,d,Q,V,W){super();h(this,Dc);h(this,JQ);h(this,N0,new Float32Array(4));h(this,Gd);h(this,JW);h(this,gU);h(this,GW);h(this,Ll);b(this,Ll,U),b(this,gU,Z),b(this,JQ,d),b(this,GW,Q),b(this,Gd,V),b(this,JW,W),this.lastPoint=[NaN,NaN],m(this,Dc,Jn).call(this,W);const[c,t,R,s]=F(this,N0);for(let n=0,a=U.length;n<a;n+=2)U[n]=(U[n]-c)/R,U[n+1]=(U[n+1]-t)/s;for(let n=0,a=Z.length;n<a;n+=2)Z[n]=(Z[n]-c)/R,Z[n+1]=(Z[n+1]-t)/s}toSVGPath(){const U=[`M${F(this,Ll)[4]} ${F(this,Ll)[5]}`];for(let Z=6,d=F(this,Ll).length;Z<d;Z+=6){if(isNaN(F(this,Ll)[Z])){U.push(`L${F(this,Ll)[Z+4]} ${F(this,Ll)[Z+5]}`);continue}U.push(`C${F(this,Ll)[Z]} ${F(this,Ll)[Z+1]} ${F(this,Ll)[Z+2]} ${F(this,Ll)[Z+3]} ${F(this,Ll)[Z+4]} ${F(this,Ll)[Z+5]}`)}return U.push("Z"),U.join(" ")}serialize([U,Z,d,Q],V){const W=d-U,c=Q-Z;let t,R;switch(V){case 0:t=D._rescale(F(this,Ll),U,Q,W,-c),R=D._rescale(F(this,gU),U,Q,W,-c);break;case 90:t=D._rescaleAndSwap(F(this,Ll),U,Z,W,c),R=D._rescaleAndSwap(F(this,gU),U,Z,W,c);break;case 180:t=D._rescale(F(this,Ll),d,Z,-W,c),R=D._rescale(F(this,gU),d,Z,-W,c);break;case 270:t=D._rescaleAndSwap(F(this,Ll),d,Q,-W,-c),R=D._rescaleAndSwap(F(this,gU),d,Q,-W,-c);break}return{outline:Array.from(t),points:[Array.from(R)]}}get box(){return F(this,N0)}newOutliner(U,Z,d,Q,V,W=0){return new ac(U,Z,d,Q,V,W)}getNewOutline(U,Z){const[d,Q,V,W]=F(this,N0),[c,t,R,s]=F(this,JQ),n=V*R,a=W*s,i=d*R+c,M=Q*s+t,G=this.newOutliner({x:F(this,gU)[0]*n+i,y:F(this,gU)[1]*a+M},F(this,JQ),F(this,GW),U,F(this,JW),Z??F(this,Gd));for(let J=2;J<F(this,gU).length;J+=2)G.add({x:F(this,gU)[J]*n+i,y:F(this,gU)[J+1]*a+M});return G.getOutlines()}}JQ=new WeakMap,N0=new WeakMap,Gd=new WeakMap,JW=new WeakMap,gU=new WeakMap,GW=new WeakMap,Ll=new WeakMap,Dc=new WeakSet,Jn=function(U){const Z=F(this,Ll);let d=Z[4],Q=Z[5],V=d,W=Q,c=d,t=Q,R=d,s=Q;const n=U?Math.max:Math.min;for(let i=6,M=Z.length;i<M;i+=6){if(isNaN(Z[i]))V=Math.min(V,Z[i+4]),W=Math.min(W,Z[i+5]),c=Math.max(c,Z[i+4]),t=Math.max(t,Z[i+5]),s<Z[i+5]?(R=Z[i+4],s=Z[i+5]):s===Z[i+5]&&(R=n(R,Z[i+4]));else{const G=C.bezierBoundingBox(d,Q,...Z.slice(i,i+6));V=Math.min(V,G[0]),W=Math.min(W,G[1]),c=Math.max(c,G[2]),t=Math.max(t,G[3]),s<G[3]?(R=G[2],s=G[3]):s===G[3]&&(R=n(R,G[2]))}d=Z[i+4],Q=Z[i+5]}const a=F(this,N0);a[0]=V-F(this,Gd),a[1]=W-F(this,Gd),a[2]=c-V+2*F(this,Gd),a[3]=t-W+2*F(this,Gd),this.lastPoint=[R,s]};class Kt{constructor(l,U=0,Z=0,d=!0){h(this,mU);h(this,TW);h(this,SW);h(this,ZF,[]);h(this,JZ,[]);let Q=1/0,V=-1/0,W=1/0,c=-1/0;const R=10**-4;for(const{x:J,y:S,width:X,height:Y}of l){const B=Math.floor((J-U)/R)*R,p=Math.ceil((J+X+U)/R)*R,e=Math.floor((S-U)/R)*R,o=Math.ceil((S+Y+U)/R)*R,w=[B,e,o,!0],f=[p,e,o,!1];F(this,ZF).push(w,f),Q=Math.min(Q,B),V=Math.max(V,p),W=Math.min(W,e),c=Math.max(c,o)}const s=V-Q+2*Z,n=c-W+2*Z,a=Q-Z,i=W-Z,M=F(this,ZF).at(d?-1:-2),G=[M[0],M[2]];for(const J of F(this,ZF)){const[S,X,Y]=J;J[0]=(S-a)/s,J[1]=(X-i)/n,J[2]=(Y-i)/n}b(this,TW,new Float32Array([a,i,s,n])),b(this,SW,G)}getOutlines(){F(this,ZF).sort((U,Z)=>U[0]-Z[0]||U[1]-Z[1]||U[2]-Z[2]);const l=[];for(const U of F(this,ZF))U[3]?(l.push(...m(this,mU,rR).call(this,U)),m(this,mU,Tn).call(this,U)):(m(this,mU,Sn).call(this,U),l.push(...m(this,mU,rR).call(this,U)));return m(this,mU,Gn).call(this,l)}}TW=new WeakMap,SW=new WeakMap,ZF=new WeakMap,JZ=new WeakMap,mU=new WeakSet,Gn=function(l){const U=[],Z=new Set;for(const V of l){const[W,c,t]=V;U.push([W,c,V],[W,t,V])}U.sort((V,W)=>V[1]-W[1]||V[0]-W[0]);for(let V=0,W=U.length;V<W;V+=2){const c=U[V][2],t=U[V+1][2];c.push(t),t.push(c),Z.add(c),Z.add(t)}const d=[];let Q;for(;Z.size>0;){const V=Z.values().next().value;let[W,c,t,R,s]=V;Z.delete(V);let n=W,a=c;for(Q=[W,t],d.push(Q);;){let i;if(Z.has(R))i=R;else if(Z.has(s))i=s;else break;Z.delete(i),[W,c,t,R,s]=i,n!==W&&(Q.push(n,a,W,a===c?c:t),n=W),a=a===c?t:c}Q.push(n,a)}return new ja(d,F(this,TW),F(this,SW))},Vt=function(l){const U=F(this,JZ);let Z=0,d=U.length-1;for(;Z<=d;){const Q=Z+d>>1,V=U[Q][0];if(V===l)return Q;V<l?Z=Q+1:d=Q-1}return d+1},Tn=function([,l,U]){const Z=m(this,mU,Vt).call(this,l);F(this,JZ).splice(Z,0,[l,U])},Sn=function([,l,U]){const Z=m(this,mU,Vt).call(this,l);for(let d=Z;d<F(this,JZ).length;d++){const[Q,V]=F(this,JZ)[d];if(Q!==l)break;if(Q===l&&V===U){F(this,JZ).splice(d,1);return}}for(let d=Z-1;d>=0;d--){const[Q,V]=F(this,JZ)[d];if(Q!==l)break;if(Q===l&&V===U){F(this,JZ).splice(d,1);return}}},rR=function(l){const[U,Z,d]=l,Q=[[U,Z,d]],V=m(this,mU,Vt).call(this,d);for(let W=0;W<V;W++){const[c,t]=F(this,JZ)[W];for(let R=0,s=Q.length;R<s;R++){const[,n,a]=Q[R];if(!(t<=n||a<=c)){if(n>=c){if(a>t)Q[R][1]=t;else{if(s===1)return[];Q.splice(R,1),R--,s--}continue}Q[R][2]=c,a>t&&Q.push([U,t,a])}}}return Q};class ja extends D{constructor(U,Z,d){super();h(this,XW);h(this,GQ);b(this,GQ,U),b(this,XW,Z),this.lastPoint=d}toSVGPath(){const U=[];for(const Z of F(this,GQ)){let[d,Q]=Z;U.push(`M${d} ${Q}`);for(let V=2;V<Z.length;V+=2){const W=Z[V],c=Z[V+1];W===d?(U.push(`V${c}`),Q=c):c===Q&&(U.push(`H${W}`),d=W)}U.push("Z")}return U.join(" ")}serialize([U,Z,d,Q],V){const W=[],c=d-U,t=Q-Z;for(const R of F(this,GQ)){const s=new Array(R.length);for(let n=0;n<R.length;n+=2)s[n]=U+R[n]*c,s[n+1]=Q-R[n+1]*t;W.push(s)}return W}get box(){return F(this,XW)}get classNamesForOutlining(){return["highlightOutline"]}}XW=new WeakMap,GQ=new WeakMap;class Ht extends ac{newFreeDrawOutline(l,U,Z,d,Q,V){return new Oa(l,U,Z,d,Q,V)}}class Oa extends qN{newOutliner(l,U,Z,d,Q,V=0){return new Ht(l,U,Z,d,Q,V)}}const yU=class yU{constructor({editor:l=null,uiManager:U=null}){h(this,nl);h(this,GZ,null);h(this,s0,null);h(this,TQ);h(this,rl,null);h(this,YW,!1);h(this,SQ,!1);h(this,BW,null);h(this,eW);h(this,dF,null);h(this,TZ,null);h(this,XQ);var Z;l?(b(this,SQ,!1),b(this,XQ,Zl.HIGHLIGHT_COLOR),b(this,BW,l)):(b(this,SQ,!0),b(this,XQ,Zl.HIGHLIGHT_DEFAULT_COLOR)),b(this,TZ,(l==null?void 0:l._uiManager)||U),b(this,eW,F(this,TZ)._eventBus),b(this,TQ,(l==null?void 0:l.color)||((Z=F(this,TZ))==null?void 0:Z.highlightColors.values().next().value)||"#FFFF98"),F(yU,pW)||b(yU,pW,Object.freeze({blue:"pdfjs-editor-colorpicker-blue",green:"pdfjs-editor-colorpicker-green",pink:"pdfjs-editor-colorpicker-pink",red:"pdfjs-editor-colorpicker-red",yellow:"pdfjs-editor-colorpicker-yellow"}))}static get _keyboardManager(){return _(this,"_keyboardManager",new dV([[["Escape","mac+Escape"],yU.prototype._hideDropdownFromKeyboard],[[" ","mac+ "],yU.prototype._colorSelectFromKeyboard],[["ArrowDown","ArrowRight","mac+ArrowDown","mac+ArrowRight"],yU.prototype._moveToNext],[["ArrowUp","ArrowLeft","mac+ArrowUp","mac+ArrowLeft"],yU.prototype._moveToPrevious],[["Home","mac+Home"],yU.prototype._moveToBeginning],[["End","mac+End"],yU.prototype._moveToEnd]]))}renderButton(){const l=b(this,GZ,document.createElement("button"));l.className="colorPicker",l.tabIndex="0",l.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-button"),l.setAttribute("aria-haspopup",!0);const U=F(this,TZ)._signal;l.addEventListener("click",m(this,nl,u0).bind(this),{signal:U}),l.addEventListener("keydown",m(this,nl,HR).bind(this),{signal:U});const Z=b(this,s0,document.createElement("span"));return Z.className="swatch",Z.setAttribute("aria-hidden",!0),Z.style.backgroundColor=F(this,TQ),l.append(Z),l}renderMainDropdown(){const l=b(this,rl,m(this,nl,gR).call(this));return l.setAttribute("aria-orientation","horizontal"),l.setAttribute("aria-labelledby","highlightColorPickerLabel"),l}_colorSelectFromKeyboard(l){if(l.target===F(this,GZ)){m(this,nl,u0).call(this,l);return}const U=l.target.getAttribute("data-color");U&&m(this,nl,KR).call(this,U,l)}_moveToNext(l){var U,Z;if(!F(this,nl,nF)){m(this,nl,u0).call(this,l);return}if(l.target===F(this,GZ)){(U=F(this,rl).firstChild)==null||U.focus();return}(Z=l.target.nextSibling)==null||Z.focus()}_moveToPrevious(l){var U,Z;if(l.target===((U=F(this,rl))==null?void 0:U.firstChild)||l.target===F(this,GZ)){F(this,nl,nF)&&this._hideDropdownFromKeyboard();return}F(this,nl,nF)||m(this,nl,u0).call(this,l),(Z=l.target.previousSibling)==null||Z.focus()}_moveToBeginning(l){var U;if(!F(this,nl,nF)){m(this,nl,u0).call(this,l);return}(U=F(this,rl).firstChild)==null||U.focus()}_moveToEnd(l){var U;if(!F(this,nl,nF)){m(this,nl,u0).call(this,l);return}(U=F(this,rl).lastChild)==null||U.focus()}hideDropdown(){var l,U;(l=F(this,rl))==null||l.classList.add("hidden"),(U=F(this,dF))==null||U.abort(),b(this,dF,null)}_hideDropdownFromKeyboard(){var l;if(!F(this,SQ)){if(!F(this,nl,nF)){(l=F(this,BW))==null||l.unselect();return}this.hideDropdown(),F(this,GZ).focus({preventScroll:!0,focusVisible:F(this,YW)})}}updateColor(l){if(F(this,s0)&&(F(this,s0).style.backgroundColor=l),!F(this,rl))return;const U=F(this,TZ).highlightColors.values();for(const Z of F(this,rl).children)Z.setAttribute("aria-selected",U.next().value===l)}destroy(){var l,U;(l=F(this,GZ))==null||l.remove(),b(this,GZ,null),b(this,s0,null),(U=F(this,rl))==null||U.remove(),b(this,rl,null)}};GZ=new WeakMap,s0=new WeakMap,TQ=new WeakMap,rl=new WeakMap,YW=new WeakMap,SQ=new WeakMap,BW=new WeakMap,eW=new WeakMap,dF=new WeakMap,TZ=new WeakMap,XQ=new WeakMap,pW=new WeakMap,nl=new WeakSet,gR=function(){const l=document.createElement("div"),U=F(this,TZ)._signal;l.addEventListener("contextmenu",RZ,{signal:U}),l.className="dropdown",l.role="listbox",l.setAttribute("aria-multiselectable",!1),l.setAttribute("aria-orientation","vertical"),l.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-dropdown");for(const[Z,d]of F(this,TZ).highlightColors){const Q=document.createElement("button");Q.tabIndex="0",Q.role="option",Q.setAttribute("data-color",d),Q.title=Z,Q.setAttribute("data-l10n-id",F(yU,pW)[Z]);const V=document.createElement("span");Q.append(V),V.className="swatch",V.style.backgroundColor=d,Q.setAttribute("aria-selected",d===F(this,TQ)),Q.addEventListener("click",m(this,nl,KR).bind(this,d),{signal:U}),l.append(Q)}return l.addEventListener("keydown",m(this,nl,HR).bind(this),{signal:U}),l},KR=function(l,U){U.stopPropagation(),F(this,eW).dispatch("switchannotationeditorparams",{source:this,type:F(this,XQ),value:l})},HR=function(l){yU._keyboardManager.exec(this,l)},u0=function(l){if(F(this,nl,nF)){this.hideDropdown();return}if(b(this,YW,l.detail===0),F(this,dF)||(b(this,dF,new AbortController),window.addEventListener("pointerdown",m(this,nl,Xn).bind(this),{signal:F(this,TZ).combinedSignal(F(this,dF))})),F(this,rl)){F(this,rl).classList.remove("hidden");return}const U=b(this,rl,m(this,nl,gR).call(this));F(this,GZ).append(U)},Xn=function(l){var U;(U=F(this,rl))!=null&&U.contains(l.target)||this.hideDropdown()},nF=function(){return F(this,rl)&&!F(this,rl).classList.contains("hidden")},h(yU,pW,null);let hc=yU;const Wl=class Wl extends Yl{constructor(U){super({...U,name:"highlightEditor"});h(this,H);h(this,YQ,null);h(this,uW,0);h(this,Td);h(this,n0,null);h(this,BQ,null);h(this,zU,null);h(this,yW,null);h(this,zW,0);h(this,b0,null);h(this,ZZ,null);h(this,KU,null);h(this,lU,!1);h(this,eQ,null);h(this,Sd);h(this,tU,null);h(this,pQ,"");h(this,dZ);h(this,LW,"");this.color=U.color||Wl._defaultColor,b(this,dZ,U.thickness||Wl._defaultThickness),b(this,Sd,U.opacity||Wl._defaultOpacity),b(this,Td,U.boxes||null),b(this,LW,U.methodOfCreation||""),b(this,pQ,U.text||""),this._isDraggable=!1,U.highlightId>-1?(b(this,lU,!0),m(this,H,Wt).call(this,U),m(this,H,y0).call(this)):F(this,Td)&&(b(this,YQ,U.anchorNode),b(this,uW,U.anchorOffset),b(this,yW,U.focusNode),b(this,zW,U.focusOffset),m(this,H,vR).call(this),m(this,H,y0).call(this),this.rotate(this.rotation))}static get _keyboardManager(){const U=Wl.prototype;return _(this,"_keyboardManager",new dV([[["ArrowLeft","mac+ArrowLeft"],U._moveCaret,{args:[0]}],[["ArrowRight","mac+ArrowRight"],U._moveCaret,{args:[1]}],[["ArrowUp","mac+ArrowUp"],U._moveCaret,{args:[2]}],[["ArrowDown","mac+ArrowDown"],U._moveCaret,{args:[3]}]]))}get telemetryInitialData(){return{action:"added",type:F(this,lU)?"free_highlight":"highlight",color:this._uiManager.highlightColorNames.get(this.color),thickness:F(this,dZ),methodOfCreation:F(this,LW)}}get telemetryFinalData(){return{type:"highlight",color:this._uiManager.highlightColorNames.get(this.color)}}static computeTelemetryFinalData(U){return{numberOfColors:U.get("color").size}}static initialize(U,Z){var d;Yl.initialize(U,Z),Wl._defaultColor||(Wl._defaultColor=((d=Z.highlightColors)==null?void 0:d.values().next().value)||"#fff066")}static updateDefaultParams(U,Z){switch(U){case Zl.HIGHLIGHT_DEFAULT_COLOR:Wl._defaultColor=Z;break;case Zl.HIGHLIGHT_THICKNESS:Wl._defaultThickness=Z;break}}translateInPage(U,Z){}get toolbarPosition(){return F(this,eQ)}updateParams(U,Z){switch(U){case Zl.HIGHLIGHT_COLOR:m(this,H,Yn).call(this,Z);break;case Zl.HIGHLIGHT_THICKNESS:m(this,H,Bn).call(this,Z);break}}static get defaultPropertiesToUpdate(){return[[Zl.HIGHLIGHT_DEFAULT_COLOR,Wl._defaultColor],[Zl.HIGHLIGHT_THICKNESS,Wl._defaultThickness]]}get propertiesToUpdate(){return[[Zl.HIGHLIGHT_COLOR,this.color||Wl._defaultColor],[Zl.HIGHLIGHT_THICKNESS,F(this,dZ)||Wl._defaultThickness],[Zl.HIGHLIGHT_FREE,F(this,lU)]]}async addEditToolbar(){const U=await super.addEditToolbar();return U?(this._uiManager.highlightColors&&(b(this,BQ,new hc({editor:this})),U.addColorPicker(F(this,BQ))),U):null}disableEditing(){super.disableEditing(),this.div.classList.toggle("disabled",!0)}enableEditing(){super.enableEditing(),this.div.classList.toggle("disabled",!1)}fixAndSetPosition(){return super.fixAndSetPosition(m(this,H,vW).call(this))}getBaseTranslation(){return[0,0]}getRect(U,Z){return super.getRect(U,Z,m(this,H,vW).call(this))}onceAdded(U){this.annotationElementId||this.parent.addUndoableEditor(this),U&&this.div.focus()}remove(){m(this,H,PR).call(this),this._reportTelemetry({action:"deleted"}),super.remove()}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(m(this,H,y0).call(this),this.isAttachedToDOM||this.parent.add(this)))}setParent(U){var d;let Z=!1;this.parent&&!U?m(this,H,PR).call(this):U&&(m(this,H,y0).call(this,U),Z=!this.parent&&((d=this.div)==null?void 0:d.classList.contains("selectedEditor"))),super.setParent(U),this.show(this._isVisible),Z&&this.select()}rotate(U){var Q,V,W;const{drawLayer:Z}=this.parent;let d;F(this,lU)?(U=(U-this.rotation+360)%360,d=m(Q=Wl,FZ,fQ).call(Q,F(this,ZZ).box,U)):d=m(V=Wl,FZ,fQ).call(V,[this.x,this.y,this.width,this.height],U),Z.updateProperties(F(this,KU),{bbox:d,root:{"data-main-rotation":U}}),Z.updateProperties(F(this,tU),{bbox:m(W=Wl,FZ,fQ).call(W,F(this,zU).box,U),root:{"data-main-rotation":U}})}render(){if(this.div)return this.div;const U=super.render();F(this,pQ)&&(U.setAttribute("aria-label",F(this,pQ)),U.setAttribute("role","mark")),F(this,lU)?U.classList.add("free"):this.div.addEventListener("keydown",m(this,H,pn).bind(this),{signal:this._uiManager._signal});const Z=b(this,b0,document.createElement("div"));U.append(Z),Z.setAttribute("aria-hidden","true"),Z.className="internal",Z.style.clipPath=F(this,n0);const[d,Q]=this.parentDimensions;return this.setDims(this.width*d,this.height*Q),Vc(this,F(this,b0),["pointerover","pointerleave"]),this.enableEditing(),U}pointerover(){var U;this.isSelected||(U=this.parent)==null||U.drawLayer.updateProperties(F(this,tU),{rootClass:{hovered:!0}})}pointerleave(){var U;this.isSelected||(U=this.parent)==null||U.drawLayer.updateProperties(F(this,tU),{rootClass:{hovered:!1}})}_moveCaret(U){switch(this.parent.unselect(this),U){case 0:case 2:m(this,H,ct).call(this,!0);break;case 1:case 3:m(this,H,ct).call(this,!1);break}}select(){var U;super.select(),F(this,tU)&&((U=this.parent)==null||U.drawLayer.updateProperties(F(this,tU),{rootClass:{hovered:!1,selected:!0}}))}unselect(){var U;super.unselect(),F(this,tU)&&((U=this.parent)==null||U.drawLayer.updateProperties(F(this,tU),{rootClass:{selected:!1}}),F(this,lU)||m(this,H,ct).call(this,!1))}get _mustFixPosition(){return!F(this,lU)}show(U=this._isVisible){super.show(U),this.parent&&(this.parent.drawLayer.updateProperties(F(this,KU),{rootClass:{hidden:!U}}),this.parent.drawLayer.updateProperties(F(this,tU),{rootClass:{hidden:!U}}))}static startHighlighting(U,Z,{target:d,x:Q,y:V}){const{x:W,y:c,width:t,height:R}=d.getBoundingClientRect(),s=new AbortController,n=U.combinedSignal(s),a=i=>{s.abort(),m(this,FZ,Ln).call(this,U,i)};window.addEventListener("blur",a,{signal:n}),window.addEventListener("pointerup",a,{signal:n}),window.addEventListener("pointerdown",kU,{capture:!0,passive:!1,signal:n}),window.addEventListener("contextmenu",RZ,{signal:n}),d.addEventListener("pointermove",m(this,FZ,zn).bind(this,U),{signal:n}),this._freeHighlight=new Ht({x:Q,y:V},[W,c,t,R],U.scale,this._defaultThickness/2,Z,.001),{id:this._freeHighlightId,clipPathId:this._freeHighlightClipId}=U.drawLayer.draw({bbox:[0,0,1,1],root:{viewBox:"0 0 1 1",fill:this._defaultColor,"fill-opacity":this._defaultOpacity},rootClass:{highlight:!0,free:!0},path:{d:this._freeHighlight.toSVGPath()}},!0,!0)}static async deserialize(U,Z,d){var M,G,J,S;let Q=null;if(U instanceof AN){const{data:{quadPoints:X,rect:Y,rotation:B,id:p,color:e,opacity:o,popupRef:w},parent:{page:{pageNumber:f}}}=U;Q=U={annotationType:v.HIGHLIGHT,color:Array.from(e),opacity:o,quadPoints:X,boxes:null,pageIndex:f-1,rect:Y.slice(0),rotation:B,id:p,deleted:!1,popupRef:w}}else if(U instanceof rt){const{data:{inkLists:X,rect:Y,rotation:B,id:p,color:e,borderStyle:{rawWidth:o},popupRef:w},parent:{page:{pageNumber:f}}}=U;Q=U={annotationType:v.HIGHLIGHT,color:Array.from(e),thickness:o,inkLists:X,boxes:null,pageIndex:f-1,rect:Y.slice(0),rotation:B,id:p,deleted:!1,popupRef:w}}const{color:V,quadPoints:W,inkLists:c,opacity:t}=U,R=await super.deserialize(U,Z,d);R.color=C.makeHexColor(...V),b(R,Sd,t||1),c&&b(R,dZ,U.thickness),R.annotationElementId=U.id||null,R._initialData=Q;const[s,n]=R.pageDimensions,[a,i]=R.pageTranslation;if(W){const X=b(R,Td,[]);for(let Y=0;Y<W.length;Y+=8)X.push({x:(W[Y]-a)/s,y:1-(W[Y+1]-i)/n,width:(W[Y+2]-W[Y])/s,height:(W[Y+1]-W[Y+5])/n});m(M=R,H,vR).call(M),m(G=R,H,y0).call(G),R.rotate(R.rotation)}else if(c){b(R,lU,!0);const X=c[0],Y={x:X[0]-a,y:n-(X[1]-i)},B=new Ht(Y,[0,0,s,n],1,F(R,dZ)/2,!0,.001);for(let o=0,w=X.length;o<w;o+=2)Y.x=X[o]-a,Y.y=n-(X[o+1]-i),B.add(Y);const{id:p,clipPathId:e}=Z.drawLayer.draw({bbox:[0,0,1,1],root:{viewBox:"0 0 1 1",fill:R.color,"fill-opacity":R._defaultOpacity},rootClass:{highlight:!0,free:!0},path:{d:B.toSVGPath()}},!0,!0);m(J=R,H,Wt).call(J,{highlightOutlines:B.getOutlines(),highlightId:p,clipPathId:e}),m(S=R,H,y0).call(S)}return R}serialize(U=!1){if(this.isEmpty()||U)return null;if(this.deleted)return this.serializeDeleted();const Z=this.getRect(0,0),d=Yl._colorManager.convert(this.color),Q={annotationType:v.HIGHLIGHT,color:d,opacity:F(this,Sd),thickness:F(this,dZ),quadPoints:m(this,H,un).call(this),outlines:m(this,H,yn).call(this,Z),pageIndex:this.pageIndex,rect:Z,rotation:m(this,H,vW).call(this),structTreeParentId:this._structTreeParentId};return this.annotationElementId&&!m(this,H,on).call(this,Q)?null:(Q.id=this.annotationElementId,Q)}renderAnnotationElement(U){return U.updateEdited({rect:this.getRect(0,0)}),null}static canCreateNewEmptyEditor(){return!1}};YQ=new WeakMap,uW=new WeakMap,Td=new WeakMap,n0=new WeakMap,BQ=new WeakMap,zU=new WeakMap,yW=new WeakMap,zW=new WeakMap,b0=new WeakMap,ZZ=new WeakMap,KU=new WeakMap,lU=new WeakMap,eQ=new WeakMap,Sd=new WeakMap,tU=new WeakMap,pQ=new WeakMap,dZ=new WeakMap,LW=new WeakMap,H=new WeakSet,vR=function(){const U=new Kt(F(this,Td),.001);b(this,ZZ,U.getOutlines()),[this.x,this.y,this.width,this.height]=F(this,ZZ).box;const Z=new Kt(F(this,Td),.0025,.001,this._uiManager.direction==="ltr");b(this,zU,Z.getOutlines());const{lastPoint:d}=F(this,zU);b(this,eQ,[(d[0]-this.x)/this.width,(d[1]-this.y)/this.height])},Wt=function({highlightOutlines:U,highlightId:Z,clipPathId:d}){var s,n;if(b(this,ZZ,U),b(this,zU,U.getNewOutline(F(this,dZ)/2+1.5,.0025)),Z>=0)b(this,KU,Z),b(this,n0,d),this.parent.drawLayer.finalizeDraw(Z,{bbox:U.box,path:{d:U.toSVGPath()}}),b(this,tU,this.parent.drawLayer.drawOutline({rootClass:{highlightOutline:!0,free:!0},bbox:F(this,zU).box,path:{d:F(this,zU).toSVGPath()}},!0));else if(this.parent){const a=this.parent.viewport.rotation;this.parent.drawLayer.updateProperties(F(this,KU),{bbox:m(s=Wl,FZ,fQ).call(s,F(this,ZZ).box,(a-this.rotation+360)%360),path:{d:U.toSVGPath()}}),this.parent.drawLayer.updateProperties(F(this,tU),{bbox:m(n=Wl,FZ,fQ).call(n,F(this,zU).box,a),path:{d:F(this,zU).toSVGPath()}})}const[V,W,c,t]=U.box;switch(this.rotation){case 0:this.x=V,this.y=W,this.width=c,this.height=t;break;case 90:{const[a,i]=this.parentDimensions;this.x=W,this.y=1-V,this.width=c*i/a,this.height=t*a/i;break}case 180:this.x=1-V,this.y=1-W,this.width=c,this.height=t;break;case 270:{const[a,i]=this.parentDimensions;this.x=1-W,this.y=V,this.width=c*i/a,this.height=t*a/i;break}}const{lastPoint:R}=F(this,zU);b(this,eQ,[(R[0]-V)/c,(R[1]-W)/t])},Yn=function(U){const Z=(V,W)=>{var c,t;this.color=V,b(this,Sd,W),(c=this.parent)==null||c.drawLayer.updateProperties(F(this,KU),{root:{fill:V,"fill-opacity":W}}),(t=F(this,BQ))==null||t.updateColor(V)},d=this.color,Q=F(this,Sd);this.addCommands({cmd:Z.bind(this,U,Wl._defaultOpacity),undo:Z.bind(this,d,Q),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Zl.HIGHLIGHT_COLOR,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"color_changed",color:this._uiManager.highlightColorNames.get(U)},!0)},Bn=function(U){const Z=F(this,dZ),d=Q=>{b(this,dZ,Q),m(this,H,en).call(this,Q)};this.addCommands({cmd:d.bind(this,U),undo:d.bind(this,Z),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Zl.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"thickness_changed",thickness:U},!0)},en=function(U){if(!F(this,lU))return;m(this,H,Wt).call(this,{highlightOutlines:F(this,ZZ).getNewOutline(U/2)}),this.fixAndSetPosition();const[Z,d]=this.parentDimensions;this.setDims(this.width*Z,this.height*d)},PR=function(){F(this,KU)===null||!this.parent||(this.parent.drawLayer.remove(F(this,KU)),b(this,KU,null),this.parent.drawLayer.remove(F(this,tU)),b(this,tU,null))},y0=function(U=this.parent){F(this,KU)===null&&({id:SU(this,KU)._,clipPathId:SU(this,n0)._}=U.drawLayer.draw({bbox:F(this,ZZ).box,root:{viewBox:"0 0 1 1",fill:this.color,"fill-opacity":F(this,Sd)},rootClass:{highlight:!0,free:F(this,lU)},path:{d:F(this,ZZ).toSVGPath()}},!1,!0),b(this,tU,U.drawLayer.drawOutline({rootClass:{highlightOutline:!0,free:F(this,lU)},bbox:F(this,zU).box,path:{d:F(this,zU).toSVGPath()}},F(this,lU))),F(this,b0)&&(F(this,b0).style.clipPath=F(this,n0)))},FZ=new WeakSet,fQ=function([U,Z,d,Q],V){switch(V){case 90:return[1-Z-Q,U,Q,d];case 180:return[1-U-d,1-Z-Q,d,Q];case 270:return[Z,1-U-d,Q,d]}return[U,Z,d,Q]},pn=function(U){Wl._keyboardManager.exec(this,U)},ct=function(U){if(!F(this,YQ))return;const Z=window.getSelection();U?Z.setPosition(F(this,YQ),F(this,uW)):Z.setPosition(F(this,yW),F(this,zW))},vW=function(){return F(this,lU)?this.rotation:0},un=function(){if(F(this,lU))return null;const[U,Z]=this.pageDimensions,[d,Q]=this.pageTranslation,V=F(this,Td),W=new Float32Array(V.length*8);let c=0;for(const{x:t,y:R,width:s,height:n}of V){const a=t*U+d,i=(1-R)*Z+Q;W[c]=W[c+4]=a,W[c+1]=W[c+3]=i,W[c+2]=W[c+6]=a+s*U,W[c+5]=W[c+7]=i-n*Z,c+=8}return W},yn=function(U){return F(this,ZZ).serialize(U,m(this,H,vW).call(this))},zn=function(U,Z){this._freeHighlight.add(Z)&&U.drawLayer.updateProperties(this._freeHighlightId,{path:{d:this._freeHighlight.toSVGPath()}})},Ln=function(U,Z){this._freeHighlight.isEmpty()?U.drawLayer.remove(this._freeHighlightId):U.createAndAddNewEditor(Z,!1,{highlightId:this._freeHighlightId,highlightOutlines:this._freeHighlight.getOutlines(),clipPathId:this._freeHighlightClipId,methodOfCreation:"main_toolbar"}),this._freeHighlightId=-1,this._freeHighlight=null,this._freeHighlightClipId=""},on=function(U){const{color:Z}=this._initialData;return U.color.some((d,Q)=>d!==Z[Q])},h(Wl,FZ),O(Wl,"_defaultColor",null),O(Wl,"_defaultOpacity",1),O(Wl,"_defaultThickness",12),O(Wl,"_type","highlight"),O(Wl,"_editorType",v.HIGHLIGHT),O(Wl,"_freeHighlightId",-1),O(Wl,"_freeHighlight",null),O(Wl,"_freeHighlightClipId","");let mc=Wl;class ra{constructor(){h(this,a0,Object.create(null))}updateProperty(l,U){this[l]=U,this.updateSVGProperty(l,U)}updateProperties(l){if(l)for(const[U,Z]of Object.entries(l))this.updateProperty(U,Z)}updateSVGProperty(l,U){F(this,a0)[l]=U}toSVGProperties(){const l=F(this,a0);return b(this,a0,Object.create(null)),{root:l}}reset(){b(this,a0,Object.create(null))}updateAll(l=this){this.updateProperties(l)}clone(){al("Not implemented")}}a0=new WeakMap;const I=class I extends Yl{constructor(U){super(U);h(this,Ql);h(this,HU,null);h(this,uQ);O(this,"_drawId",null);b(this,uQ,U.mustBeCommitted||!1),U.drawOutlines&&(m(this,Ql,fR).call(this,U),m(this,Ql,PW).call(this))}static _mergeSVGProperties(U,Z){const d=new Set(Object.keys(U));for(const[Q,V]of Object.entries(Z))d.has(Q)?Object.assign(U[Q],V):U[Q]=V;return U}static getDefaultDrawingOptions(U){al("Not implemented")}static get typesMap(){al("Not implemented")}static get isDrawer(){return!0}static get supportMultipleDrawings(){return!1}static updateDefaultParams(U,Z){const d=this.typesMap.get(U);d&&this._defaultDrawingOptions.updateProperty(d,Z),this._currentParent&&(F(I,Pl).updateProperty(d,Z),this._currentParent.drawLayer.updateProperties(this._currentDrawId,this._defaultDrawingOptions.toSVGProperties()))}updateParams(U,Z){const d=this.constructor.typesMap.get(U);d&&this._updateProperty(U,d,Z)}static get defaultPropertiesToUpdate(){const U=[],Z=this._defaultDrawingOptions;for(const[d,Q]of this.typesMap)U.push([d,Z[Q]]);return U}get propertiesToUpdate(){const U=[],{_drawingOptions:Z}=this;for(const[d,Q]of this.constructor.typesMap)U.push([d,Z[Q]]);return U}_updateProperty(U,Z,d){const Q=this._drawingOptions,V=Q[Z],W=c=>{var R;Q.updateProperty(Z,c);const t=F(this,HU).updateProperty(Z,c);t&&m(this,Ql,fW).call(this,t),(R=this.parent)==null||R.drawLayer.updateProperties(this._drawId,Q.toSVGProperties())};this.addCommands({cmd:W.bind(this,d),undo:W.bind(this,V),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:U,overwriteIfSameType:!0,keepUndo:!0})}_onResizing(){var U;(U=this.parent)==null||U.drawLayer.updateProperties(this._drawId,I._mergeSVGProperties(F(this,HU).getPathResizingSVGProperties(m(this,Ql,tt).call(this)),{bbox:m(this,Ql,AQ).call(this)}))}_onResized(){var U;(U=this.parent)==null||U.drawLayer.updateProperties(this._drawId,I._mergeSVGProperties(F(this,HU).getPathResizedSVGProperties(m(this,Ql,tt).call(this)),{bbox:m(this,Ql,AQ).call(this)}))}_onTranslating(U,Z){var d;(d=this.parent)==null||d.drawLayer.updateProperties(this._drawId,{bbox:m(this,Ql,AQ).call(this,U,Z)})}_onTranslated(){var U;(U=this.parent)==null||U.drawLayer.updateProperties(this._drawId,I._mergeSVGProperties(F(this,HU).getPathTranslatedSVGProperties(m(this,Ql,tt).call(this),this.parentDimensions),{bbox:m(this,Ql,AQ).call(this)}))}_onStartDragging(){var U;(U=this.parent)==null||U.drawLayer.updateProperties(this._drawId,{rootClass:{moving:!0}})}_onStopDragging(){var U;(U=this.parent)==null||U.drawLayer.updateProperties(this._drawId,{rootClass:{moving:!1}})}commit(){super.commit(),this.disableEditMode(),this.disableEditing()}disableEditing(){super.disableEditing(),this.div.classList.toggle("disabled",!0)}enableEditing(){super.enableEditing(),this.div.classList.toggle("disabled",!1)}getBaseTranslation(){return[0,0]}get isResizable(){return!0}onceAdded(U){this.annotationElementId||this.parent.addUndoableEditor(this),this._isDraggable=!0,F(this,uQ)&&(b(this,uQ,!1),this.commit(),this.parent.setSelected(this),U&&this.isOnScreen&&this.div.focus())}remove(){m(this,Ql,_R).call(this),super.remove()}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(m(this,Ql,PW).call(this),m(this,Ql,fW).call(this,F(this,HU).box),this.isAttachedToDOM||this.parent.add(this)))}setParent(U){var d;let Z=!1;this.parent&&!U?(this._uiManager.removeShouldRescale(this),m(this,Ql,_R).call(this)):U&&(this._uiManager.addShouldRescale(this),m(this,Ql,PW).call(this,U),Z=!this.parent&&((d=this.div)==null?void 0:d.classList.contains("selectedEditor"))),super.setParent(U),Z&&this.select()}rotate(){this.parent&&this.parent.drawLayer.updateProperties(this._drawId,I._mergeSVGProperties({bbox:m(this,Ql,AQ).call(this)},F(this,HU).updateRotation((this.parentRotation-this.rotation+360)%360)))}onScaleChanging(){this.parent&&m(this,Ql,fW).call(this,F(this,HU).updateParentDimensions(this.parentDimensions,this.parent.scale))}static onScaleChangingWhenDrawing(){}render(){if(this.div)return this.div;const U=super.render();U.classList.add("draw");const Z=document.createElement("div");U.append(Z),Z.setAttribute("aria-hidden","true"),Z.className="internal";const[d,Q]=this.parentDimensions;return this.setDims(this.width*d,this.height*Q),this._uiManager.addShouldRescale(this),this.disableEditing(),U}static createDrawerInstance(U,Z,d,Q,V){al("Not implemented")}static startDrawing(U,Z,d,Q){var G;const{target:V,offsetX:W,offsetY:c,pointerId:t,pointerType:R}=Q;if(F(I,QF)&&F(I,QF)!==R)return;const{viewport:{rotation:s}}=U,{width:n,height:a}=V.getBoundingClientRect(),i=b(I,h0,new AbortController),M=U.combinedSignal(i);if(F(I,FF)||b(I,FF,t),F(I,QF)??b(I,QF,R),window.addEventListener("pointerup",J=>{var S;F(I,FF)===J.pointerId?this._endDraw(J):(S=F(I,VF))==null||S.delete(J.pointerId)},{signal:M}),window.addEventListener("pointercancel",J=>{var S;F(I,FF)===J.pointerId?this._currentParent.endDrawingSession():(S=F(I,VF))==null||S.delete(J.pointerId)},{signal:M}),window.addEventListener("pointerdown",J=>{F(I,QF)===J.pointerType&&((F(I,VF)||b(I,VF,new Set)).add(J.pointerId),F(I,Pl).isCancellable()&&(F(I,Pl).removeLastElement(),F(I,Pl).isEmpty()?this._currentParent.endDrawingSession(!0):this._endDraw(null)))},{capture:!0,passive:!1,signal:M}),window.addEventListener("contextmenu",RZ,{signal:M}),V.addEventListener("pointermove",this._drawMove.bind(this),{signal:M}),V.addEventListener("touchmove",J=>{J.timeStamp===F(I,i0)&&kU(J)},{signal:M}),U.toggleDrawing(),(G=Z._editorUndoBar)==null||G.hide(),F(I,Pl)){U.drawLayer.updateProperties(this._currentDrawId,F(I,Pl).startNew(W,c,n,a,s));return}Z.updateUIForDefaultProperties(this),b(I,Pl,this.createDrawerInstance(W,c,n,a,s)),b(I,m0,this.getDefaultDrawingOptions()),this._currentParent=U,{id:this._currentDrawId}=U.drawLayer.draw(this._mergeSVGProperties(F(I,m0).toSVGProperties(),F(I,Pl).defaultSVGProperties),!0,!1)}static _drawMove(U){var V;if(b(I,i0,-1),!F(I,Pl))return;const{offsetX:Z,offsetY:d,pointerId:Q}=U;if(F(I,FF)===Q){if(((V=F(I,VF))==null?void 0:V.size)>=1){this._endDraw(U);return}this._currentParent.drawLayer.updateProperties(this._currentDrawId,F(I,Pl).add(Z,d)),b(I,i0,U.timeStamp),kU(U)}}static _cleanup(U){U&&(this._currentDrawId=-1,this._currentParent=null,b(I,Pl,null),b(I,m0,null),b(I,QF,null),b(I,i0,NaN)),F(I,h0)&&(F(I,h0).abort(),b(I,h0,null),b(I,FF,NaN),b(I,VF,null))}static _endDraw(U){const Z=this._currentParent;if(Z){if(Z.toggleDrawing(!0),this._cleanup(!1),U&&Z.drawLayer.updateProperties(this._currentDrawId,F(I,Pl).end(U.offsetX,U.offsetY)),this.supportMultipleDrawings){const d=F(I,Pl),Q=this._currentDrawId,V=d.getLastElement();Z.addCommands({cmd:()=>{Z.drawLayer.updateProperties(Q,d.setLastElement(V))},undo:()=>{Z.drawLayer.updateProperties(Q,d.removeLastElement())},mustExec:!1,type:Zl.DRAW_STEP});return}this.endDrawing(!1)}}static endDrawing(U){const Z=this._currentParent;if(!Z)return null;if(Z.toggleDrawing(!0),Z.cleanUndoStack(Zl.DRAW_STEP),!F(I,Pl).isEmpty()){const{pageDimensions:[d,Q],scale:V}=Z,W=Z.createAndAddNewEditor({offsetX:0,offsetY:0},!1,{drawId:this._currentDrawId,drawOutlines:F(I,Pl).getOutlines(d*V,Q*V,V,this._INNER_MARGIN),drawingOptions:F(I,m0),mustBeCommitted:!U});return this._cleanup(!0),W}return Z.drawLayer.remove(this._currentDrawId),this._cleanup(!0),null}createDrawingOptions(U){}static deserializeDraw(U,Z,d,Q,V,W){al("Not implemented")}static async deserialize(U,Z,d){var s,n;const{rawDims:{pageWidth:Q,pageHeight:V,pageX:W,pageY:c}}=Z.viewport,t=this.deserializeDraw(W,c,Q,V,this._INNER_MARGIN,U),R=await super.deserialize(U,Z,d);return R.createDrawingOptions(U),m(s=R,Ql,fR).call(s,{drawOutlines:t}),m(n=R,Ql,PW).call(n),R.onScaleChanging(),R.rotate(),R}serializeDraw(U){const[Z,d]=this.pageTranslation,[Q,V]=this.pageDimensions;return F(this,HU).serialize([Z,d,Q,V],U)}renderAnnotationElement(U){return U.updateEdited({rect:this.getRect(0,0)}),null}static canCreateNewEmptyEditor(){return!1}};HU=new WeakMap,uQ=new WeakMap,Pl=new WeakMap,h0=new WeakMap,m0=new WeakMap,FF=new WeakMap,QF=new WeakMap,VF=new WeakMap,i0=new WeakMap,Ql=new WeakSet,fR=function({drawOutlines:U,drawId:Z,drawingOptions:d}){b(this,HU,U),this._drawingOptions||(this._drawingOptions=d),Z>=0?(this._drawId=Z,this.parent.drawLayer.finalizeDraw(Z,U.defaultProperties)):this._drawId=m(this,Ql,AR).call(this,U,this.parent),m(this,Ql,fW).call(this,U.box)},AR=function(U,Z){const{id:d}=Z.drawLayer.draw(I._mergeSVGProperties(this._drawingOptions.toSVGProperties(),U.defaultSVGProperties),!1,!1);return d},_R=function(){this._drawId===null||!this.parent||(this.parent.drawLayer.remove(this._drawId),this._drawId=null,this._drawingOptions.reset())},PW=function(U=this.parent){if(!(this._drawId!==null&&this.parent===U)){if(this._drawId!==null){this.parent.drawLayer.updateParent(this._drawId,U.drawLayer);return}this._drawingOptions.updateAll(),this._drawId=m(this,Ql,AR).call(this,F(this,HU),U)}},kn=function([U,Z,d,Q]){const{parentDimensions:[V,W],rotation:c}=this;switch(c){case 90:return[Z,1-U,d*(W/V),Q*(V/W)];case 180:return[1-U,1-Z,d,Q];case 270:return[1-Z,U,d*(W/V),Q*(V/W)];default:return[U,Z,d,Q]}},tt=function(){const{x:U,y:Z,width:d,height:Q,parentDimensions:[V,W],rotation:c}=this;switch(c){case 90:return[1-Z,U,d*(V/W),Q*(W/V)];case 180:return[1-U,1-Z,d,Q];case 270:return[Z,1-U,d*(V/W),Q*(W/V)];default:return[U,Z,d,Q]}},fW=function(U){if([this.x,this.y,this.width,this.height]=m(this,Ql,kn).call(this,U),this.div){this.fixAndSetPosition();const[Z,d]=this.parentDimensions;this.setDims(this.width*Z,this.height*d)}this._onResized()},AQ=function(){const{x:U,y:Z,width:d,height:Q,rotation:V,parentRotation:W,parentDimensions:[c,t]}=this;switch((V*4+W)/90){case 1:return[1-Z-Q,U,Q,d];case 2:return[1-U-d,1-Z-Q,d,Q];case 3:return[Z,1-U-d,Q,d];case 4:return[U,Z-d*(c/t),Q*(t/c),d*(c/t)];case 5:return[1-Z,U,d*(c/t),Q*(t/c)];case 6:return[1-U-Q*(t/c),1-Z,Q*(t/c),d*(c/t)];case 7:return[Z-d*(c/t),1-U-Q*(t/c),d*(c/t),Q*(t/c)];case 8:return[U-d,Z-Q,d,Q];case 9:return[1-Z,U-d,Q,d];case 10:return[1-U,1-Z,d,Q];case 11:return[Z-Q,1-U,Q,d];case 12:return[U-Q*(t/c),Z,Q*(t/c),d*(c/t)];case 13:return[1-Z-d*(c/t),U-Q*(t/c),d*(c/t),Q*(t/c)];case 14:return[1-U,1-Z-d*(c/t),Q*(t/c),d*(c/t)];case 15:return[Z,1-U,d*(c/t),Q*(t/c)];default:return[U,Z,d,Q]}},O(I,"_currentDrawId",-1),O(I,"_currentParent",null),h(I,Pl,null),h(I,h0,null),h(I,m0,null),h(I,FF,NaN),h(I,QF,null),h(I,VF,null),h(I,i0,NaN),O(I,"_INNER_MARGIN",3);let vt=I;class ga{constructor(l,U,Z,d,Q,V){h(this,zQ);h(this,xZ,new Float64Array(6));h(this,fl);h(this,Al);h(this,M0);h(this,yQ);h(this,iU);h(this,UU,"");h(this,QZ,0);h(this,J0,new ic);h(this,G0);h(this,T0);b(this,G0,Z),b(this,T0,d),b(this,M0,Q),b(this,yQ,V),[l,U]=m(this,zQ,Rt).call(this,l,U);const W=b(this,fl,[NaN,NaN,NaN,NaN,l,U]);b(this,iU,[l,U]),b(this,Al,[{line:W,points:F(this,iU)}]),F(this,xZ).set(W,0)}updateProperty(l,U){l==="stroke-width"&&b(this,yQ,U)}isEmpty(){return!F(this,Al)||F(this,Al).length===0}isCancellable(){return F(this,iU).length<=10}add(l,U){[l,U]=m(this,zQ,Rt).call(this,l,U);const[Z,d,Q,V]=F(this,xZ).subarray(2,6),W=l-Q,c=U-V;return Math.hypot(F(this,G0)*W,F(this,T0)*c)<=2?null:(F(this,iU).push(l,U),isNaN(Z)?(F(this,xZ).set([Q,V,l,U],2),F(this,fl).push(NaN,NaN,NaN,NaN,l,U),{path:{d:this.toSVGPath()}}):(isNaN(F(this,xZ)[0])&&F(this,fl).splice(6,6),F(this,xZ).set([Z,d,Q,V,l,U],0),F(this,fl).push(...D.createBezierPoints(Z,d,Q,V,l,U)),{path:{d:this.toSVGPath()}}))}end(l,U){const Z=this.add(l,U);return Z||(F(this,iU).length===2?{path:{d:this.toSVGPath()}}:null)}startNew(l,U,Z,d,Q){b(this,G0,Z),b(this,T0,d),b(this,M0,Q),[l,U]=m(this,zQ,Rt).call(this,l,U);const V=b(this,fl,[NaN,NaN,NaN,NaN,l,U]);b(this,iU,[l,U]);const W=F(this,Al).at(-1);return W&&(W.line=new Float32Array(W.line),W.points=new Float32Array(W.points)),F(this,Al).push({line:V,points:F(this,iU)}),F(this,xZ).set(V,0),b(this,QZ,0),this.toSVGPath(),null}getLastElement(){return F(this,Al).at(-1)}setLastElement(l){return F(this,Al)?(F(this,Al).push(l),b(this,fl,l.line),b(this,iU,l.points),b(this,QZ,0),{path:{d:this.toSVGPath()}}):F(this,J0).setLastElement(l)}removeLastElement(){if(!F(this,Al))return F(this,J0).removeLastElement();F(this,Al).pop(),b(this,UU,"");for(let l=0,U=F(this,Al).length;l<U;l++){const{line:Z,points:d}=F(this,Al)[l];b(this,fl,Z),b(this,iU,d),b(this,QZ,0),this.toSVGPath()}return{path:{d:F(this,UU)}}}toSVGPath(){const l=D.svgRound(F(this,fl)[4]),U=D.svgRound(F(this,fl)[5]);if(F(this,iU).length===2)return b(this,UU,`${F(this,UU)} M ${l} ${U} Z`),F(this,UU);if(F(this,iU).length<=6){const d=F(this,UU).lastIndexOf("M");b(this,UU,`${F(this,UU).slice(0,d)} M ${l} ${U}`),b(this,QZ,6)}if(F(this,iU).length===4){const d=D.svgRound(F(this,fl)[10]),Q=D.svgRound(F(this,fl)[11]);return b(this,UU,`${F(this,UU)} L ${d} ${Q}`),b(this,QZ,12),F(this,UU)}const Z=[];F(this,QZ)===0&&(Z.push(`M ${l} ${U}`),b(this,QZ,6));for(let d=F(this,QZ),Q=F(this,fl).length;d<Q;d+=6){const[V,W,c,t,R,s]=F(this,fl).slice(d,d+6).map(D.svgRound);Z.push(`C${V} ${W} ${c} ${t} ${R} ${s}`)}return b(this,UU,F(this,UU)+Z.join(" ")),b(this,QZ,F(this,fl).length),F(this,UU)}getOutlines(l,U,Z,d){const Q=F(this,Al).at(-1);return Q.line=new Float32Array(Q.line),Q.points=new Float32Array(Q.points),F(this,J0).build(F(this,Al),l,U,Z,F(this,M0),F(this,yQ),d),b(this,xZ,null),b(this,fl,null),b(this,Al,null),b(this,UU,null),F(this,J0)}get defaultSVGProperties(){return{root:{viewBox:"0 0 10000 10000"},rootClass:{draw:!0},bbox:[0,0,1,1]}}}xZ=new WeakMap,fl=new WeakMap,Al=new WeakMap,M0=new WeakMap,yQ=new WeakMap,iU=new WeakMap,UU=new WeakMap,QZ=new WeakMap,J0=new WeakMap,G0=new WeakMap,T0=new WeakMap,zQ=new WeakSet,Rt=function(l,U){return D._normalizePoint(l,U,F(this,G0),F(this,T0),F(this,M0))};const dR=class dR extends D{constructor(){super(...arguments);h(this,ZU);h(this,MU);h(this,oW,0);h(this,kW);h(this,vU);h(this,jZ);h(this,OZ);h(this,LQ);h(this,oQ);h(this,kQ)}build(U,Z,d,Q,V,W,c){b(this,jZ,Z),b(this,OZ,d),b(this,LQ,Q),b(this,oQ,V),b(this,kQ,W),b(this,kW,c??0),b(this,vU,U),m(this,ZU,In).call(this)}setLastElement(U){return F(this,vU).push(U),{path:{d:this.toSVGPath()}}}removeLastElement(){return F(this,vU).pop(),{path:{d:this.toSVGPath()}}}toSVGPath(){const U=[];for(const{line:Z}of F(this,vU)){if(U.push(`M${D.svgRound(Z[4])} ${D.svgRound(Z[5])}`),Z.length===6){U.push("Z");continue}if(Z.length===12){U.push(`L${D.svgRound(Z[10])} ${D.svgRound(Z[11])}`);continue}for(let d=6,Q=Z.length;d<Q;d+=6){const[V,W,c,t,R,s]=Z.subarray(d,d+6).map(D.svgRound);U.push(`C${V} ${W} ${c} ${t} ${R} ${s}`)}}return U.join("")}serialize([U,Z,d,Q],V){const W=[],c=[],[t,R,s,n]=m(this,ZU,Dn).call(this);let a,i,M,G,J,S,X,Y,B;switch(F(this,oQ)){case 0:B=D._rescale,a=U,i=Z+Q,M=d,G=-Q,J=U+t*d,S=Z+(1-R-n)*Q,X=U+(t+s)*d,Y=Z+(1-R)*Q;break;case 90:B=D._rescaleAndSwap,a=U,i=Z,M=d,G=Q,J=U+R*d,S=Z+t*Q,X=U+(R+n)*d,Y=Z+(t+s)*Q;break;case 180:B=D._rescale,a=U+d,i=Z,M=-d,G=Q,J=U+(1-t-s)*d,S=Z+R*Q,X=U+(1-t)*d,Y=Z+(R+n)*Q;break;case 270:B=D._rescaleAndSwap,a=U+d,i=Z+Q,M=-d,G=-Q,J=U+(1-R-n)*d,S=Z+(1-t-s)*Q,X=U+(1-R)*d,Y=Z+(1-t)*Q;break}for(const{line:p,points:e}of F(this,vU))W.push(B(p,a,i,M,G,V?new Array(p.length):null)),c.push(B(e,a,i,M,G,V?new Array(e.length):null));return{lines:W,points:c,rect:[J,S,X,Y]}}static deserialize(U,Z,d,Q,V,{paths:{lines:W,points:c},rotation:t,thickness:R}){const s=[];let n,a,i,M,G;switch(t){case 0:G=D._rescale,n=-U/d,a=Z/Q+1,i=1/d,M=-1/Q;break;case 90:G=D._rescaleAndSwap,n=-Z/Q,a=-U/d,i=1/Q,M=1/d;break;case 180:G=D._rescale,n=U/d+1,a=-Z/Q,i=-1/d,M=1/Q;break;case 270:G=D._rescaleAndSwap,n=Z/Q+1,a=U/d+1,i=-1/Q,M=-1/d;break}if(!W){W=[];for(const S of c){const X=S.length;if(X===2){W.push(new Float32Array([NaN,NaN,NaN,NaN,S[0],S[1]]));continue}if(X===4){W.push(new Float32Array([NaN,NaN,NaN,NaN,S[0],S[1],NaN,NaN,NaN,NaN,S[2],S[3]]));continue}const Y=new Float32Array(3*(X-2));W.push(Y);let[B,p,e,o]=S.subarray(0,4);Y.set([NaN,NaN,NaN,NaN,B,p],0);for(let w=4;w<X;w+=2){const f=S[w],r=S[w+1];Y.set(D.createBezierPoints(B,p,e,o,f,r),(w-2)*3),[B,p,e,o]=[e,o,f,r]}}}for(let S=0,X=W.length;S<X;S++)s.push({line:G(W[S].map(Y=>Y??NaN),n,a,i,M),points:G(c[S].map(Y=>Y??NaN),n,a,i,M)});const J=new dR;return J.build(s,d,Q,1,t,R,V),J}get box(){return F(this,MU)}updateProperty(U,Z){return U==="stroke-width"?m(this,ZU,En).call(this,Z):null}updateParentDimensions([U,Z],d){const[Q,V]=m(this,ZU,ud).call(this);b(this,jZ,U),b(this,OZ,Z),b(this,LQ,d);const[W,c]=m(this,ZU,ud).call(this),t=W-Q,R=c-V,s=F(this,MU);return s[0]-=t,s[1]-=R,s[2]+=2*t,s[3]+=2*R,s}updateRotation(U){return b(this,oW,U),{path:{transform:this.rotationTransform}}}get viewBox(){return F(this,MU).map(D.svgRound).join(" ")}get defaultProperties(){const[U,Z]=F(this,MU);return{root:{viewBox:this.viewBox},path:{"transform-origin":`${D.svgRound(U)} ${D.svgRound(Z)}`}}}get rotationTransform(){const[,,U,Z]=F(this,MU);let d=0,Q=0,V=0,W=0,c=0,t=0;switch(F(this,oW)){case 90:Q=Z/U,V=-U/Z,c=U;break;case 180:d=-1,W=-1,c=U,t=Z;break;case 270:Q=-Z/U,V=U/Z,t=Z;break;default:return""}return`matrix(${d} ${Q} ${V} ${W} ${D.svgRound(c)} ${D.svgRound(t)})`}getPathResizingSVGProperties([U,Z,d,Q]){const[V,W]=m(this,ZU,ud).call(this),[c,t,R,s]=F(this,MU);if(Math.abs(R-V)<=D.PRECISION||Math.abs(s-W)<=D.PRECISION){const G=U+d/2-(c+R/2),J=Z+Q/2-(t+s/2);return{path:{"transform-origin":`${D.svgRound(U)} ${D.svgRound(Z)}`,transform:`${this.rotationTransform} translate(${G} ${J})`}}}const n=(d-2*V)/(R-2*V),a=(Q-2*W)/(s-2*W),i=R/d,M=s/Q;return{path:{"transform-origin":`${D.svgRound(c)} ${D.svgRound(t)}`,transform:`${this.rotationTransform} scale(${i} ${M}) translate(${D.svgRound(V)} ${D.svgRound(W)}) scale(${n} ${a}) translate(${D.svgRound(-V)} ${D.svgRound(-W)})`}}}getPathResizedSVGProperties([U,Z,d,Q]){const[V,W]=m(this,ZU,ud).call(this),c=F(this,MU),[t,R,s,n]=c;if(c[0]=U,c[1]=Z,c[2]=d,c[3]=Q,Math.abs(s-V)<=D.PRECISION||Math.abs(n-W)<=D.PRECISION){const J=U+d/2-(t+s/2),S=Z+Q/2-(R+n/2);for(const{line:X,points:Y}of F(this,vU))D._translate(X,J,S,X),D._translate(Y,J,S,Y);return{root:{viewBox:this.viewBox},path:{"transform-origin":`${D.svgRound(U)} ${D.svgRound(Z)}`,transform:this.rotationTransform||null,d:this.toSVGPath()}}}const a=(d-2*V)/(s-2*V),i=(Q-2*W)/(n-2*W),M=-a*(t+V)+U+V,G=-i*(R+W)+Z+W;if(a!==1||i!==1||M!==0||G!==0)for(const{line:J,points:S}of F(this,vU))D._rescale(J,M,G,a,i,J),D._rescale(S,M,G,a,i,S);return{root:{viewBox:this.viewBox},path:{"transform-origin":`${D.svgRound(U)} ${D.svgRound(Z)}`,transform:this.rotationTransform||null,d:this.toSVGPath()}}}getPathTranslatedSVGProperties([U,Z],d){const[Q,V]=d,W=F(this,MU),c=U-W[0],t=Z-W[1];if(F(this,jZ)===Q&&F(this,OZ)===V)for(const{line:R,points:s}of F(this,vU))D._translate(R,c,t,R),D._translate(s,c,t,s);else{const R=F(this,jZ)/Q,s=F(this,OZ)/V;b(this,jZ,Q),b(this,OZ,V);for(const{line:n,points:a}of F(this,vU))D._rescale(n,c,t,R,s,n),D._rescale(a,c,t,R,s,a);W[2]*=R,W[3]*=s}return W[0]=U,W[1]=Z,{root:{viewBox:this.viewBox},path:{d:this.toSVGPath(),"transform-origin":`${D.svgRound(U)} ${D.svgRound(Z)}`}}}get defaultSVGProperties(){const U=F(this,MU);return{root:{viewBox:this.viewBox},rootClass:{draw:!0},path:{d:this.toSVGPath(),"transform-origin":`${D.svgRound(U[0])} ${D.svgRound(U[1])}`,transform:this.rotationTransform||null},bbox:U}}};MU=new WeakMap,oW=new WeakMap,kW=new WeakMap,vU=new WeakMap,jZ=new WeakMap,OZ=new WeakMap,LQ=new WeakMap,oQ=new WeakMap,kQ=new WeakMap,ZU=new WeakSet,ud=function(U=F(this,kQ)){const Z=F(this,kW)+U/2*F(this,LQ);return F(this,oQ)%180===0?[Z/F(this,jZ),Z/F(this,OZ)]:[Z/F(this,OZ),Z/F(this,jZ)]},Dn=function(){const[U,Z,d,Q]=F(this,MU),[V,W]=m(this,ZU,ud).call(this,0);return[U+V,Z+W,d-2*V,Q-2*W]},In=function(){const U=b(this,MU,new Float32Array([1/0,1/0,-1/0,-1/0]));for(const{line:Q}of F(this,vU)){if(Q.length<=12){for(let c=4,t=Q.length;c<t;c+=6){const[R,s]=Q.subarray(c,c+2);U[0]=Math.min(U[0],R),U[1]=Math.min(U[1],s),U[2]=Math.max(U[2],R),U[3]=Math.max(U[3],s)}continue}let V=Q[4],W=Q[5];for(let c=6,t=Q.length;c<t;c+=6){const[R,s,n,a,i,M]=Q.subarray(c,c+6);C.bezierBoundingBox(V,W,R,s,n,a,i,M,U),V=i,W=M}}const[Z,d]=m(this,ZU,ud).call(this);U[0]=Math.min(1,Math.max(0,U[0]-Z)),U[1]=Math.min(1,Math.max(0,U[1]-d)),U[2]=Math.min(1,Math.max(0,U[2]+Z)),U[3]=Math.min(1,Math.max(0,U[3]+d)),U[2]-=U[0],U[3]-=U[1]},En=function(U){const[Z,d]=m(this,ZU,ud).call(this);b(this,kQ,U);const[Q,V]=m(this,ZU,ud).call(this),[W,c]=[Q-Z,V-d],t=F(this,MU);return t[0]-=W,t[1]-=c,t[2]+=2*W,t[3]+=2*c,t};let ic=dR;const FR=class FR extends ra{constructor(U){super();h(this,DQ);b(this,DQ,U),super.updateProperties({fill:"none",stroke:Yl._defaultLineColor,"stroke-opacity":1,"stroke-width":1,"stroke-linecap":"round","stroke-linejoin":"round","stroke-miterlimit":10})}updateSVGProperty(U,Z){U==="stroke-width"&&(Z??(Z=this["stroke-width"]),Z*=F(this,DQ).realScale),super.updateSVGProperty(U,Z)}clone(){const U=new FR(F(this,DQ));return U.updateAll(this),U}};DQ=new WeakMap;let Pt=FR;const IQ=class IQ extends vt{constructor(U){super({...U,name:"inkEditor"});h(this,Ic);this._willKeepAspectRatio=!0}static initialize(U,Z){Yl.initialize(U,Z),this._defaultDrawingOptions=new Pt(Z.viewParameters)}static getDefaultDrawingOptions(U){const Z=this._defaultDrawingOptions.clone();return Z.updateProperties(U),Z}static get supportMultipleDrawings(){return!0}static get typesMap(){return _(this,"typesMap",new Map([[Zl.INK_THICKNESS,"stroke-width"],[Zl.INK_COLOR,"stroke"],[Zl.INK_OPACITY,"stroke-opacity"]]))}static createDrawerInstance(U,Z,d,Q,V){return new ga(U,Z,d,Q,V,this._defaultDrawingOptions["stroke-width"])}static deserializeDraw(U,Z,d,Q,V,W){return ic.deserialize(U,Z,d,Q,V,W)}static async deserialize(U,Z,d){let Q=null;if(U instanceof rt){const{data:{inkLists:W,rect:c,rotation:t,id:R,color:s,opacity:n,borderStyle:{rawWidth:a},popupRef:i},parent:{page:{pageNumber:M}}}=U;Q=U={annotationType:v.INK,color:Array.from(s),thickness:a,opacity:n,paths:{points:W},boxes:null,pageIndex:M-1,rect:c.slice(0),rotation:t,id:R,deleted:!1,popupRef:i}}const V=await super.deserialize(U,Z,d);return V.annotationElementId=U.id||null,V._initialData=Q,V}onScaleChanging(){if(!this.parent)return;super.onScaleChanging();const{_drawId:U,_drawingOptions:Z,parent:d}=this;Z.updateSVGProperty("stroke-width"),d.drawLayer.updateProperties(U,Z.toSVGProperties())}static onScaleChangingWhenDrawing(){const U=this._currentParent;U&&(super.onScaleChangingWhenDrawing(),this._defaultDrawingOptions.updateSVGProperty("stroke-width"),U.drawLayer.updateProperties(this._currentDrawId,this._defaultDrawingOptions.toSVGProperties()))}createDrawingOptions({color:U,thickness:Z,opacity:d}){this._drawingOptions=IQ.getDefaultDrawingOptions({stroke:C.makeHexColor(...U),"stroke-width":Z,"stroke-opacity":d})}serialize(U=!1){if(this.isEmpty())return null;if(this.deleted)return this.serializeDeleted();const{lines:Z,points:d,rect:Q}=this.serializeDraw(U),{_drawingOptions:{stroke:V,"stroke-opacity":W,"stroke-width":c}}=this,t={annotationType:v.INK,color:Yl._colorManager.convert(V),opacity:W,thickness:c,paths:{lines:Z,points:d},pageIndex:this.pageIndex,rect:Q,rotation:this.rotation,structTreeParentId:this._structTreeParentId};return U?t:this.annotationElementId&&!m(this,Ic,Cn).call(this,t)?null:(t.id=this.annotationElementId,t)}renderAnnotationElement(U){const{points:Z,rect:d}=this.serializeDraw(!1);return U.updateEdited({rect:d,thickness:this._drawingOptions["stroke-width"],points:Z}),null}};Ic=new WeakSet,Cn=function(U){const{color:Z,thickness:d,opacity:Q,pageIndex:V}=this._initialData;return this._hasBeenMoved||this._hasBeenResized||U.color.some((W,c)=>W!==Z[c])||U.thickness!==d||U.opacity!==Q||U.pageIndex!==V},O(IQ,"_type","ink"),O(IQ,"_editorType",v.INK),O(IQ,"_defaultDrawingOptions",null);let ft=IQ;const DW=class DW extends Yl{constructor(U){super({...U,name:"stampEditor"});h(this,Vl);h(this,el,null);h(this,dU,null);h(this,WF,null);h(this,Xd,null);h(this,cF,null);h(this,EQ,"");h(this,rZ,null);h(this,gZ,null);h(this,PU,!1);h(this,CQ,!1);b(this,Xd,U.bitmapUrl),b(this,cF,U.bitmapFile)}static initialize(U,Z){Yl.initialize(U,Z)}static get supportedTypes(){return _(this,"supportedTypes",["apng","avif","bmp","gif","jpeg","png","svg+xml","webp","x-icon"].map(Z=>`image/${Z}`))}static get supportedTypesStr(){return _(this,"supportedTypesStr",this.supportedTypes.join(","))}static isHandlingMimeForPasting(U){return this.supportedTypes.includes(U)}static paste(U,Z){Z.pasteEditor(v.STAMP,{bitmapFile:U.getAsFile()})}altTextFinish(){this._uiManager.useNewAltTextFlow&&(this.div.hidden=!1),super.altTextFinish()}get telemetryFinalData(){var U;return{type:"stamp",hasAltText:!!((U=this.altTextData)!=null&&U.altText)}}static computeTelemetryFinalData(U){const Z=U.get("hasAltText");return{hasAltText:Z.get(!0)??0,hasNoAltText:Z.get(!1)??0}}async mlGuessAltText(U=null,Z=!0){if(this.hasAltTextData())return null;const{mlManager:d}=this._uiManager;if(!d)throw new Error("No ML.");if(!await d.isEnabledFor("altText"))throw new Error("ML isn't enabled for alt text.");const{data:Q,width:V,height:W}=U||this.copyCanvas(null,null,!0).imageData,c=await d.guess({name:"altText",request:{data:Q,width:V,height:W,channels:Q.length/(V*W)}});if(!c)throw new Error("No response from the AI service.");if(c.error)throw new Error("Error from the AI service.");if(c.cancel)return null;if(!c.output)throw new Error("No valid response from the AI service.");const t=c.output;return await this.setGuessedAltText(t),Z&&!this.hasAltTextData()&&(this.altTextData={alt:t,decorative:!1}),t}remove(){var U;F(this,dU)&&(b(this,el,null),this._uiManager.imageManager.deleteId(F(this,dU)),(U=F(this,rZ))==null||U.remove(),b(this,rZ,null),F(this,gZ)&&(clearTimeout(F(this,gZ)),b(this,gZ,null))),super.remove()}rebuild(){if(!this.parent){F(this,dU)&&m(this,Vl,Nt).call(this);return}super.rebuild(),this.div!==null&&(F(this,dU)&&F(this,rZ)===null&&m(this,Vl,Nt).call(this),this.isAttachedToDOM||this.parent.add(this))}onceAdded(U){this._isDraggable=!0,U&&this.div.focus()}isEmpty(){return!(F(this,WF)||F(this,el)||F(this,Xd)||F(this,cF)||F(this,dU))}get isResizable(){return!0}render(){if(this.div)return this.div;let U,Z;if(this.width&&(U=this.x,Z=this.y),super.render(),this.div.hidden=!0,this.div.setAttribute("role","figure"),this.addAltTextButton(),F(this,el)?m(this,Vl,qR).call(this):m(this,Vl,Nt).call(this),this.width&&!this.annotationElementId){const[d,Q]=this.parentDimensions;this.setAt(U*d,Z*Q,this.width*d,this.height*Q)}return this._uiManager.addShouldRescale(this),this.div}_onResized(){this.onScaleChanging()}onScaleChanging(){if(!this.parent)return;F(this,gZ)!==null&&clearTimeout(F(this,gZ)),b(this,gZ,setTimeout(()=>{b(this,gZ,null),m(this,Vl,$R).call(this)},200))}copyCanvas(U,Z,d=!1){var a;U||(U=224);const{width:Q,height:V}=F(this,el),W=new et;let c=F(this,el),t=Q,R=V,s=null;if(Z){if(Q>Z||V>Z){const o=Math.min(Z/Q,Z/V);t=Math.floor(Q*o),R=Math.floor(V*o)}s=document.createElement("canvas");const i=s.width=Math.ceil(t*W.sx),M=s.height=Math.ceil(R*W.sy);F(this,PU)||(c=m(this,Vl,st).call(this,i,M));const G=s.getContext("2d");G.filter=this._uiManager.hcmFilter;let J="white",S="#cfcfd8";this._uiManager.hcmFilter!=="none"?S="black":(a=window.matchMedia)!=null&&a.call(window,"(prefers-color-scheme: dark)").matches&&(J="#8f8f9d",S="#42414d");const X=15,Y=X*W.sx,B=X*W.sy,p=new OffscreenCanvas(Y*2,B*2),e=p.getContext("2d");e.fillStyle=J,e.fillRect(0,0,Y*2,B*2),e.fillStyle=S,e.fillRect(0,0,Y,B),e.fillRect(Y,B,Y,B),G.fillStyle=G.createPattern(p,"repeat"),G.fillRect(0,0,i,M),G.drawImage(c,0,0,c.width,c.height,0,0,i,M)}let n=null;if(d){let i,M;if(W.symmetric&&c.width<U&&c.height<U)i=c.width,M=c.height;else if(c=F(this,el),Q>U||V>U){const S=Math.min(U/Q,U/V);i=Math.floor(Q*S),M=Math.floor(V*S),F(this,PU)||(c=m(this,Vl,st).call(this,i,M))}const J=new OffscreenCanvas(i,M).getContext("2d",{willReadFrequently:!0});J.drawImage(c,0,0,c.width,c.height,0,0,i,M),n={width:i,height:M,data:J.getImageData(0,0,i,M).data}}return{canvas:s,width:t,height:R,imageData:n}}getImageForAltText(){return F(this,rZ)}static async deserialize(U,Z,d){var M;let Q=null;if(U instanceof _N){const{data:{rect:G,rotation:J,id:S,structParent:X,popupRef:Y},container:B,parent:{page:{pageNumber:p}}}=U,e=B.querySelector("canvas"),o=d.imageManager.getFromCanvas(B.id,e);e.remove();const w=((M=await Z._structTree.getAriaAttributes(`${Tt}${S}`))==null?void 0:M.get("aria-label"))||"";Q=U={annotationType:v.STAMP,bitmapId:o.id,bitmap:o.bitmap,pageIndex:p-1,rect:G.slice(0),rotation:J,id:S,deleted:!1,accessibilityData:{decorative:!1,altText:w},isSvg:!1,structParent:X,popupRef:Y}}const V=await super.deserialize(U,Z,d),{rect:W,bitmap:c,bitmapUrl:t,bitmapId:R,isSvg:s,accessibilityData:n}=U;R&&d.imageManager.isValidId(R)?(b(V,dU,R),c&&b(V,el,c)):b(V,Xd,t),b(V,PU,s);const[a,i]=V.pageDimensions;return V.width=(W[2]-W[0])/a,V.height=(W[3]-W[1])/i,V.annotationElementId=U.id||null,n&&(V.altTextData=n),V._initialData=Q,b(V,CQ,!!Q),V}serialize(U=!1,Z=null){if(this.isEmpty())return null;if(this.deleted)return this.serializeDeleted();const d={annotationType:v.STAMP,bitmapId:F(this,dU),pageIndex:this.pageIndex,rect:this.getRect(0,0),rotation:this.rotation,isSvg:F(this,PU),structTreeParentId:this._structTreeParentId};if(U)return d.bitmapUrl=m(this,Vl,nt).call(this,!0),d.accessibilityData=this.serializeAltText(!0),d;const{decorative:Q,altText:V}=this.serializeAltText(!1);if(!Q&&V&&(d.accessibilityData={type:"Figure",alt:V}),this.annotationElementId){const c=m(this,Vl,wn).call(this,d);if(c.isSame)return null;c.isSameAltText?delete d.accessibilityData:d.accessibilityData.structParent=this._initialData.structParent??-1}if(d.id=this.annotationElementId,Z===null)return d;Z.stamps||(Z.stamps=new Map);const W=F(this,PU)?(d.rect[2]-d.rect[0])*(d.rect[3]-d.rect[1]):null;if(!Z.stamps.has(F(this,dU)))Z.stamps.set(F(this,dU),{area:W,serialized:d}),d.bitmap=m(this,Vl,nt).call(this,!1);else if(F(this,PU)){const c=Z.stamps.get(F(this,dU));W>c.area&&(c.area=W,c.serialized.bitmap.close(),c.serialized.bitmap=m(this,Vl,nt).call(this,!1))}return d}renderAnnotationElement(U){return U.updateEdited({rect:this.getRect(0,0)}),null}};el=new WeakMap,dU=new WeakMap,WF=new WeakMap,Xd=new WeakMap,cF=new WeakMap,EQ=new WeakMap,rZ=new WeakMap,gZ=new WeakMap,PU=new WeakMap,CQ=new WeakMap,Vl=new WeakSet,AW=function(U,Z=!1){if(!U){this.remove();return}b(this,el,U.bitmap),Z||(b(this,dU,U.id),b(this,PU,U.isSvg)),U.file&&b(this,EQ,U.file.name),m(this,Vl,qR).call(this)},_W=function(){if(b(this,WF,null),this._uiManager.enableWaiting(!1),!!F(this,rZ)){if(this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&F(this,el)){this._editToolbar.hide(),this._uiManager.editAltText(this,!0);return}if(!this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&F(this,el)){this._reportTelemetry({action:"pdfjs.image.image_added",data:{alt_text_modal:!1,alt_text_type:"empty"}});try{this.mlGuessAltText()}catch{}}this.div.focus()}},Nt=function(){if(F(this,dU)){this._uiManager.enableWaiting(!0),this._uiManager.imageManager.getFromId(F(this,dU)).then(d=>m(this,Vl,AW).call(this,d,!0)).finally(()=>m(this,Vl,_W).call(this));return}if(F(this,Xd)){const d=F(this,Xd);b(this,Xd,null),this._uiManager.enableWaiting(!0),b(this,WF,this._uiManager.imageManager.getFromUrl(d).then(Q=>m(this,Vl,AW).call(this,Q)).finally(()=>m(this,Vl,_W).call(this)));return}if(F(this,cF)){const d=F(this,cF);b(this,cF,null),this._uiManager.enableWaiting(!0),b(this,WF,this._uiManager.imageManager.getFromFile(d).then(Q=>m(this,Vl,AW).call(this,Q)).finally(()=>m(this,Vl,_W).call(this)));return}const U=document.createElement("input");U.type="file",U.accept=DW.supportedTypesStr;const Z=this._uiManager._signal;b(this,WF,new Promise(d=>{U.addEventListener("change",async()=>{if(!U.files||U.files.length===0)this.remove();else{this._uiManager.enableWaiting(!0);const Q=await this._uiManager.imageManager.getFromFile(U.files[0]);this._reportTelemetry({action:"pdfjs.image.image_selected",data:{alt_text_modal:this._uiManager.useNewAltTextFlow}}),m(this,Vl,AW).call(this,Q)}d()},{signal:Z}),U.addEventListener("cancel",()=>{this.remove(),d()},{signal:Z})}).finally(()=>m(this,Vl,_W).call(this))),U.click()},qR=function(){var s;const{div:U}=this;let{width:Z,height:d}=F(this,el);const[Q,V]=this.pageDimensions,W=.75;if(this.width)Z=this.width*Q,d=this.height*V;else if(Z>W*Q||d>W*V){const n=Math.min(W*Q/Z,W*V/d);Z*=n,d*=n}const[c,t]=this.parentDimensions;this.setDims(Z*c/Q,d*t/V),this._uiManager.enableWaiting(!1);const R=b(this,rZ,document.createElement("canvas"));R.setAttribute("role","img"),this.addContainer(R),this.width=Z/Q,this.height=d/V,(s=this._initialOptions)!=null&&s.isCentered?this.center():this.fixAndSetPosition(),this._initialOptions=null,(!this._uiManager.useNewAltTextWhenAddingImage||!this._uiManager.useNewAltTextFlow||this.annotationElementId)&&(U.hidden=!1),m(this,Vl,$R).call(this),F(this,CQ)||(this.parent.addUndoableEditor(this),b(this,CQ,!0)),this._reportTelemetry({action:"inserted_image"}),F(this,EQ)&&R.setAttribute("aria-label",F(this,EQ))},st=function(U,Z){const{width:d,height:Q}=F(this,el);let V=d,W=Q,c=F(this,el);for(;V>2*U||W>2*Z;){const t=V,R=W;V>2*U&&(V=V>=16384?Math.floor(V/2)-1:Math.ceil(V/2)),W>2*Z&&(W=W>=16384?Math.floor(W/2)-1:Math.ceil(W/2));const s=new OffscreenCanvas(V,W);s.getContext("2d").drawImage(c,0,0,t,R,0,0,V,W),c=s.transferToImageBitmap()}return c},$R=function(){const[U,Z]=this.parentDimensions,{width:d,height:Q}=this,V=new et,W=Math.ceil(d*U*V.sx),c=Math.ceil(Q*Z*V.sy),t=F(this,rZ);if(!t||t.width===W&&t.height===c)return;t.width=W,t.height=c;const R=F(this,PU)?F(this,el):m(this,Vl,st).call(this,W,c),s=t.getContext("2d");s.filter=this._uiManager.hcmFilter,s.drawImage(R,0,0,R.width,R.height,0,0,W,c)},nt=function(U){if(U){if(F(this,PU)){const Q=this._uiManager.imageManager.getSvgUrl(F(this,dU));if(Q)return Q}const Z=document.createElement("canvas");return{width:Z.width,height:Z.height}=F(this,el),Z.getContext("2d").drawImage(F(this,el),0,0),Z.toDataURL()}if(F(this,PU)){const[Z,d]=this.pageDimensions,Q=Math.round(this.width*Z*od.PDF_TO_CSS_UNITS),V=Math.round(this.height*d*od.PDF_TO_CSS_UNITS),W=new OffscreenCanvas(Q,V);return W.getContext("2d").drawImage(F(this,el),0,0,F(this,el).width,F(this,el).height,0,0,Q,V),W.transferToImageBitmap()}return structuredClone(F(this,el))},wn=function(U){var W;const{pageIndex:Z,accessibilityData:{altText:d}}=this._initialData,Q=U.pageIndex===Z,V=(((W=U.accessibilityData)==null?void 0:W.alt)||"")===d;return{isSame:!this._hasBeenMoved&&!this._hasBeenResized&&Q&&V,isSameAltText:V}},O(DW,"_type","stamp"),O(DW,"_editorType",v.STAMP);let At=DW;const XZ=class XZ{constructor({uiManager:l,pageIndex:U,div:Z,structTreeLayer:d,accessibilityManager:Q,annotationLayer:V,drawLayer:W,textLayer:c,viewport:t,l10n:R}){h(this,Tl);h(this,S0);h(this,wQ,!1);h(this,KZ,null);h(this,tF,null);h(this,Yd,null);h(this,VZ,new Map);h(this,RF,!1);h(this,xQ,!1);h(this,X0,!1);h(this,SZ,null);h(this,Bd,null);h(this,RU,null);h(this,ed,null);h(this,E);const s=[...F(XZ,NF).values()];if(!XZ._initialized){XZ._initialized=!0;for(const n of s)n.initialize(R,l)}l.registerEditorTypes(s),b(this,E,l),this.pageIndex=U,this.div=Z,b(this,S0,Q),b(this,KZ,V),this.viewport=t,b(this,RU,c),this.drawLayer=W,this._structTree=d,F(this,E).addLayer(this)}get isEmpty(){return F(this,VZ).size===0}get isInvisible(){return this.isEmpty&&F(this,E).getMode()===v.NONE}updateToolbar(l){F(this,E).updateToolbar(l)}updateMode(l=F(this,E).getMode()){switch(m(this,Tl,bt).call(this),l){case v.NONE:this.disableTextSelection(),this.togglePointerEvents(!1),this.toggleAnnotationLayerPointerEvents(!0),this.disableClick();return;case v.INK:this.disableTextSelection(),this.togglePointerEvents(!0),this.enableClick();break;case v.HIGHLIGHT:this.enableTextSelection(),this.togglePointerEvents(!1),this.disableClick();break;default:this.disableTextSelection(),this.togglePointerEvents(!0),this.enableClick()}this.toggleAnnotationLayerPointerEvents(!1);const{classList:U}=this.div;for(const Z of F(XZ,NF).values())U.toggle(`${Z._type}Editing`,l===Z._editorType);this.div.hidden=!1}hasTextLayer(l){var U;return l===((U=F(this,RU))==null?void 0:U.div)}setEditingState(l){F(this,E).setEditingState(l)}addCommands(l){F(this,E).addCommands(l)}cleanUndoStack(l){F(this,E).cleanUndoStack(l)}toggleDrawing(l=!1){this.div.classList.toggle("drawing",!l)}togglePointerEvents(l=!1){this.div.classList.toggle("disabled",!l)}toggleAnnotationLayerPointerEvents(l=!1){var U;(U=F(this,KZ))==null||U.div.classList.toggle("disabled",!l)}async enable(){b(this,X0,!0),this.div.tabIndex=0,this.togglePointerEvents(!0);const l=new Set;for(const Z of F(this,VZ).values())Z.enableEditing(),Z.show(!0),Z.annotationElementId&&(F(this,E).removeChangedExistingAnnotation(Z),l.add(Z.annotationElementId));if(!F(this,KZ)){b(this,X0,!1);return}const U=F(this,KZ).getEditableAnnotations();for(const Z of U){if(Z.hide(),F(this,E).isDeletedAnnotationElement(Z.data.id)||l.has(Z.data.id))continue;const d=await this.deserialize(Z);d&&(this.addOrRebuild(d),d.enableEditing())}b(this,X0,!1)}disable(){var d;b(this,xQ,!0),this.div.tabIndex=-1,this.togglePointerEvents(!1);const l=new Map,U=new Map;for(const Q of F(this,VZ).values())if(Q.disableEditing(),!!Q.annotationElementId){if(Q.serialize()!==null){l.set(Q.annotationElementId,Q);continue}else U.set(Q.annotationElementId,Q);(d=this.getEditableAnnotation(Q.annotationElementId))==null||d.show(),Q.remove()}if(F(this,KZ)){const Q=F(this,KZ).getEditableAnnotations();for(const V of Q){const{id:W}=V.data;if(F(this,E).isDeletedAnnotationElement(W))continue;let c=U.get(W);if(c){c.resetAnnotationElement(V),c.show(!1),V.show();continue}c=l.get(W),c&&(F(this,E).addChangedExistingAnnotation(c),c.renderAnnotationElement(V)&&c.show(!1)),V.show()}}m(this,Tl,bt).call(this),this.isEmpty&&(this.div.hidden=!0);const{classList:Z}=this.div;for(const Q of F(XZ,NF).values())Z.remove(`${Q._type}Editing`);this.disableTextSelection(),this.toggleAnnotationLayerPointerEvents(!0),b(this,xQ,!1)}getEditableAnnotation(l){var U;return((U=F(this,KZ))==null?void 0:U.getEditableAnnotation(l))||null}setActiveEditor(l){F(this,E).getActive()!==l&&F(this,E).setActiveEditor(l)}enableTextSelection(){var l;if(this.div.tabIndex=-1,(l=F(this,RU))!=null&&l.div&&!F(this,ed)){b(this,ed,new AbortController);const U=F(this,E).combinedSignal(F(this,ed));F(this,RU).div.addEventListener("pointerdown",m(this,Tl,xn).bind(this),{signal:U}),F(this,RU).div.classList.add("highlighting")}}disableTextSelection(){var l;this.div.tabIndex=0,(l=F(this,RU))!=null&&l.div&&F(this,ed)&&(F(this,ed).abort(),b(this,ed,null),F(this,RU).div.classList.remove("highlighting"))}enableClick(){if(F(this,tF))return;b(this,tF,new AbortController);const l=F(this,E).combinedSignal(F(this,tF));this.div.addEventListener("pointerdown",this.pointerdown.bind(this),{signal:l});const U=this.pointerup.bind(this);this.div.addEventListener("pointerup",U,{signal:l}),this.div.addEventListener("pointercancel",U,{signal:l})}disableClick(){var l;(l=F(this,tF))==null||l.abort(),b(this,tF,null)}attach(l){F(this,VZ).set(l.id,l);const{annotationElementId:U}=l;U&&F(this,E).isDeletedAnnotationElement(U)&&F(this,E).removeDeletedAnnotationElement(l)}detach(l){var U;F(this,VZ).delete(l.id),(U=F(this,S0))==null||U.removePointerInTextLayer(l.contentDiv),!F(this,xQ)&&l.annotationElementId&&F(this,E).addDeletedAnnotationElement(l)}remove(l){this.detach(l),F(this,E).removeEditor(l),l.div.remove(),l.isAttachedToDOM=!1}changeParent(l){var U;l.parent!==this&&(l.parent&&l.annotationElementId&&(F(this,E).addDeletedAnnotationElement(l.annotationElementId),Yl.deleteAnnotationElement(l),l.annotationElementId=null),this.attach(l),(U=l.parent)==null||U.detach(l),l.setParent(this),l.div&&l.isAttachedToDOM&&(l.div.remove(),this.div.append(l.div)))}add(l){if(!(l.parent===this&&l.isAttachedToDOM)){if(this.changeParent(l),F(this,E).addEditor(l),this.attach(l),!l.isAttachedToDOM){const U=l.render();this.div.append(U),l.isAttachedToDOM=!0}l.fixAndSetPosition(),l.onceAdded(!F(this,X0)),F(this,E).addToAnnotationStorage(l),l._reportTelemetry(l.telemetryInitialData)}}moveEditorInDOM(l){var Z;if(!l.isAttachedToDOM)return;const{activeElement:U}=document;l.div.contains(U)&&!F(this,Yd)&&(l._focusEventsAllowed=!1,b(this,Yd,setTimeout(()=>{b(this,Yd,null),l.div.contains(document.activeElement)?l._focusEventsAllowed=!0:(l.div.addEventListener("focusin",()=>{l._focusEventsAllowed=!0},{once:!0,signal:F(this,E)._signal}),U.focus())},0))),l._structTreeParentId=(Z=F(this,S0))==null?void 0:Z.moveElementInDOM(this.div,l.div,l.contentDiv,!0)}addOrRebuild(l){l.needsToBeRebuilt()?(l.parent||(l.parent=this),l.rebuild(),l.show()):this.add(l)}addUndoableEditor(l){const U=()=>l._uiManager.rebuild(l),Z=()=>{l.remove()};this.addCommands({cmd:U,undo:Z,mustExec:!1})}getNextId(){return F(this,E).getId()}combinedSignal(l){return F(this,E).combinedSignal(l)}canCreateNewEmptyEditor(){var l;return(l=F(this,Tl,vZ))==null?void 0:l.canCreateNewEmptyEditor()}pasteEditor(l,U){F(this,E).updateToolbar(l),F(this,E).updateMode(l);const{offsetX:Z,offsetY:d}=m(this,Tl,UN).call(this),Q=this.getNextId(),V=m(this,Tl,lN).call(this,{parent:this,id:Q,x:Z,y:d,uiManager:F(this,E),isCentered:!0,...U});V&&this.add(V)}async deserialize(l){var U;return await((U=F(XZ,NF).get(l.annotationType??l.annotationEditorType))==null?void 0:U.deserialize(l,this,F(this,E)))||null}createAndAddNewEditor(l,U,Z={}){const d=this.getNextId(),Q=m(this,Tl,lN).call(this,{parent:this,id:d,x:l.offsetX,y:l.offsetY,uiManager:F(this,E),isCentered:U,...Z});return Q&&this.add(Q),Q}addNewEditor(){this.createAndAddNewEditor(m(this,Tl,UN).call(this),!0)}setSelected(l){F(this,E).setSelected(l)}toggleSelected(l){F(this,E).toggleSelected(l)}unselect(l){F(this,E).unselect(l)}pointerup(l){var Z;const{isMac:U}=bU.platform;if(!(l.button!==0||l.ctrlKey&&U)&&l.target===this.div&&F(this,RF)&&(b(this,RF,!1),!((Z=F(this,Tl,vZ))!=null&&Z.isDrawer&&F(this,Tl,vZ).supportMultipleDrawings))){if(!F(this,wQ)){b(this,wQ,!0);return}if(F(this,E).getMode()===v.STAMP){F(this,E).unselectAll();return}this.createAndAddNewEditor(l,!1)}}pointerdown(l){var d;if(F(this,E).getMode()===v.HIGHLIGHT&&this.enableTextSelection(),F(this,RF)){b(this,RF,!1);return}const{isMac:U}=bU.platform;if(l.button!==0||l.ctrlKey&&U||l.target!==this.div)return;if(b(this,RF,!0),(d=F(this,Tl,vZ))!=null&&d.isDrawer){this.startDrawingSession(l);return}const Z=F(this,E).getActive();b(this,wQ,!Z||Z.isEmpty())}startDrawingSession(l){if(this.div.focus(),F(this,SZ)){F(this,Tl,vZ).startDrawing(this,F(this,E),!1,l);return}F(this,E).setCurrentDrawingSession(this),b(this,SZ,new AbortController);const U=F(this,E).combinedSignal(F(this,SZ));this.div.addEventListener("blur",({relatedTarget:Z})=>{Z&&!this.div.contains(Z)&&(b(this,Bd,null),this.commitOrRemove())},{signal:U}),F(this,Tl,vZ).startDrawing(this,F(this,E),!1,l)}pause(l){if(l){const{activeElement:U}=document;this.div.contains(U)&&b(this,Bd,U);return}F(this,Bd)&&setTimeout(()=>{var U;(U=F(this,Bd))==null||U.focus(),b(this,Bd,null)},0)}endDrawingSession(l=!1){return F(this,SZ)?(F(this,E).setCurrentDrawingSession(null),F(this,SZ).abort(),b(this,SZ,null),b(this,Bd,null),F(this,Tl,vZ).endDrawing(l)):null}findNewParent(l,U,Z){const d=F(this,E).findParent(U,Z);return d===null||d===this?!1:(d.changeParent(l),!0)}commitOrRemove(){return F(this,SZ)?(this.endDrawingSession(),!0):!1}onScaleChanging(){F(this,SZ)&&F(this,Tl,vZ).onScaleChangingWhenDrawing(this)}destroy(){var l,U;this.commitOrRemove(),((l=F(this,E).getActive())==null?void 0:l.parent)===this&&(F(this,E).commitOrRemove(),F(this,E).setActiveEditor(null)),F(this,Yd)&&(clearTimeout(F(this,Yd)),b(this,Yd,null));for(const Z of F(this,VZ).values())(U=F(this,S0))==null||U.removePointerInTextLayer(Z.contentDiv),Z.setParent(null),Z.isAttachedToDOM=!1,Z.div.remove();this.div=null,F(this,VZ).clear(),F(this,E).removeLayer(this)}render({viewport:l}){this.viewport=l,aF(this.div,l);for(const U of F(this,E).getEditors(this.pageIndex))this.add(U),U.rebuild();this.updateMode()}update({viewport:l}){F(this,E).commitOrRemove(),m(this,Tl,bt).call(this);const U=this.viewport.rotation,Z=l.rotation;if(this.viewport=l,aF(this.div,{rotation:Z}),U!==Z)for(const d of F(this,VZ).values())d.rotate(Z)}get pageDimensions(){const{pageWidth:l,pageHeight:U}=this.viewport.rawDims;return[l,U]}get scale(){return F(this,E).viewParameters.realScale}};S0=new WeakMap,wQ=new WeakMap,KZ=new WeakMap,tF=new WeakMap,Yd=new WeakMap,VZ=new WeakMap,RF=new WeakMap,xQ=new WeakMap,X0=new WeakMap,SZ=new WeakMap,Bd=new WeakMap,RU=new WeakMap,ed=new WeakMap,E=new WeakMap,NF=new WeakMap,Tl=new WeakSet,xn=function(l){F(this,E).unselectAll();const{target:U}=l;if(U===F(this,RU).div||(U.getAttribute("role")==="img"||U.classList.contains("endOfContent"))&&F(this,RU).div.contains(U)){const{isMac:Z}=bU.platform;if(l.button!==0||l.ctrlKey&&Z)return;F(this,E).showAllEditors("highlight",!0,!0),F(this,RU).div.classList.add("free"),this.toggleDrawing(),mc.startHighlighting(this,F(this,E).direction==="ltr",{target:F(this,RU).div,x:l.x,y:l.y}),F(this,RU).div.addEventListener("pointerup",()=>{F(this,RU).div.classList.remove("free"),this.toggleDrawing(!0)},{once:!0,signal:F(this,E)._signal}),l.preventDefault()}},vZ=function(){return F(XZ,NF).get(F(this,E).getMode())},lN=function(l){const U=F(this,Tl,vZ);return U?new U.prototype.constructor(l):null},UN=function(){const{x:l,y:U,width:Z,height:d}=this.div.getBoundingClientRect(),Q=Math.max(0,l),V=Math.max(0,U),W=Math.min(window.innerWidth,l+Z),c=Math.min(window.innerHeight,U+d),t=(Q+W)/2-l,R=(V+c)/2-U,[s,n]=this.viewport.rotation%180===0?[t,R]:[R,t];return{offsetX:s,offsetY:n}},bt=function(){for(const l of F(this,VZ).values())l.isEmpty()&&l.remove()},O(XZ,"_initialized",!1),h(XZ,NF,new Map([gt,ft,At,mc].map(l=>[l._editorType,l])));let _t=XZ;const NU=class NU{constructor({pageIndex:l}){h(this,HZ);h(this,YZ,null);h(this,IW,0);h(this,JU,new Map);h(this,Y0,new Map);this.pageIndex=l}setParent(l){if(!F(this,YZ)){b(this,YZ,l);return}if(F(this,YZ)!==l){if(F(this,JU).size>0)for(const U of F(this,JU).values())U.remove(),l.append(U);b(this,YZ,l)}}static get _svgFactory(){return _(this,"_svgFactory",new jt)}draw(l,U=!1,Z=!1){const d=SU(this,IW)._++,Q=m(this,HZ,ZN).call(this),V=NU._svgFactory.createElement("defs");Q.append(V);const W=NU._svgFactory.createElement("path");V.append(W);const c=`path_p${this.pageIndex}_${d}`;W.setAttribute("id",c),W.setAttribute("vector-effect","non-scaling-stroke"),U&&F(this,Y0).set(d,W);const t=Z?m(this,HZ,On).call(this,V,c):null,R=NU._svgFactory.createElement("use");return Q.append(R),R.setAttribute("href",`#${c}`),this.updateProperties(Q,l),F(this,JU).set(d,Q),{id:d,clipPathId:`url(#${t})`}}drawOutline(l,U){const Z=SU(this,IW)._++,d=m(this,HZ,ZN).call(this),Q=NU._svgFactory.createElement("defs");d.append(Q);const V=NU._svgFactory.createElement("path");Q.append(V);const W=`path_p${this.pageIndex}_${Z}`;V.setAttribute("id",W),V.setAttribute("vector-effect","non-scaling-stroke");let c;if(U){const s=NU._svgFactory.createElement("mask");Q.append(s),c=`mask_p${this.pageIndex}_${Z}`,s.setAttribute("id",c),s.setAttribute("maskUnits","objectBoundingBox");const n=NU._svgFactory.createElement("rect");s.append(n),n.setAttribute("width","1"),n.setAttribute("height","1"),n.setAttribute("fill","white");const a=NU._svgFactory.createElement("use");s.append(a),a.setAttribute("href",`#${W}`),a.setAttribute("stroke","none"),a.setAttribute("fill","black"),a.setAttribute("fill-rule","nonzero"),a.classList.add("mask")}const t=NU._svgFactory.createElement("use");d.append(t),t.setAttribute("href",`#${W}`),c&&t.setAttribute("mask",`url(#${c})`);const R=t.cloneNode();return d.append(R),t.classList.add("mainOutline"),R.classList.add("secondaryOutline"),this.updateProperties(d,l),F(this,JU).set(Z,d),Z}finalizeDraw(l,U){F(this,Y0).delete(l),this.updateProperties(l,U)}updateProperties(l,U){var c;if(!U)return;const{root:Z,bbox:d,rootClass:Q,path:V}=U,W=typeof l=="number"?F(this,JU).get(l):l;if(W){if(Z&&m(this,HZ,dN).call(this,W,Z),d&&m(c=NU,Ec,jn).call(c,W,d),Q){const{classList:t}=W;for(const[R,s]of Object.entries(Q))t.toggle(R,s)}if(V){const R=W.firstChild.firstChild;m(this,HZ,dN).call(this,R,V)}}}updateParent(l,U){if(U===this)return;const Z=F(this,JU).get(l);Z&&(F(U,YZ).append(Z),F(this,JU).delete(l),F(U,JU).set(l,Z))}remove(l){F(this,Y0).delete(l),F(this,YZ)!==null&&(F(this,JU).get(l).remove(),F(this,JU).delete(l))}destroy(){b(this,YZ,null);for(const l of F(this,JU).values())l.remove();F(this,JU).clear(),F(this,Y0).clear()}};YZ=new WeakMap,IW=new WeakMap,JU=new WeakMap,Y0=new WeakMap,Ec=new WeakSet,jn=function(l,[U,Z,d,Q]){const{style:V}=l;V.top=`${100*Z}%`,V.left=`${100*U}%`,V.width=`${100*d}%`,V.height=`${100*Q}%`},HZ=new WeakSet,ZN=function(){const l=NU._svgFactory.create(1,1,!0);return F(this,YZ).append(l),l.setAttribute("aria-hidden",!0),l},On=function(l,U){const Z=NU._svgFactory.createElement("clipPath");l.append(Z);const d=`clip_${U}`;Z.setAttribute("id",d),Z.setAttribute("clipPathUnits","objectBoundingBox");const Q=NU._svgFactory.createElement("use");return Z.append(Q),Q.setAttribute("href",`#${U}`),Q.classList.add("clip"),d},dN=function(l,U){for(const[Z,d]of Object.entries(U))d===null?l.removeAttribute(Z):l.setAttribute(Z,d)},h(NU,Ec);let qt=NU;globalThis.pdfjsTestingUtils={HighlightOutliner:Kt},g.AbortException,g.AnnotationEditorLayer,g.AnnotationEditorParamsType,g.AnnotationEditorType,g.AnnotationEditorUIManager,g.AnnotationLayer,g.AnnotationMode,g.ColorPicker,g.DOMSVGFactory,g.DrawLayer,g.FeatureTest;var Ka=g.GlobalWorkerOptions;g.ImageKind,g.InvalidPDFException,g.MissingPDFException,g.OPS,g.OutputScale,g.PDFDataRangeTransport,g.PDFDateString,g.PDFWorker,g.PasswordResponses,g.PermissionFlag,g.PixelsPerInch,g.RenderingCancelledException,g.TextLayer,g.TouchManager,g.UnexpectedResponseException,g.Util,g.VerbosityLevel,g.XfaLayer,g.build,g.createValidAbsoluteUrl,g.fetchData;var $N=g.getDocument;g.getFilenameFromUrl,g.getPdfFilenameFromUrl,g.getXfaPageViewport,g.isDataScheme,g.isPdfFile,g.noContextMenu,g.normalizeUnicode,g.setLayerDimensions,g.shadow,g.stopEvent,g.version;const Ha=async({file:N,url:l})=>{try{if(l)return await $N(l).promise;if(N){const U=await N.arrayBuffer();return await $N(U).promise}else throw new Error("No valid source provided for the PDF")}catch(U){throw console.error("Error loading PDF:",U),U}},va=async(N,l)=>{try{const U=N.getViewport({scale:.2}),Z=l/U.width,d=N.getViewport({scale:Z}),Q=document.createElement("canvas"),V=Q.getContext("2d");if(!V)throw new Error("Unable to get 2D canvas context");return Q.width=d.width,Q.height=d.height,await N.render({canvasContext:V,viewport:d}).promise,Q.toDataURL()}catch(U){throw console.error("Error creating PDF thumbnail:",U),new Error("Failed to generate PDF thumbnail")}},Pa={generatePdfThumbnail:async({file:N,url:l,width:U})=>{try{const d=await(await Ha({file:N,url:l})).getPage(1);return await va(d,U)}catch(Z){throw console.error("Error generating PDF thumbnail:",Z),Z}},generateWordThumbnail:async({url:N,height:l=180,width:U=300})=>{try{const Q=(await(await fetch(N)).text()).split(`
`).slice(0,3),V=document.createElement("canvas"),W=V.getContext("2d");if(!W)throw new Error("Canvas context not available");return V.width=U,V.height=l,W.fillStyle="white",W.fillRect(0,0,U,l),W.font="14px Arial",W.fillStyle="black",Q.forEach((c,t)=>{W.fillText(c.substring(0,40),20,30+t*25)}),V.toDataURL()}catch(Z){throw console.error("Error generating Word thumbnail:",Z),Z}}};function fa({documentType:N}){return Xl.jsx("div",{style:{width:"100%",height:"100%"},children:Xl.jsxs("span",{style:{width:"100%",height:"100%",display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center"},children:[Xl.jsx("span",{className:"mb-4",children:N==="pdf"?Xl.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:"6",height:"6",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"lucide lucide-file-text",children:[Xl.jsx("path",{d:"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"}),Xl.jsx("path",{d:"M14 2v4a2 2 0 0 0 2 2h4"}),Xl.jsx("path",{d:"M10 9H8"}),Xl.jsx("path",{d:"M16 13H8"}),Xl.jsx("path",{d:"M16 17H8"})]}):Xl.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:"6",height:"6",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"lucide lucide-image",children:[Xl.jsx("rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",ry:"2"}),Xl.jsx("circle",{cx:"9",cy:"9",r:"2"}),Xl.jsx("path",{d:"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21"})]})}),Xl.jsx("span",{children:"Generating preview..."})]})})}const Aa="data:text/javascript;base64,";Ka.workerSrc=Aa;const _a={container:(N,l)=>({width:N,height:l,borderRadius:12,display:"flex",justifyContent:"center",alignItems:"center",marginBlock:10,position:"relative"})},qa=({url:N,file:l,fit:U="cover",width:Z=300,height:d=210,documentType:Q,style:V,className:W,imgClassName:c})=>{if(!N&&!l)return null;const[t,R]=ll.useState(""),[s,n]=ll.useState(!0),[a,i]=ll.useState(null),{generatePdfThumbnail:M,generateWordThumbnail:G}=Pa,J=ll.useMemo(()=>Q==="pdf"?"PDF thumbnail":"Image preview",[Q]);return ll.useEffect(()=>{(async()=>{try{if(n(!0),i(null),Q==="pdf"){const X=await M({...l&&{file:l},...N&&{url:N},width:Z});R(X)}else R(N)}catch{i("Failed to load preview")}finally{n(!1)}})()},[N,Z,Q]),Xl.jsx("div",{className:W,style:{..._a.container(Z,d),...V},children:s?Xl.jsx(fa,{documentType:Q}):a?Xl.jsxs("div",{style:{width:"100%",height:"100%",display:"flex",alignItems:"center",justifyContent:"center",gap:3},children:[Xl.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"lucide lucide-file-x-2",children:[Xl.jsx("path",{d:"M4 22h14a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v4"}),Xl.jsx("path",{d:"M14 2v4a2 2 0 0 0 2 2h4"}),Xl.jsx("path",{d:"m8 12.5-5 5"}),Xl.jsx("path",{d:"m3 12.5 5 5"})]}),a]}):Xl.jsx("img",{src:t,className:c,alt:J,style:{width:"100%",height:"100%",objectFit:U,objectPosition:Q==="image"?"center center":"top left"}})})};dl.DocumentPreview=qa,Object.defineProperty(dl,Symbol.toStringTag,{value:"Module"})});
